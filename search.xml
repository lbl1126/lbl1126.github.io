<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>log</title>
    <url>/2021/12/11/test/</url>
    <content><![CDATA[<p>2021.12.11</p>
<p>布置了资源站页面。</p>
]]></content>
  </entry>
  <entry>
    <title>log</title>
    <url>/2021/12/13/log/</url>
    <content><![CDATA[<p>登录和注册页面打算不整了，大家随便来看就好。。。</p>
]]></content>
  </entry>
  <entry>
    <title>关于登录和注册板块。。。</title>
    <url>/2021/12/13/%E5%85%B3%E4%BA%8E%E7%99%BB%E5%BD%95%E5%92%8C%E6%B3%A8%E5%86%8C%E6%9D%BF%E5%9D%97%E3%80%82%E3%80%82%E3%80%82/</url>
    <content><![CDATA[<p>都留着吧，之后说不定用得上</p>
]]></content>
  </entry>
  <entry>
    <title>C 语言实验 2</title>
    <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-2/</url>
    <content><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h4 id="二-多维数组"><a href="#二-多维数组" class="headerlink" title="二.多维数组"></a>二.多维数组</h4><h4 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h4><p>七段显示器输出。计算器、电子手表和其它电子设备经常依靠七段显示器进行数值的输出。为了组成数字，这些设备需要“打开”7个显示段中的某些部分，同时“关闭”其它部分。假设需要设置一个数组来记住显示每个数字时需要“打开”的显示段。试编写一个程序，将输入进来的一位十进制数字转换成对应的显示段二进制编码，并实现显示码输出。各显示段的标号如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">   int max_save[10][7]=&#123;&#123;1,1,1,1,1,1,0&#125;,</span><br><span class="line">                        &#123;0,1,1,0,0,0,0&#125;,</span><br><span class="line">                        &#123;1,1,0,1,1,0,1&#125;,</span><br><span class="line">                        &#123;1,1,1,1,0,0,1&#125;,</span><br><span class="line">                        &#123;0,1,1,0,0,1,1&#125;,</span><br><span class="line">                        &#123;1,0,1,1,0,1,1&#125;,</span><br><span class="line">                        &#123;1,0,1,1,1,1,1&#125;,</span><br><span class="line">                        &#123;1,1,1,0,0,0,0&#125;,</span><br><span class="line">                        &#123;1,1,1,1,1,1,1&#125;,</span><br><span class="line">                        &#123;1,1,1,1,0,1,1&#125;&#125;;</span><br><span class="line">   int num,col;</span><br><span class="line">   scanf(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line">   /*模拟七段数码显示管分5行输出，</span><br><span class="line">    *奇数行只输出空格或者-,</span><br><span class="line">    *偶数行只输出空格或者|。*/</span><br><span class="line">   //start</span><br><span class="line">       <span class="keyword">if</span>(max_save[num][0]==1) <span class="built_in">printf</span>(<span class="string">&quot; - \n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;   \n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(max_save[num][5]==1 &amp;&amp; max_save[num][1]==1) <span class="built_in">printf</span>(<span class="string">&quot;| |\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(max_save[num][5]==1) <span class="built_in">printf</span>(<span class="string">&quot;|  \n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(max_save[num][1]==1) <span class="built_in">printf</span>(<span class="string">&quot;  |\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;   \n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(max_save[num][6]==1) <span class="built_in">printf</span>(<span class="string">&quot; - \n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;   \n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(max_save[num][4]==1 &amp;&amp; max_save[num][2]==1) <span class="built_in">printf</span>(<span class="string">&quot;| |\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(max_save[num][4]==1) <span class="built_in">printf</span>(<span class="string">&quot;|  \n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(max_save[num][2]==1) <span class="built_in">printf</span>(<span class="string">&quot;  |\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;   \n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(max_save[num][3]==1) <span class="built_in">printf</span>(<span class="string">&quot; - \n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;   \n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   //end</span><br><span class="line">   <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h5 id="2-运用函数，将一个二方阵转置后输出。"><a href="#2-运用函数，将一个二方阵转置后输出。" class="headerlink" title="2. 运用函数，将一个二方阵转置后输出。"></a>2. 运用函数，将一个二方阵转置后输出。</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#define N 5</span></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">   void transfor(int a[][N]);</span><br><span class="line">   int array[N][N],i,j;</span><br><span class="line">   <span class="keyword">for</span>(i=0;i&lt;N;i++)</span><br><span class="line">      <span class="keyword">for</span>(j=0;j&lt;N;j++)</span><br><span class="line">         scanf(<span class="string">&quot;%d&quot;</span>,&amp;array[i][j]);</span><br><span class="line">   transfor(array);</span><br><span class="line">   <span class="keyword">for</span>(i=0;i&lt;N;i++)</span><br><span class="line">      <span class="keyword">for</span>(j=0;j&lt;N;j++)</span><br><span class="line">         j!=N-1?<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,array[i][j]):<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,array[i][j]);</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line">void transfor(int a[][N])</span><br><span class="line">&#123;</span><br><span class="line">//start</span><br><span class="line">int b[5][5],i,j;</span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;5;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(j=0;j&lt;5;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[i][j]=a[5-i-1][5-j-1];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;5;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(j=0;j&lt;5;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i][j]=b[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//end</span><br><span class="line">&#125;```</span><br><span class="line"></span><br><span class="line"><span class="comment">### 3. </span></span><br><span class="line">运用函数，将一个二维矩阵转置后输出。</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#define R 3</span></span><br><span class="line"><span class="comment">#define C 5</span></span><br><span class="line"><span class="comment">#define N (R&gt;C?R:C)</span></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">   void transfor(int a[][N]);</span><br><span class="line">   int array[N][N],i,j;</span><br><span class="line">   <span class="keyword">for</span>(i=0;i&lt;R;i++)</span><br><span class="line">      <span class="keyword">for</span>(j=0;j&lt;C;j++)</span><br><span class="line">         scanf(<span class="string">&quot;%d&quot;</span>,&amp;array[i][j]);</span><br><span class="line">   transfor(array);</span><br><span class="line">   <span class="keyword">for</span>(i=0;i&lt;C;i++)</span><br><span class="line">      <span class="keyword">for</span>(j=0;j&lt;R;j++)</span><br><span class="line">         j!=R-1?<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,array[i][j]):<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,array[i][j]);</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line">void transfor(int a[][N])</span><br><span class="line">&#123;</span><br><span class="line">//start</span><br><span class="line">int i,j,b[5][3];</span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;5;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(j=0;j&lt;3;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[i][j]=a[j][i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;5;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(j=0;j&lt;3;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i][j]=b[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//end</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h4><p>国际大学生程序设计竞赛已经发展成为最具影响力的大学生计算机竞赛，ACM-ICPC以团队的形式代表各学校参赛，每队由3名队员组成，一个队每做出来一个题该队就会获得该题对应颜色的气球，气球越多就说明该队做的题目越多。当然如果一个颜色的气球越多就说明该气球对应的题也就越简单。现在给你很多很多的颜色的气球，问你那个颜色的气球最多。input 假设只有6种颜色，green，red，blue，pink，orange，black。输入数据有多组，每组数据开始给出一个整数n代表接下来有n个气球，接下来有n行，每行输入一种颜色，n &lt;= 100output 输出个数最多的气球的颜色（题目保证个数最多的气球有且仅有一种颜色，数量相同按样本出现先后为准，以最后出现的颜色计）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int i,num[6],n,max,maxl;</span><br><span class="line">    char a[6][10]=&#123;<span class="string">&quot;green&quot;</span>,<span class="string">&quot;red&quot;</span>,<span class="string">&quot;blue&quot;</span>,<span class="string">&quot;pink&quot;</span>,<span class="string">&quot;orange&quot;</span>,<span class="string">&quot;black&quot;</span>&#125;;</span><br><span class="line">    char temp[20];</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;6;i++) num[i]=0;</span><br><span class="line">        <span class="keyword">while</span>(n--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s&quot;</span>,temp);</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;6;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(strcmp(temp,a[i])==0)</span><br><span class="line">                &#123;</span><br><span class="line">                    num[i]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            max=-999;</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;6;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(num[i]&gt;max)</span><br><span class="line">                &#123;</span><br><span class="line">                     max=num[i];</span><br><span class="line">                     maxl=i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,a[maxl]);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h3><p>分词输出。输入一个句子（长度小于100），将其中的单词分割出来（单词个数不超过15，每个单词的长度不超过10），而后每行输出一个单词。提示您：单词应该以空白符后的第一个字母开始，以空白符或标点符号前的最后一个字母结束。输入数据有多组。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#define LEN 100</span></span><br><span class="line"><span class="comment">#define ROW 15</span></span><br><span class="line"><span class="comment">#define COL 10</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">   char array[LEN];</span><br><span class="line">   char word[ROW][COL];</span><br><span class="line">   int i,j,is_char_ahead; //is_char_ahead:记录前一个字符是否为字母</span><br><span class="line">   int row,col; //row:记录单词的个数;col:记录单词中的字母</span><br><span class="line">   <span class="keyword">while</span>(gets(array)!=NULL)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">for</span>(i=0;i&lt;ROW;i++)</span><br><span class="line">         <span class="keyword">for</span>(j=0;j&lt;COL;j++)</span><br><span class="line">            word[i][j] = 0;</span><br><span class="line">      i=0;</span><br><span class="line">      <span class="keyword">while</span>((array[i]&lt;<span class="string">&#x27;a&#x27;</span>||array[i]&gt;<span class="string">&#x27;z&#x27;</span>)&amp;&amp;</span><br><span class="line">            (array[i]&lt;<span class="string">&#x27;A&#x27;</span>||array[i]&gt;<span class="string">&#x27;Z&#x27;</span>))</span><br><span class="line">        i++; //考虑到用gets函数，略过首单词前面的空白符</span><br><span class="line">      is_char_ahead = 0;</span><br><span class="line">      row = 0;</span><br><span class="line">      <span class="keyword">while</span>(1)</span><br><span class="line">      &#123;</span><br><span class="line">        //start</span><br><span class="line">        int l=strlen(array);</span><br><span class="line">        j=0;</span><br><span class="line">        int k=0;</span><br><span class="line">        int flag;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;l;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            k=0;</span><br><span class="line">            flag=0;</span><br><span class="line">            <span class="keyword">while</span>(array[i]!=<span class="string">&#x27; &#x27;</span> &amp;&amp; array[i]!=<span class="string">&#x27;.&#x27;</span> &amp;&amp; array[i]!=<span class="string">&#x27;?&#x27;</span> &amp;&amp; array[i]!=<span class="string">&#x27;!&#x27;</span> &amp;&amp; array[i]!=39 &amp;&amp; array[i]!=<span class="string">&#x27;-&#x27;</span> &amp;&amp; array[i]!=<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                word[j][k++]=array[i];</span><br><span class="line">                flag=1;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">if</span>(i&gt;=l) <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag==1)</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        row=j;</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line">        //end</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">for</span>(i=0;i&lt;row;i++)</span><br><span class="line">        <span class="keyword">if</span>(word[i][0]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; word[i][0]&lt;=<span class="string">&#x27;Z&#x27;</span> || word[i][0]&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; word[i][0]&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,word[i]);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>C</tag>
        <tag>基础</tag>
        <tag>锐格</tag>
      </tags>
  </entry>
  <entry>
    <title>C 语言实验 3</title>
    <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-3/</url>
    <content><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h5 id="三-指针与数组"><a href="#三-指针与数组" class="headerlink" title="三.指针与数组"></a>三.指针与数组</h5><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>请将输入的三个整数按照从小到大的顺序输出。整数的范围从。输入数据有多组，每组输入三个整型数据，采用指针编程实现将三个数从小到大排序，排序后输出。要求排序部分用自定义函数实现。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">int swap(int *x,int *y,int *z);</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int a,b,c;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d %d %d&quot;</span>,&amp;a,&amp;b,&amp;c)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        swap(&amp;a,&amp;b,&amp;c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>,a,b,c);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">int swap(int *x,int *y,int *z)</span><br><span class="line">&#123;</span><br><span class="line">    int t;</span><br><span class="line">    <span class="keyword">if</span>(*x &gt; *y)</span><br><span class="line">    &#123;</span><br><span class="line">        t=*x;</span><br><span class="line">        *x=*y;</span><br><span class="line">        *y=t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(*x&gt;*z)</span><br><span class="line">    &#123;</span><br><span class="line">        t=*x;</span><br><span class="line">        *x=*z;</span><br><span class="line">        *z=t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(*y&gt;*z)</span><br><span class="line">    &#123;</span><br><span class="line">        t=*y;</span><br><span class="line">        *y=*z;</span><br><span class="line">        *z=t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>利用指针完成对一个数组中大于指定数据的过滤，并将过滤后的数据存储并输出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,x,i,num;</span><br><span class="line">    int a[200],b[200];</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;x)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++) scanf(<span class="string">&quot;%d&quot;</span>,a+i);</span><br><span class="line">        num=save(a,n,x,b);</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">int save(int *a,int n,int x,int *b)</span><br><span class="line">&#123;</span><br><span class="line">    int j=0,k=0;</span><br><span class="line">    <span class="keyword">for</span>(j;j&lt;n;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[j]&gt;=x)</span><br><span class="line">            b[k++] = a[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> k;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>程序完成对输入的整数，是否在符合要求的范围内的检查功能。如果在规定的次数内输入了符合要求的数据，函数返回，在规定的次数内输入的数据均不在符合要求的范围内，函数返回0。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,min,max,t,i;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d %d %d&quot;</span>,&amp;n,&amp;min,&amp;max)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">            <span class="keyword">if</span>(t&gt;=min &amp;&amp; t&lt;=max)</span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,1,t);</span><br><span class="line">                 <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i==n-1)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,0,t);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>本题利用指针完成将一个数字字符串转换为int整数的程序。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    char a[100];</span><br><span class="line">    <span class="keyword">while</span>(gets(a))</span><br><span class="line">    &#123;</span><br><span class="line">        int l=strlen(a);</span><br><span class="line">        <span class="keyword">if</span>(a[1]&lt;<span class="string">&#x27;0&#x27;</span> || a[1]&gt;<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,0);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;l;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i==0)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(a[0]==<span class="string">&#x27;+&#x27;</span>) <span class="built_in">continue</span>;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(a[0] == <span class="string">&#x27;-&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(a[0]&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; a[0]&lt;=<span class="string">&#x27;9&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a[0]);</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(a[0]==<span class="string">&#x27; &#x27;</span>) <span class="built_in">continue</span>;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,0);</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(a[i]&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; a[i]&lt;=<span class="string">&#x27;9&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a[i]);</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(l==1)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h3><p>本题用指针完成在一个已经排好序的数组中，插入一个新数据，插入过程不改变原有的顺序，插入后的数组依然是排好顺序的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,flag;</span><br><span class="line">    double a[100],t,tmp;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=0;</span><br><span class="line">        scanf(<span class="string">&quot;%lf&quot;</span>,&amp;t);</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%lf&quot;</span>,a+i);</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;t &amp;&amp; flag==0)</span><br><span class="line">            &#123;</span><br><span class="line">                tmp=a[i];</span><br><span class="line">                a[i]=t;</span><br><span class="line">                a[i+1]=tmp;</span><br><span class="line">                i++;</span><br><span class="line">                n++;</span><br><span class="line">                flag=1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.2lf &quot;</span>,*(a+i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6"><a href="#6" class="headerlink" title="6."></a>6.</h3><p>用指针完成一个双精度矩阵最大值的查找及输出。矩阵是一个不超过十行十列的实数矩阵。请分别编写矩阵输入函数、矩阵中最大值及其位置查找两个自定义函数求解。在这两个函数中，矩阵元素的遍历查找和赋值通过指针实现。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">void <span class="keyword">in</span>(int n,int m);</span><br><span class="line">double a[15][15];</span><br><span class="line">double max;</span><br><span class="line">int maxi,maxj;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,m;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;m)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">in</span>(n,m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2lf %d %d\n&quot;</span>,max,maxi+1,maxj+1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">void <span class="keyword">in</span>(int n,int m)</span><br><span class="line">&#123;</span><br><span class="line">    int i,j;</span><br><span class="line">    max=-1;</span><br><span class="line">    maxi=maxj=0;</span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=0;j&lt;m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%lf&quot;</span>,(*(a+i))+j);</span><br><span class="line">            <span class="keyword">if</span>(a[i][j]&gt;max)&#123;</span><br><span class="line">                 max=a[i][j];</span><br><span class="line">                 maxi=i;</span><br><span class="line">                 maxj=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="7"><a href="#7" class="headerlink" title="7."></a>7.</h3><p>编程实现在一个字符串中取出一部分字符的功能。取出的字符组成一个新字符串。</p>
<p><code>bash #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; char a[105],b[105]; int n,m; int main() &#123;     while(scanf(&quot;%s&quot;,a)!=-1)     &#123;         scanf(&quot;%d %d&quot;,&amp;n,&amp;m);         select(n,m);         printf(&quot;%s\n&quot;,b);     &#125; &#125; void select(int n,int m) &#123;     int i,j=0;     for(i=n-1;i&lt;m;i++)     &#123;         b[j++]=a[i];     &#125;     b[j]=&#39;\0&#39;; &#125;</code></p>
]]></content>
      <tags>
        <tag>C</tag>
        <tag>基础</tag>
        <tag>锐格</tag>
      </tags>
  </entry>
  <entry>
    <title>C 语言实验 4</title>
    <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-4/</url>
    <content><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h5 id="四-指针与函数"><a href="#四-指针与函数" class="headerlink" title="四.指针与函数"></a>四.指针与函数</h5><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>某班级期末考试科目为数学、英语和物理。有最多不超过人参加考试。请编程计算：每个同学的总分和平均分；每门课程的总分和平均分？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">double a[25][5];</span><br><span class="line">double sub[5];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,j;</span><br><span class="line">    double sum;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;5;i++) sub[i]=0;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%lf %lf %lf&quot;</span>,&amp;a[i][1],&amp;a[i][2],&amp;a[i][3]);</span><br><span class="line">            sub[0]+=a[i][1];</span><br><span class="line">            sub[1]+=a[i][2];</span><br><span class="line">            sub[2]+=a[i][3];</span><br><span class="line">            sum=(a[i][1]+a[i][2]+a[i][3]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.2lf %.2lf\n&quot;</span>,sum,(sum/3));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;3;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.2lf %.2lf\n&quot;</span>,sub[i],sub[i]/n);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>有一个用空格，逗号或是句号分隔的许多英文单词组成的字符串（分隔的空格可以是多个）。请编写程序将这些单词分开并输出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">char a[2000];</span><br><span class="line">char b[1000][20];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,j,wordnum,flag,t,tt,c,*o;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d\n&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        t=n;</span><br><span class="line">        <span class="keyword">while</span>(t--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;1000;i++) b[i][0]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">            j=0;</span><br><span class="line">            flag=0;</span><br><span class="line">            wordnum=0;</span><br><span class="line">            gets(a);</span><br><span class="line">            <span class="keyword">if</span>(a[0]!=<span class="string">&#x27;\0&#x27;</span> &amp;&amp; a[0]!=<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">for</span>(i=0;a[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]!=<span class="string">&#x27; &#x27;</span> &amp;&amp; a[i]!= <span class="string">&#x27;,&#x27;</span> &amp;&amp; a[i]!=<span class="string">&#x27;.&#x27;</span> &amp;&amp; ((a[i]&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; a[i]&lt;=<span class="string">&#x27;z&#x27;</span>) || (a[i]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; a[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)))</span><br><span class="line">                &#123;</span><br><span class="line">                    b[wordnum][j++]=a[i];</span><br><span class="line">                    flag=1;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(flag==1)</span><br><span class="line">                    &#123;</span><br><span class="line">                        b[wordnum][j]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">                        wordnum++;</span><br><span class="line">                        tt=j;</span><br><span class="line">                        j=0;</span><br><span class="line">                        flag=0;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==<span class="string">&#x27;\0&#x27;</span>) wordnum++;</span><br><span class="line">            <span class="keyword">if</span>(a[i-1]&lt;<span class="string">&#x27;a&#x27;</span> || a[i-1]&gt;<span class="string">&#x27;z&#x27;</span> || a[i-1]&lt;<span class="string">&#x27;A&#x27;</span> || a[i-1]&gt;<span class="string">&#x27;Z&#x27;</span>) wordnum--;</span><br><span class="line">            b[wordnum][j]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;wordnum+1;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i!=wordnum)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>,b[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,b[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;分出了%d个单词\n&quot;</span>,wordnum);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>程序完成在一些已知字符串中查找含有“<em>”最多的字符串的功能。要求用返回指针值的函数完成：找到这个字符串，函数返回“</em>”最多的字符串的首地址。并将找到的字符串输出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,num[105],j,max,maxl;</span><br><span class="line">    char a[105][55];</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;105;i++) num[i]=0;</span><br><span class="line">        getchar();</span><br><span class="line">        char c=getchar();</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">&#x27;\0&#x27;</span>) n++;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s&quot;</span>,(a+i));</span><br><span class="line">            <span class="keyword">for</span>(j=0;a[i][j]!=<span class="string">&#x27;\0&#x27;</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i][j]==<span class="string">&#x27;*&#x27;</span>) num[i]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">            &#123;</span><br><span class="line">                max=num[0];</span><br><span class="line">                maxl=0;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(num[i]&gt;max)</span><br><span class="line">                &#123;</span><br><span class="line">                    max=num[i];</span><br><span class="line">                    maxl=i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,a[maxl]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>用申请的动态开辟的内存空间存放()个字符串，每个字符串的长度不超过50，将其保存，后排序输出。要求：每个字符串占用的空间是用动态开辟的内存分配的。字符串排序和输出用自定义函数实现。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,j,t;</span><br><span class="line">    char (*p)[50];</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        getchar();getchar();</span><br><span class="line">        p=(char (*)[50])calloc(n,sizeof(char[50]));</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            gets((p+i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(j=i+1;j&lt;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                t=strcmp(p+i,p+j);</span><br><span class="line">                <span class="keyword">if</span>(t&gt;0)</span><br><span class="line">                &#123;</span><br><span class="line">                    char tmp[50];</span><br><span class="line">                    strcpy(tmp,p+i);</span><br><span class="line">                    strcpy(p+i,p+j);</span><br><span class="line">                    strcpy(p+j,tmp);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,p+i);</span><br><span class="line">        &#125;</span><br><span class="line">        free(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h3><p>编写程序用迭代法求方程。请用牛顿迭代法编程完成求以下三个方程的根。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;math.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    //注意几点：exp函数，负数转换，</span><br><span class="line">    int n;</span><br><span class="line">    double x,y,deduct;</span><br><span class="line">    double cha,t;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d%lf%lf&quot;</span>,&amp;n,&amp;x,&amp;deduct)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        cha=1;</span><br><span class="line">        <span class="keyword">if</span>(n==1)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(cha&gt;=deduct)</span><br><span class="line">            &#123;</span><br><span class="line">                t=x;</span><br><span class="line">                x=x-(x*x*x-x*x-1)/(3*x*x-2*x);</span><br><span class="line">                cha=t-x;</span><br><span class="line">                <span class="keyword">if</span>(cha&lt;=0) cha=0-cha;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n==2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(cha&gt;=deduct)</span><br><span class="line">            &#123;</span><br><span class="line">                t=x;</span><br><span class="line">                x=x-(x*x*x*x-3*x+1)/(4*x*x*x-3);</span><br><span class="line">                cha=t-x;</span><br><span class="line">                <span class="keyword">if</span>(cha&lt;0) cha=0-cha;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n==3)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(cha&gt;=deduct)</span><br><span class="line">            &#123;</span><br><span class="line">                t=x;</span><br><span class="line">                x=x-(x-exp(-x))/(1+exp(-x));</span><br><span class="line">                cha=t-x;</span><br><span class="line">                <span class="keyword">if</span>(cha&lt;0) cha=0-cha;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %.2e %.5lf\n&quot;</span>,n,deduct,x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>C</tag>
        <tag>基础</tag>
        <tag>锐格</tag>
      </tags>
  </entry>
  <entry>
    <title>C 语言实验 5</title>
    <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-5/</url>
    <content><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h5 id="五-结构体"><a href="#五-结构体" class="headerlink" title="五.结构体"></a>五.结构体</h5><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>从键盘读入学生的信息：学号（8位整数）、姓名（20个字符）、高等数学课程的成绩（2位小数）。 然后使用结构体来将这些数据读入并输出。输出时注意字段之间是2个空格！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char num[10];</span><br><span class="line">    char name[25];</span><br><span class="line">    double score;</span><br><span class="line">&#125;stu;</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    getchar();</span><br><span class="line">    int i;</span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        scanf(<span class="string">&quot;%s&quot;</span>,stu.num);</span><br><span class="line">        getchar();</span><br><span class="line">        scanf(<span class="string">&quot;%s&quot;</span>,stu.name);</span><br><span class="line">        getchar();</span><br><span class="line">        scanf(<span class="string">&quot;%lf&quot;</span>,&amp;stu.score);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s  %s  %.2lf\n&quot;</span>,stu.num,stu.name,stu.score);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>高级语言这门课程已经考完期末试了，现在我们来统计一下这门课程的成绩分布。读入学生的信息：学号（8位整数）、姓名（20个字符）、高级语言程序设计这门课程的期末成绩（2位小数）。如果成绩大于等于80分，评定为优秀；如果成绩大于等于60分，且小于80分，评定为良好；成绩小于60分为不及格；现在让你统计优秀、良好和不及格的人数。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char num[10];</span><br><span class="line">    char name[25];</span><br><span class="line">    double score;</span><br><span class="line">&#125;stu;</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        int g,nb,f=0;</span><br><span class="line">        g=nb=0;</span><br><span class="line">        getchar();</span><br><span class="line">        int i;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s %s %lf&quot;</span>,stu.num,stu.name,&amp;stu.score);</span><br><span class="line">            <span class="keyword">if</span>(stu.score&gt;=80.0) g++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(stu.score &gt;=60) nb++;</span><br><span class="line">            <span class="keyword">else</span> f++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>,g,nb,f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>本学期已经结束了，现在我们来统计一下学生的考试成绩。读入学生的信息：学号（8位整数）、姓名（20个字符）、高数、线代、英语和C语言这4门课程的期末成绩（2位小数）。请你帮助计算这4门课程的总分和平均分，并输出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char num[10];</span><br><span class="line">    char name[25];</span><br><span class="line">    double math;</span><br><span class="line">    double line;</span><br><span class="line">    double eng;</span><br><span class="line">    double c;</span><br><span class="line">&#125;stu;</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    double aver,sum;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        getchar();</span><br><span class="line">        int i;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s %s %lf %lf %lf %lf&quot;</span>,stu.num,stu.name,&amp;stu.math,&amp;stu.line,&amp;stu.eng,&amp;stu.c);</span><br><span class="line">            sum=stu.math+stu.line+stu.eng+stu.c;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %s %.2lf %.2lf\n&quot;</span>,stu.num,stu.name,sum,sum/4);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>从键盘输入一些学生的学号（int），姓名(char)，高数成绩，线代成绩，英语成绩和C语言成绩(四门成绩为double)，请你输出总分最高的学生的学号和姓名！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char num[10];</span><br><span class="line">    char name[25];</span><br><span class="line">    double math;</span><br><span class="line">    double line;</span><br><span class="line">    double eng;</span><br><span class="line">    double c;</span><br><span class="line">&#125;stu[105];</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,maxl;</span><br><span class="line">    double aver,sum,max;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        getchar();</span><br><span class="line">        int i;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s %s %lf %lf %lf %lf&quot;</span>,stu[i].num,stu[i].name,&amp;stu[i].math,&amp;stu[i].line,&amp;stu[i].eng,&amp;stu[i].c);</span><br><span class="line">            sum=stu[i].math+stu[i].line+stu[i].eng+stu[i].c;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">            &#123;</span><br><span class="line">                max=sum;</span><br><span class="line">                maxl=i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(sum&gt;max)</span><br><span class="line">                &#123;</span><br><span class="line">                    max=sum;</span><br><span class="line">                    maxl=i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>,stu[maxl].num,stu[maxl].name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h3><p>大表哥最近想去看电影，但是他不知道和谁去看，现在你有一份大表哥的同学录，大表哥最近很garry，你能帮助大表哥找出最符合他要求的人去陪他看电影吗？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS.大表哥喜欢综合分数最高的。综合分数=（颜值+学习成绩+性格）/3。其中大表哥不能和男人在一起（数据输入保证有女性）。</span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char name[50];</span><br><span class="line">    char sex;</span><br><span class="line">    double face;</span><br><span class="line">    double study;</span><br><span class="line">    double character;</span><br><span class="line">    double sum;</span><br><span class="line">&#125;stu[105];</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    int i,maxl;</span><br><span class="line">    double max=-1;</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        scanf(<span class="string">&quot;%s %c %lf %lf %lf&quot;</span>,stu[i].name, &amp;stu[i].sex, &amp;stu[i].face,&amp;stu[i].study,&amp;stu[i].character);</span><br><span class="line">        stu[i].sum=stu[i].face+stu[i].study+stu[i].character;</span><br><span class="line">        <span class="keyword">if</span>(stu[i].sex==<span class="string">&#x27;f&#x27;</span> &amp;&amp; stu[i].sum&gt;max)</span><br><span class="line">        &#123;</span><br><span class="line">            max=stu[i].sum;</span><br><span class="line">            maxl=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;I choose %s,and her score is %.2lf.\n&quot;</span>,stu[maxl].name,stu[maxl].sum/3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>C</tag>
        <tag>基础</tag>
        <tag>锐格</tag>
      </tags>
  </entry>
  <entry>
    <title>C  语言实验 6</title>
    <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-6/</url>
    <content><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h5 id="六-结构体数组"><a href="#六-结构体数组" class="headerlink" title="六.结构体数组"></a>六.结构体数组</h5><ol>
<li>结构体—求n个学生的平均成绩：对给定的n个同学的成绩，求其平均成绩，并输出高于平均分之上的所有同学。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char num[10];</span><br><span class="line">    double score;</span><br><span class="line">&#125;stu[105];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i;</span><br><span class="line">    double sum,aver;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        sum=0;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s %lf&quot;</span>,stu[i].num,&amp;stu[i].score);</span><br><span class="line">            sum+=stu[i].score;</span><br><span class="line">        &#125;</span><br><span class="line">        aver=sum/n;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].score&gt;aver)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%8s %.1lf\n&quot;</span>,stu[i].num,stu[i].score);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>读入学生的信息：学号（8位整数,以2014开头即2014****）、姓名（20个字符，不包含空格）、学生类型（1位整数）和成绩（2位小数）。学生类型数据中，1表示普通学生，2表示体优生，3表示基地班学生，要求统计不及格的学生人数。不同类型的学生及格分数标准不同，对于普通学生，及格标准为60分，对于体优生，及格标准为50分，对于基地班学生，及格标准为65。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char num[10];</span><br><span class="line">    char name[20];</span><br><span class="line">    int <span class="built_in">type</span>;</span><br><span class="line">    double score;</span><br><span class="line">&#125;stu[105];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,num;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        num=0;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s%s%d%lf&quot;</span>,stu[i].num,stu[i].name,&amp;stu[i].<span class="built_in">type</span>,&amp;stu[i].score);</span><br><span class="line">            <span class="keyword">if</span>(stu[i].<span class="built_in">type</span>==1 &amp;&amp; stu[i].score&lt;60) num++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(stu[i].<span class="built_in">type</span>==2 &amp;&amp; stu[i].score&lt;50) num++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(stu[i].<span class="built_in">type</span>==3 &amp;&amp; stu[i].score&lt;65) num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %s %d %.2lf\n&quot;</span>,stu[i].num,stu[i].name,stu[i].<span class="built_in">type</span>,stu[i].score);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>某校的惯例是在每学期的期末考试之后发放奖学金。发放的奖学金共有五种，获取的条件各自不同。现在给出若干学生的相关数据，请计算哪些同学获得的奖金总数最高（假设总有同学能满足获得奖学金的条件）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char name[25];</span><br><span class="line">    int final;</span><br><span class="line">    int frombitch;</span><br><span class="line">    char tutor;</span><br><span class="line">    char fromwest;</span><br><span class="line">    int article;</span><br><span class="line">    int money;</span><br><span class="line">&#125;stu[105];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,sum,max;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        int i;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;105;i++) stu[i].money=0;</span><br><span class="line">        sum=0;</span><br><span class="line">        max=-1;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s %d %d %c %c %d&quot;</span>,stu[i].name,</span><br><span class="line">&amp;stu[i].final,&amp;stu[i].frombitch,&amp;stu[i].tutor,&amp;stu[i].fromwest,&amp;stu[i].article);</span><br><span class="line">            <span class="keyword">if</span>(stu[i].article&gt;=1 &amp;&amp; stu[i].final&gt;80) stu[i].money+=8000;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].final&gt;85 &amp;&amp; stu[i].frombitch&gt;80) stu[i].money+=4000;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].final&gt;90) stu[i].money+=2000;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].fromwest==<span class="string">&#x27;Y&#x27;</span> &amp;&amp; stu[i].final&gt;85) stu[i].money+=1000;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].tutor==<span class="string">&#x27;Y&#x27;</span> &amp;&amp; stu[i].frombitch&gt;80) stu[i].money+=850;</span><br><span class="line">            sum+=stu[i].money;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].money&gt;max)</span><br><span class="line">            &#123;</span><br><span class="line">                max=stu[i].money;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(stu[i].money==max)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%s\n%d\n&quot;</span>,stu[i].name,stu[i].money);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>聪聪的班主任王老师最近有点忙，可是他又是一位非常细心的老师，每次考试成绩都有专门的东西来记录，学期结束的时候给每位学生算了加权之后，他都要“关心关心”成绩不好的学生，并在假期给他们补补功课。什么是成绩不好呢？在王老师眼里，成绩不好当然就是加权成绩不及格咯！如今王老师这么忙，正好看你成天写程序闲着没事儿，于是他想让聪明的你来帮他写个程序，把那些不及格的同学的名单打印给他。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char name[25];</span><br><span class="line">    char num[15];</span><br><span class="line">    double score;</span><br><span class="line">&#125;stu[105];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,failnum;</span><br><span class="line">    int a[105];</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;105;i++) a[i]=-1;</span><br><span class="line">        failnum=0;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s\n%s\n%lf&quot;</span>,stu[i].name,stu[i].num,&amp;stu[i].score);</span><br><span class="line">            <span class="keyword">if</span>(stu[i].score&lt;60)</span><br><span class="line">            &#123;</span><br><span class="line">                failnum++;</span><br><span class="line">                a[i]=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(failnum==0) <span class="built_in">printf</span>(<span class="string">&quot;They are Great!!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,failnum);</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]!=-1)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,stu[i].name);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]!=-1)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,stu[i].num);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]!=-1)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>,stu[i].score);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h3><p>从键盘输入一些学生的学号(int),姓名(char 20)和成绩(double)，请你找出成绩从高到低的前三名同学的学号和姓名！本题用结构体来实现，结构体定义如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char name[25];</span><br><span class="line">    char num[15];</span><br><span class="line">    double score;</span><br><span class="line">&#125;stu[105];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i;</span><br><span class="line">    int max[5],maxl[5];</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        max[0]=max[1]=max[2]=-1;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s %s %lf&quot;</span>,stu[i].num,stu[i].name,&amp;stu[i].score);</span><br><span class="line">            <span class="keyword">if</span>(stu[i].score&gt;max[0])</span><br><span class="line">            &#123;</span><br><span class="line">                 max[0]=stu[i].score;</span><br><span class="line">                 maxl[0]=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n &amp;&amp; i!=maxl[0];i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].score&gt;max[1])</span><br><span class="line">            &#123;</span><br><span class="line">                 max[1]=stu[i].score;</span><br><span class="line">                 maxl[1]=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=maxl[0] &amp;&amp; i!=maxl[1])</span><br><span class="line">            <span class="keyword">if</span>(stu[i].score&gt;max[2])</span><br><span class="line">            &#123;</span><br><span class="line">                 max[2]=stu[i].score;</span><br><span class="line">                 maxl[2]=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;3;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>,stu[maxl[i]].num,stu[maxl[i]].name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>C</tag>
        <tag>基础</tag>
        <tag>锐格</tag>
      </tags>
  </entry>
  <entry>
    <title>C 语言实验 7</title>
    <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-7/</url>
    <content><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h5 id="六-动态数组"><a href="#六-动态数组" class="headerlink" title="六.动态数组"></a>六.动态数组</h5><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>约瑟夫环：<br>有n个人,围成一个环，编号为 0、1、2、3、、、n-1，从第一个人开始循环报数，假设数到m的那个人出列，然后从下一个人继续数数，再数到m出列，以此循环，最后那个人为胜利者，求胜利者的编号。<br>输入数据有多组，每组为n与m；每组数据单独1行输出,直接输出数组编号，不用+1处理；</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,m;</span><br><span class="line">    int *p;</span><br><span class="line">    int i;</span><br><span class="line">    int count;</span><br><span class="line">    int num;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        num=0;</span><br><span class="line">        count=0;</span><br><span class="line">        p=(int *)calloc(n,sizeof(int));</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">            *(p+i)=-1;</span><br><span class="line">        <span class="keyword">while</span>(num!=n-1)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(*(p+i)!=0) count++;</span><br><span class="line">                <span class="keyword">if</span>(count==m)</span><br><span class="line">                &#123;</span><br><span class="line">                    *(p+i)=0;</span><br><span class="line">                    num++;</span><br><span class="line">                    count=0;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(num==n-1) <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(*(p+i)==-1) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">        free(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<span id="more"></span>
<h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>求n个串中最长串：给定n个字符串，每个串长度小于100，求其中最长的字符串。输入数据有多组，每组构成形式如输入示例，输出该组字符串中最长的字符串，单独1行输出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,len,li,maxlen;</span><br><span class="line">    char (*p)[100];</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        getchar();getchar();</span><br><span class="line">        p=(char (*)[100])calloc(n,sizeof(char[100]));</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            gets((p+i));</span><br><span class="line">            len=strlen((p+i));</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">            &#123;</span><br><span class="line">                maxlen=len;</span><br><span class="line">                li=0;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(len&gt;maxlen)</span><br><span class="line">            &#123;</span><br><span class="line">                maxlen=len;</span><br><span class="line">                li=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,(p+li));</span><br><span class="line">        free(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>求平面中n个点之间最短线段长度：给定平面中n个点的坐标(x,y),求这个n个点之间最短连线距离。输入数据有多组，每组构成形式如输入示例，输出该组数据中最短边的距离长度，保留1位小数，单独1行输出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;math.h&gt;</span></span><br><span class="line">struct axis&#123;</span><br><span class="line">    double x;</span><br><span class="line">    double y;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,j;</span><br><span class="line">    struct axis *p;</span><br><span class="line">    double min,tmp;</span><br><span class="line">    double x1,y1,x2,y2;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        min=999.0;</span><br><span class="line">        p=(struct axis *)calloc(n,sizeof(struct axis));</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++) scanf(<span class="string">&quot;%lf %lf&quot;</span>,&amp;(p+i)-&gt;x,&amp;(p+i)-&gt;y);</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n-1;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(j=i+1;j&lt;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                x1=(p+i)-&gt;x;</span><br><span class="line">                y1=(p+i)-&gt;y;</span><br><span class="line">                x2=(p+j)-&gt;x;</span><br><span class="line">                y2=(p+j)-&gt;y;</span><br><span class="line">                tmp=(x1-x2)*(x1-x2)+(y1-y2)*(y1-y2);</span><br><span class="line">                <span class="keyword">if</span>(tmp&lt;min) min=tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1lf\n&quot;</span>,sqrt(min));</span><br><span class="line">        free(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>段落单词分解：给出一个段落，字符数小于1000，求单词及个数。数据输入为1组，输出单词个与单词，每个单词单独1行输出，格式见示例。</p>
<p><code>bash #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;string.h&gt; int main() &#123;     int i,j,num,flag,wordl,wordnum;     char a[1005];     char word[1005][80];     gets(a);     int l=strlen(a);     a[l]=&#39; &#39;;     a[l+1]=&#39;\0&#39;;     wordnum=0;     wordl=0;     flag=0;     num=0;     for(i=0;a[i]!=&#39;\0&#39;;i++)     &#123;         if(a[i]!=&#39; &#39;) flag=1;         else         &#123;              if(flag==1)              &#123;                  wordnum++;                  num++;                  wordl=0;              &#125;              flag=0;         &#125;         if(flag==1)         &#123;             word[wordnum][wordl++]=a[i];         &#125;     &#125;     printf(&quot;%d\n&quot;,num);     for(i=0;i&lt;num;i++)     &#123;         printf(&quot;%s\n&quot;,word[i]);     &#125; &#125;</code></p>
]]></content>
      <tags>
        <tag>C</tag>
        <tag>基础</tag>
        <tag>锐格</tag>
      </tags>
  </entry>
  <entry>
    <title>C 语言实验 8</title>
    <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-8/</url>
    <content><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h5 id="八-链表1-动态结点"><a href="#八-链表1-动态结点" class="headerlink" title="八.链表1-动态结点"></a>八.链表1-动态结点</h5><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>结点的申请和使用,假设结点的信息如下所示，利用该结构申请三个结点a，b，c。将他们依次链接在头结点H的后面，之后申请结点D，将D插入到b和c之间，最后按顺序输出该链表。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">struct node&#123;</span><br><span class="line">    int data;</span><br><span class="line">    struct node *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int t,i;</span><br><span class="line">    struct node *head,*p,*q,*addloca,*addst,*adden;</span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;3;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p=(struct node *)(malloc(sizeof(struct node)));</span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;(p-&gt;data));</span><br><span class="line">        <span class="keyword">if</span>(i==0)</span><br><span class="line">            head=q=p;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            q-&gt;next=p;</span><br><span class="line">        p-&gt;next=NULL;</span><br><span class="line">        q=p;</span><br><span class="line">    &#125;</span><br><span class="line">    p=(struct node *)(malloc(sizeof(struct node)));</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;data);</span><br><span class="line">    addloca=p;</span><br><span class="line"></span><br><span class="line">    addst=head-&gt;next;</span><br><span class="line">    adden=addst-&gt;next;</span><br><span class="line">    addst-&gt;next=addloca;</span><br><span class="line">    addloca-&gt;next=adden;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Head:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;4;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==0)</span><br><span class="line">            p=q=head;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            p=q-&gt;next;</span><br><span class="line">        q=p;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-&gt;%d&quot;</span>,p-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>多结点链表的创建（1）：根据读入的结点信息，利用尾插法创建链表。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">struct node&#123;</span><br><span class="line">    int data;</span><br><span class="line">    struct node *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i;</span><br><span class="line">    struct node *head,*p,*q;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct node *)(malloc(sizeof(struct node)));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;data);</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">            q=p;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                p=head;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p=q-&gt;next;</span><br><span class="line">            q=p;</span><br><span class="line">            <span class="keyword">if</span>(i==n-1) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,p-&gt;data);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d  &quot;</span>,p-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>多结点链表的创建（2）：结点的信息同第一题。根据读入的结点信息，利用头插法创建链表。创建方法是新结点总是在头结点H的后面插入,也就是在第一个正式的结点之前插入。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">struct node&#123;</span><br><span class="line">    int data;</span><br><span class="line">    struct node *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i;</span><br><span class="line">    struct node *head,*p,*q;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        head=(struct node *)(malloc(sizeof(struct node)));</span><br><span class="line">        head-&gt;next=NULL;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct node *)(malloc(sizeof(struct node)));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;data);</span><br><span class="line">            p-&gt;next=head-&gt;next;</span><br><span class="line">            head-&gt;next=p;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==0) q=p=head-&gt;next;</span><br><span class="line">            <span class="keyword">else</span> p=q-&gt;next;</span><br><span class="line">            q=p;</span><br><span class="line">            <span class="keyword">if</span>(i==n-1) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,p-&gt;data);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d  &quot;</span>,p-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>求链表的长度：根据读入的结点信息，利用尾插法创建链表。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">struct node&#123;</span><br><span class="line">    int data;</span><br><span class="line">    struct node *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int t,flag=0,i;</span><br><span class="line">    struct node *head,*p,*q;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;t)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(t==0) <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">        p=(struct node *)malloc(sizeof(struct node));</span><br><span class="line">        p-&gt;data=t;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(flag==0)</span><br><span class="line">            head=q=p;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            q-&gt;next=p;</span><br><span class="line">        p-&gt;next=NULL;</span><br><span class="line">        q=p;</span><br><span class="line">        flag++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;flag;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==0)</span><br><span class="line">        &#123;</span><br><span class="line">            p=q=head;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,p-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p=q-&gt;next;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  %d&quot;</span>,p-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">        q=p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%d\n&quot;</span>,flag);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h3><p>链表中的数据查找：利用前面的第2题创建链表，现要求写一个函数完成，按数值查找数据(找到第一个满足条件的即可)，在主函数中输出，如果找到了，这输出该数据在链表中的位置(利用w存放位置)，如果没找到则输出0。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct table&#123;</span><br><span class="line">    int num;</span><br><span class="line">    struct table *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,location,findnum,flag;</span><br><span class="line">    struct table *head,*p,*q;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=0;</span><br><span class="line">        location=0;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct table*)malloc(sizeof(struct table));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;num);</span><br><span class="line">            <span class="keyword">if</span>(i==0)&#123;</span><br><span class="line">                head=q=p;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            &#125;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">            q=p;</span><br><span class="line">        &#125;</span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;findnum);</span><br><span class="line">        p=head;</span><br><span class="line">        <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            location++;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;num==findnum)</span><br><span class="line">            &#123;</span><br><span class="line">                flag=1;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==1) <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,location,findnum);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>C</tag>
        <tag>基础</tag>
        <tag>锐格</tag>
      </tags>
  </entry>
  <entry>
    <title>C 语言实验 9</title>
    <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-9/</url>
    <content><![CDATA[<h4 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h4><h5 id="九-链表2-基本访问操作"><a href="#九-链表2-基本访问操作" class="headerlink" title="九.链表2-基本访问操作"></a>九.链表2-基本访问操作</h5><h3 id="1、"><a href="#1、" class="headerlink" title="1、"></a>1、</h3><p>查找指定结点的前驱。利用前面学到的尾插法创建链表的方法，建立一个具有n个结点的单链表，之后输入一个整数x，查找x在链表中的前驱结点是哪个？若x是第一个结点，则输出“没有前驱”，如果x不存在，则输出“x不存在”。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct table&#123;</span><br><span class="line">    int num;</span><br><span class="line">    struct table* next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i;</span><br><span class="line">    int findnum,flag;</span><br><span class="line">    struct table *head,*p,*q;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=0;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct table *)malloc(sizeof(struct table));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;num);</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;findnum);</span><br><span class="line">        q=p=head;</span><br><span class="line">        <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;num==findnum)</span><br><span class="line">            &#123;</span><br><span class="line">                flag=1;</span><br><span class="line">                <span class="keyword">if</span>(p==head)&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;没有前驱\n&quot;</span>);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,q-&gt;num);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            q=p;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==0) <span class="built_in">printf</span>(<span class="string">&quot;x不存在\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h3 id="2、"><a href="#2、" class="headerlink" title="2、"></a>2、</h3><p>查找链表中有多少个值为偶数的结点。利用前面学到的头插法创建链表的方法，建立一个具有n个结点的单链表，之后统计一下该链表中有多少个值为偶数的结点。有则输出个数，没有则输出0。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct table&#123;</span><br><span class="line">    int num;</span><br><span class="line">    struct table *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int i,n;</span><br><span class="line">    struct table *head,*q,*p;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct table *)malloc(sizeof(struct table));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;num);</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        p=head;</span><br><span class="line">        int num=0;</span><br><span class="line">        <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((p-&gt;num)%2==0) num++;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3、"><a href="#3、" class="headerlink" title="3、"></a>3、</h3><p>删除所有结点值为x的结点。利用前面学到的尾插法创建链表的方法，建立一个具有n个结点的单链表，之后删除其中所有值为x的结点（设x有多个）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct table&#123;</span><br><span class="line">    int num;</span><br><span class="line">    struct table *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int i,n;</span><br><span class="line">    struct table *head,*q,*p;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct table *)malloc(sizeof(struct table));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;num);</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        int deletenum;</span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;deletenum);</span><br><span class="line">        q=p=head;</span><br><span class="line">        <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;num==deletenum)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(p==head)&#123;</span><br><span class="line">                    head=head-&gt;next;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    q-&gt;next=p-&gt;next;</span><br><span class="line">                    p=p-&gt;next;</span><br><span class="line">                    <span class="built_in">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            q=p;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,head-&gt;num);</span><br><span class="line">        p=head-&gt;next;</span><br><span class="line">        <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  %d&quot;</span>,p-&gt;num);</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4、"><a href="#4、" class="headerlink" title="4、"></a>4、</h3><p>利用尾插法建立一个递增有序的链表，（输入值有序即可），之后在这个链表中插1个x值，使链表仍然有序。利用前面学到的尾插法创建链表的方法，建立一个具有n个结点的递增有序的单链表，（此处使输入的数值递增有序即可），之后再输入一个整数x，将x插入到上述链表的合适的位置上，使得链表仍然有序。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct table&#123;</span><br><span class="line">    int num;</span><br><span class="line">    struct table *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int i,n;</span><br><span class="line">    struct table *head,*q,*p,*t;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct table *)malloc(sizeof(struct table));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;num);</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        int insertnum;</span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;insertnum);</span><br><span class="line">        q=p=head;</span><br><span class="line">        <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;num&gt;insertnum)</span><br><span class="line">            &#123;</span><br><span class="line">                t=(struct table *)malloc(sizeof(struct table));</span><br><span class="line">                t-&gt;num=insertnum;</span><br><span class="line">                <span class="keyword">if</span>(p==head)&#123;</span><br><span class="line">                    t-&gt;num=head-&gt;num;</span><br><span class="line">                    head-&gt;num=insertnum;</span><br><span class="line">                    t-&gt;next=head-&gt;next;</span><br><span class="line">                    head-&gt;next=t;</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    t-&gt;next=q-&gt;next;</span><br><span class="line">                    q-&gt;next=t;</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;next==NULL &amp;&amp; insertnum&gt;p-&gt;num)</span><br><span class="line">            &#123;</span><br><span class="line">                t=(struct table *)malloc(sizeof(struct table));</span><br><span class="line">                t-&gt;num=insertnum;</span><br><span class="line">                t-&gt;next=NULL;</span><br><span class="line">                p-&gt;next=t;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            q=p;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        p=head-&gt;next;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,head-&gt;num);</span><br><span class="line">        <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  %d&quot;</span>,p-&gt;num);</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5、"><a href="#5、" class="headerlink" title="5、"></a>5、</h3><p>利用第4题中有序表插入数值的思想，编写程序，从空链表开始，逐个插入结点，最终建立一个递增有序的链表。完成输入和输出函数。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct stu&#123;</span><br><span class="line">    int num;</span><br><span class="line">    struct stu *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,j,t;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        struct stu *head,*p,*q;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;num);</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        p=q=head;</span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">            q=p-&gt;next;</span><br><span class="line">            <span class="keyword">while</span>(q)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(q-&gt;num&lt;p-&gt;num)</span><br><span class="line">                &#123;</span><br><span class="line">                    t=q-&gt;num;</span><br><span class="line">                    q-&gt;num=p-&gt;num;</span><br><span class="line">                    p-&gt;num=t;</span><br><span class="line">                &#125;</span><br><span class="line">                q=q-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        p=head-&gt;next;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,head-&gt;num);</span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  %d&quot;</span>,p-&gt;num);</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>C</tag>
        <tag>基础</tag>
        <tag>锐格</tag>
      </tags>
  </entry>
  <entry>
    <title>C 语言实验 10</title>
    <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-10/</url>
    <content><![CDATA[<h4 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h4><h5 id="10-十一-链表3-基本应用"><a href="#10-十一-链表3-基本应用" class="headerlink" title="10.十一. 链表3-基本应用"></a>10.十一. 链表3-基本应用</h5><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>链表的创建（1）：根据读入的学生信息，利用尾插法创建链表。学生的信息包括：学号（unsigned int）、姓名（char [20]，不含空格）、3门课的成绩（double），平均成绩和总成绩，其中每个学生的平均成绩和总成绩由前面读入的数值通过计算得到（均保留2位小数）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct stu&#123;</span><br><span class="line">    unsigned int num;</span><br><span class="line">    char name[25];</span><br><span class="line">    double classa;</span><br><span class="line">    double classb;</span><br><span class="line">    double classc;</span><br><span class="line">    double aver;</span><br><span class="line">    double sum;</span><br><span class="line">    struct stu *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i;</span><br><span class="line">    struct stu *head,*q,*p;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">            scanf(<span class="string">&quot;%u %s %lf %lf %lf&quot;</span>,&amp;p-&gt;num,</span><br><span class="line">p-&gt;name,&amp;p-&gt;classa,&amp;p-&gt;classb,&amp;p-&gt;classc);</span><br><span class="line">            p-&gt;sum=(p-&gt;classa+p-&gt;classb+p-&gt;classc);</span><br><span class="line">            p-&gt;aver=(p-&gt;sum)/3.0;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        p=head;</span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%u  %s  %.2lf  %.2lf  %.2lf  %.2lf  %.2lf\n&quot;</span>,p-&gt;num,p-&gt;name,</span><br><span class="line">p-&gt;classa,p-&gt;classb,p-&gt;classc,p-&gt;aver,p-&gt;sum);</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>


<h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>链表中数据的查找：利用前面的第一题创建链表，现要求写一个函数完成，按学号查找数据，在主函数中输出，如果找到了，这输出该数据在链表中的位置(利用w存放位置)，如果没找到则输出0。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct stu&#123;</span><br><span class="line">    unsigned int num;</span><br><span class="line">    char name[25];</span><br><span class="line">    double classa;</span><br><span class="line">    double classb;</span><br><span class="line">    double classc;</span><br><span class="line">    double aver;</span><br><span class="line">    double sum;</span><br><span class="line">    struct stu *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,l,flag;</span><br><span class="line">    unsigned findnum;</span><br><span class="line">    struct stu *head,*q,*p;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">            scanf(<span class="string">&quot;%u %s %lf %lf %lf&quot;</span>,&amp;p-&gt;num,p-&gt;name,&amp;p-&gt;classa,&amp;p-&gt;classb,&amp;p-&gt;classc);</span><br><span class="line">            p-&gt;sum=(p-&gt;classa+p-&gt;classb+p-&gt;classc);</span><br><span class="line">            p-&gt;aver=(p-&gt;sum)/3.0;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        scanf(<span class="string">&quot;%u&quot;</span>,&amp;findnum);</span><br><span class="line">        l=0;</span><br><span class="line">        flag=0;</span><br><span class="line">        p=head;</span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">            l++;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;num==findnum)</span><br><span class="line">            &#123;</span><br><span class="line">                flag=1;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d  %u  %s  %.2lf  %.2lf  %.2lf  %.2lf  %.2lf\n&quot;</span>,l,p-&gt;num,p-&gt;name,</span><br><span class="line">p-&gt;classa,p-&gt;classb,p-&gt;classc,p-&gt;aver,p-&gt;sum);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==0) <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3、"><a href="#3、" class="headerlink" title="3、"></a>3、</h3><p>有序链表的插入：通过输入学号有序的序列，利用尾插法建立链表。在创建完且学号有序的链表中插入一个新学生信息，使得插入后的链表仍然按照学号有序排列。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct stu&#123;</span><br><span class="line">    unsigned int num;</span><br><span class="line">    char name[25];</span><br><span class="line">    double classa;</span><br><span class="line">    double classb;</span><br><span class="line">    double classc;</span><br><span class="line">    double aver;</span><br><span class="line">    double sum;</span><br><span class="line">    struct stu *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i;</span><br><span class="line">    int flag=0;</span><br><span class="line">    struct stu *head,*q,*p;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=0;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">            scanf(<span class="string">&quot;%u %s %lf %lf %lf&quot;</span>,&amp;p-&gt;num,p-&gt;name,&amp;p-&gt;classa,&amp;p-&gt;classb,&amp;p-&gt;classc);</span><br><span class="line">            p-&gt;sum=(p-&gt;classa+p-&gt;classb+p-&gt;classc);</span><br><span class="line">            p-&gt;aver=(p-&gt;sum)/3.0;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        p=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">        scanf(<span class="string">&quot;%u %s %lf %lf %lf&quot;</span>,&amp;p-&gt;num,p-&gt;name,&amp;p-&gt;classa,&amp;p-&gt;classb,&amp;p-&gt;classc);</span><br><span class="line">        p-&gt;sum=(p-&gt;classa+p-&gt;classb+p-&gt;classc);</span><br><span class="line">        p-&gt;aver=(p-&gt;sum)/3.0;</span><br><span class="line">        p-&gt;next=NULL;</span><br><span class="line">        q=head;</span><br><span class="line">        struct stu *be;</span><br><span class="line">        be=head;</span><br><span class="line">        <span class="keyword">while</span>(q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((q-&gt;num)&gt;(p-&gt;num))</span><br><span class="line">            &#123;</span><br><span class="line">                flag=1;</span><br><span class="line">                <span class="keyword">if</span>(q==head)</span><br><span class="line">                &#123;</span><br><span class="line">                    p-&gt;next=head-&gt;next;</span><br><span class="line">                    struct stu *t;</span><br><span class="line">                    t=head;</span><br><span class="line">                    head=p;</span><br><span class="line">                    p=t;</span><br><span class="line">                    head-&gt;next=p;</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    p-&gt;next=be-&gt;next;</span><br><span class="line">                    be-&gt;next=p;</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(q-&gt;next==NULL &amp;&amp; flag==0)</span><br><span class="line">            &#123;</span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            be=q;</span><br><span class="line">            q=q-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        p=head;</span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%u  %s  %.2lf  %.2lf  %.2lf  %.2lf  %.2lf\n&quot;</span>,p-&gt;num,p-&gt;name,p-&gt;classa,</span><br><span class="line"></span><br><span class="line">p-&gt;classb,p-&gt;classc,p-&gt;aver,p-&gt;sum);</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4、"><a href="#4、" class="headerlink" title="4、"></a>4、</h3><p>链表的删除：在前面的第一题创建完的链表中按照学号删除一个学生的信息。(注：学号唯一)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct stu&#123;</span><br><span class="line">    unsigned int num;</span><br><span class="line">    char name[25];</span><br><span class="line">    double classa;</span><br><span class="line">    double classb;</span><br><span class="line">    double classc;</span><br><span class="line">    double aver;</span><br><span class="line">    double sum;</span><br><span class="line">    struct stu *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,dnum,flag;</span><br><span class="line">    struct stu *head,*q,*p;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=0;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">            scanf(<span class="string">&quot;%u %s %lf %lf %lf&quot;</span>,&amp;p-&gt;num,p-&gt;name,&amp;p-&gt;classa,&amp;p-&gt;classb,&amp;p-&gt;classc);</span><br><span class="line">            p-&gt;sum=(p-&gt;classa+p-&gt;classb+p-&gt;classc);</span><br><span class="line">            p-&gt;aver=(p-&gt;sum)/3.0;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;dnum);</span><br><span class="line">        p=head;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(p-&gt;next!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            q=p;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;num==dnum)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(p==head)</span><br><span class="line">                &#123;</span><br><span class="line">                    head=p-&gt;next;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    q-&gt;next=p-&gt;next;</span><br><span class="line">                &#125;</span><br><span class="line">                flag=1;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==0) <span class="built_in">printf</span>(<span class="string">&quot;Error\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p=head;</span><br><span class="line">            <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">            &#123;</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">&quot;%u  %s  %.2lf  %.2lf  %.2lf  %.2lf  %.2lf\n&quot;</span>,p-&gt;num,p-&gt;name,p-&gt;classa,</span><br><span class="line">p-&gt;classb,p-&gt;classc,p-&gt;aver,p-&gt;sum);</span><br><span class="line">                p=p-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5、"><a href="#5、" class="headerlink" title="5、"></a>5、</h3><p>按照有序表的插入算法，建立一个有序的链表：根据第3题的思想，建立一个总成绩有序的链表，即从一个空的头结点开始，按照有序表的插入，逐个输入要插入的信息，依次插入到合适的位置，最终建立一个总成绩有序的链表，按照总成绩降序排列。<br>学生的信息包括：学号（unsigned int）、姓名（char [20]，不含空格）、3门课的成绩（double），平均成绩和总成绩，其中每个学生的平均成绩和总成绩由前面读入的数值通过计算得到（均保留2位小数）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct stu&#123;</span><br><span class="line">    unsigned int num;</span><br><span class="line">    char name[25];</span><br><span class="line">    double classa;</span><br><span class="line">    double classb;</span><br><span class="line">    double classc;</span><br><span class="line">    double aver;</span><br><span class="line">    double sum;</span><br><span class="line">    struct stu *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,l;</span><br><span class="line">    unsigned findnum;</span><br><span class="line">    struct stu *head,*q,*p,*tp,*tq,*t;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        head=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">            scanf(<span class="string">&quot;%u %s %lf %lf %lf&quot;</span>,&amp;p-&gt;num,p-&gt;name,&amp;p-&gt;classa,&amp;p-&gt;classb,&amp;p-&gt;classc);</span><br><span class="line">            p-&gt;sum=(p-&gt;classa+p-&gt;classb+p-&gt;classc);</span><br><span class="line">            p-&gt;aver=(p-&gt;sum)/3.0;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">            &#123;</span><br><span class="line">                 head-&gt;next=p;</span><br><span class="line">                 p-&gt;next=NULL;</span><br><span class="line">                 q=p;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                tq=tp=head-&gt;next;</span><br><span class="line">                <span class="keyword">while</span>(tp!=NULL &amp;&amp; (tp-&gt;sum)&gt;(p-&gt;sum))</span><br><span class="line">                &#123;</span><br><span class="line">                    tq=tp;</span><br><span class="line">                    tp=tp-&gt;next;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(tp==head-&gt;next)&#123;</span><br><span class="line">                    t=head-&gt;next;</span><br><span class="line">                    head-&gt;next=p;</span><br><span class="line">                    p-&gt;next=t;</span><br><span class="line">                    q=t;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(tp==NULL)&#123;</span><br><span class="line">                    q-&gt;next=p;</span><br><span class="line">                    p-&gt;next=NULL;</span><br><span class="line">                    q=p;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    t=tq-&gt;next;</span><br><span class="line">                    tq-&gt;next=p;</span><br><span class="line">                    p-&gt;next=t;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        p=head-&gt;next;</span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%u  %s  %.2lf  %.2lf  %.2lf  %.2lf  %.2lf\n&quot;</span>,p-&gt;num,p-&gt;name,p-&gt;classa,</span><br><span class="line">p-&gt;classb,p-&gt;classc,p-&gt;aver,p-&gt;sum);</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>C</tag>
        <tag>基础</tag>
        <tag>锐格</tag>
      </tags>
  </entry>
  <entry>
    <title>C 语言实验 1</title>
    <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-1/</url>
    <content><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h5 id="一-字符串"><a href="#一-字符串" class="headerlink" title="一.字符串"></a>一.字符串</h5><h6 id="1-大写变小写。读一个字符串（长度-lt-10），将其中出现的大写字母统统变成小写字母，此后输出改变后的字符串"><a href="#1-大写变小写。读一个字符串（长度-lt-10），将其中出现的大写字母统统变成小写字母，此后输出改变后的字符串" class="headerlink" title="1.大写变小写。读一个字符串（长度&lt;10），将其中出现的大写字母统统变成小写字母，此后输出改变后的字符串"></a>1.大写变小写。读一个字符串（长度&lt;10），将其中出现的大写字母统统变成小写字母，此后输出改变后的字符串</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#define LEN 10</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">   char array[LEN];</span><br><span class="line">   int i;</span><br><span class="line">   gets(array);</span><br><span class="line">   i=0;</span><br><span class="line">   <span class="keyword">while</span>(array[i]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      //start</span><br><span class="line">            <span class="keyword">if</span>(array[i]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; array[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">      &#123;</span><br><span class="line">          array[i]+=32;</span><br><span class="line">      &#125;</span><br><span class="line">      i++;</span><br><span class="line">      //end</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,array);</span><br><span class="line">   <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<span id="more"></span>

<hr>
<h6 id="2-碱基序列配对。已知DNA的一条链的碱基序列，求与之配对的DNA链的碱基序列。配对的规则为：A-T；G-C。"><a href="#2-碱基序列配对。已知DNA的一条链的碱基序列，求与之配对的DNA链的碱基序列。配对的规则为：A-T；G-C。" class="headerlink" title="2.碱基序列配对。已知DNA的一条链的碱基序列，求与之配对的DNA链的碱基序列。配对的规则为：A-T；G-C。"></a>2.碱基序列配对。已知DNA的一条链的碱基序列，求与之配对的DNA链的碱基序列。配对的规则为：A-T；G-C。</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#define LEN 100</span></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    char one[LEN],the_other[LEN];  //one用于存储原串；the_other用于存储匹配串</span><br><span class="line">    int i,j;</span><br><span class="line">    gets(one);</span><br><span class="line">    i=0, j=0;</span><br><span class="line">    <span class="keyword">while</span>(one[i]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       //start</span><br><span class="line">       <span class="keyword">if</span>(one[i]==<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">       &#123;</span><br><span class="line">           the_other[j]=<span class="string">&#x27;T&#x27;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="keyword">if</span>(one[i]==<span class="string">&#x27;T&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            the_other[j]=<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(one[i]==<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">             the_other[j]=<span class="string">&#x27;G&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(one[i]==<span class="string">&#x27;G&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            the_other[j]=<span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         ++i;</span><br><span class="line">         ++j;</span><br><span class="line">       //end</span><br><span class="line">    &#125;</span><br><span class="line">    the_other[j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    puts(the_other);</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h6 id="3-数据压缩存储（函数实现）。已知一段二进制0-1代码，长度小于100，以数字0开头，请试着用压缩后的方法将其显示出来。输入数据有多组。比如输入以数字0开头二进制0-1代码：000000111100011110000011；则输出为：6-4-3-4-5-2。"><a href="#3-数据压缩存储（函数实现）。已知一段二进制0-1代码，长度小于100，以数字0开头，请试着用压缩后的方法将其显示出来。输入数据有多组。比如输入以数字0开头二进制0-1代码：000000111100011110000011；则输出为：6-4-3-4-5-2。" class="headerlink" title="3.数据压缩存储（函数实现）。已知一段二进制0-1代码，长度小于100，以数字0开头，请试着用压缩后的方法将其显示出来。输入数据有多组。比如输入以数字0开头二进制0-1代码：000000111100011110000011；则输出为：6 4 3 4 5 2。"></a>3.数据压缩存储（函数实现）。已知一段二进制0-1代码，长度小于100，以数字0开头，请试着用压缩后的方法将其显示出来。输入数据有多组。比如输入以数字0开头二进制0-1代码：000000111100011110000011；则输出为：6 4 3 4 5 2。</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#define LEN 100</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">   int compress(char array[], int count[]);</span><br><span class="line">   char array[LEN];</span><br><span class="line">   int count[LEN];</span><br><span class="line">   int i;</span><br><span class="line">   int tail; //count数组的有效最末下标</span><br><span class="line">  <span class="keyword">while</span>(scanf(<span class="string">&quot;%s&quot;</span>,array)!=-1)</span><br><span class="line">   &#123;</span><br><span class="line">      tail = compress(array, count);</span><br><span class="line">      <span class="keyword">for</span>(i=0;i&lt;tail;i++)</span><br><span class="line">        i&lt;tail-1 ? <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,count[i]) : <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,count[i]);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line">int compress(char array[], int count[])</span><br><span class="line">&#123;</span><br><span class="line">//start</span><br><span class="line">    int num=1,i,bef=array[0],j=0;</span><br><span class="line">    <span class="keyword">for</span>(i=1;array[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(array[i]==bef)</span><br><span class="line">        &#123;</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            bef=array[i];</span><br><span class="line">            count[j++]=num;</span><br><span class="line">            num=1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    count[j]=num;</span><br><span class="line">    <span class="built_in">return</span> ++j;</span><br><span class="line">//end</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h6 id="4-凯撒加密。已知的最古老的一种加密技术是凯撒加密。该方法把一条消息中的每个字母用字母表中固定距离之后的那个来替代。（如果越过了字母Z，会绕回到字母表的起始位置。例如，如果每个字母都用字母表中两个位置之后的字母代替，那么Y就被替换为A，Z就被替换为B。）编写程序用凯撒加密方法对消息进行加密。用户输入待加密的消息和移位计数（字母移动的位置数目）："><a href="#4-凯撒加密。已知的最古老的一种加密技术是凯撒加密。该方法把一条消息中的每个字母用字母表中固定距离之后的那个来替代。（如果越过了字母Z，会绕回到字母表的起始位置。例如，如果每个字母都用字母表中两个位置之后的字母代替，那么Y就被替换为A，Z就被替换为B。）编写程序用凯撒加密方法对消息进行加密。用户输入待加密的消息和移位计数（字母移动的位置数目）：" class="headerlink" title="4.凯撒加密。已知的最古老的一种加密技术是凯撒加密。该方法把一条消息中的每个字母用字母表中固定距离之后的那个来替代。（如果越过了字母Z，会绕回到字母表的起始位置。例如，如果每个字母都用字母表中两个位置之后的字母代替，那么Y就被替换为A，Z就被替换为B。）编写程序用凯撒加密方法对消息进行加密。用户输入待加密的消息和移位计数（字母移动的位置数目）："></a>4.凯撒加密。已知的最古老的一种加密技术是凯撒加密。该方法把一条消息中的每个字母用字母表中固定距离之后的那个来替代。（如果越过了字母Z，会绕回到字母表的起始位置。例如，如果每个字母都用字母表中两个位置之后的字母代替，那么Y就被替换为A，Z就被替换为B。）编写程序用凯撒加密方法对消息进行加密。用户输入待加密的消息和移位计数（字母移动的位置数目）：</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#define LEN 81</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">   void Caesar_transform(char message[], int <span class="built_in">shift</span>);</span><br><span class="line">   char message[LEN];</span><br><span class="line">   int <span class="built_in">shift</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Enter message to be encrypted: &quot;</span>);</span><br><span class="line">   gets(message);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Enter shift amount (1-25): &quot;</span>);</span><br><span class="line">   scanf(<span class="string">&quot;%d&quot;</span>,&amp;<span class="built_in">shift</span>);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Encrypted message: &quot;</span>);</span><br><span class="line">   Caesar_transform(message, <span class="built_in">shift</span>);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,message);</span><br><span class="line">   <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line">void Caesar_transform(char message[], int <span class="built_in">shift</span>)</span><br><span class="line">&#123;</span><br><span class="line">//start</span><br><span class="line"><span class="keyword">for</span>(int i=0;i&lt;LEN;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(message[i]&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;message[i]&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">    message[i]=(message[i]-<span class="string">&#x27;a&#x27;</span>+<span class="built_in">shift</span>)%26+<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">     <span class="keyword">if</span>(message[i]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;message[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">    message[i]=(message[i]-<span class="string">&#x27;A&#x27;</span>+<span class="built_in">shift</span>)%26+<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//end</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="5-单词逆序输出。编写程序颠倒句子中的单词的顺序："><a href="#5-单词逆序输出。编写程序颠倒句子中的单词的顺序：" class="headerlink" title="5.单词逆序输出。编写程序颠倒句子中的单词的顺序："></a>5.单词逆序输出。编写程序颠倒句子中的单词的顺序：</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#define LEN 500</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">   char array[LEN], ch;</span><br><span class="line">   int i, is_word, count_word;</span><br><span class="line">   printf(&quot;Enter a sentence: &quot;);</span><br><span class="line">   i=0;</span><br><span class="line">   is_word = 0;     //之前一个字符为字母（实为非分隔符）：1；反之：0</span><br><span class="line">   count_word = 0;  //记录句子中的单词个数</span><br><span class="line">   while(1)</span><br><span class="line">   &#123;</span><br><span class="line">       array[i]=getchar();</span><br><span class="line">       if(array[i]!=&#x27;?&#x27;&amp;&amp;array[i]!=&#x27;!&#x27;&amp;&amp;array[i]!=&#x27;.&#x27;) //不是句子结束标志吗？</span><br><span class="line">       &#123;</span><br><span class="line">          if(array[i]!=&#x27; &#x27;&amp;&amp;array[i]!=&#x27;\t&#x27;)            //是字母吗？</span><br><span class="line">          &#123;</span><br><span class="line">              if(is_word==0)</span><br><span class="line">              &#123;</span><br><span class="line">                 count_word++;</span><br><span class="line">                 is_word = 1;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          else if(is_word==1)</span><br><span class="line">              is_word = 0;</span><br><span class="line">          i++;</span><br><span class="line">       &#125;</span><br><span class="line">       else</span><br><span class="line">       &#123;</span><br><span class="line">           ch = array[i];</span><br><span class="line">           array[i] = &#x27;\0&#x27;;</span><br><span class="line">           break;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   printf(&quot;Reversal of sentence: &quot;);</span><br><span class="line">   is_word = 0;</span><br><span class="line">   while(i!=-1)  //此时从句子末尾开始向句子的开始方向做回退式的判断并考虑做逐个单词的输出</span><br><span class="line">   &#123;</span><br><span class="line">      //start</span><br><span class="line">      int j,k;</span><br><span class="line">      for(k=0;;k++)</span><br><span class="line">      &#123;</span><br><span class="line">          if(array[k]==&#x27; &#x27;) array[k]=&#x27;*&#x27;;</span><br><span class="line">          else break;</span><br><span class="line">      &#125;</span><br><span class="line">      if(count_word&gt;=0) count_word=-1;</span><br><span class="line">      if(is_word==0)&#123;</span><br><span class="line">        is_word=-1;</span><br><span class="line">      &#125;else&#123;</span><br><span class="line"></span><br><span class="line">          if(array[i]!=&#x27; &#x27; &amp;&amp; count_word==-1)&#123;</span><br><span class="line">              is_word = i;</span><br><span class="line">              count_word=-2;</span><br><span class="line">          &#125;</span><br><span class="line">          if(array[i]==&#x27; &#x27; &amp;&amp; count_word==-2)&#123;</span><br><span class="line">             for(j=i+1;j&lt;=is_word;j++)</span><br><span class="line">                printf(&quot;%c&quot;,array[j]);</span><br><span class="line">                printf(&quot; &quot;);</span><br><span class="line">             count_word=-1;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      if(array[i]==&#x27;*&#x27;)&#123;</span><br><span class="line">          for(j=i+1;array[j]!=&#x27; &#x27;;j++)</span><br><span class="line">            printf(&quot;%c&quot;,array[j]);</span><br><span class="line">            i=0;</span><br><span class="line">            break;</span><br><span class="line">      &#125;</span><br><span class="line">    if(i==0)&#123;</span><br><span class="line">        for(j=i;array[j]!=&#x27; &#x27;;j++)</span><br><span class="line">            printf(&quot;%c&quot;,array[j]);</span><br><span class="line">        break;</span><br><span class="line">      &#125;</span><br><span class="line">      i--;</span><br><span class="line">      //end</span><br><span class="line">   &#125;</span><br><span class="line">   printf(&quot;%c\n&quot;,ch);</span><br><span class="line">   return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>C</tag>
        <tag>基础</tag>
        <tag>锐格</tag>
      </tags>
  </entry>
</search>
